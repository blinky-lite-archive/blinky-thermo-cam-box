[
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Web App Socket Router",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a858ad3a.95706",
        "type": "tab",
        "label": "Web Launchers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c854ea3.68416",
        "type": "tab",
        "label": "Web Apps 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ffe6c625.6b4a58",
        "type": "tab",
        "label": "Web Apps 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ec67d8c2.3f3c98",
        "type": "tab",
        "label": "Cam Web Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d6667d7b.35cd6",
        "type": "tab",
        "label": "Kallis",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2b074b3a.632fb4",
        "type": "tab",
        "label": "Brantevik",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef3780c6.c3ac3",
        "type": "tab",
        "label": "SolarCalculator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "blinky-lite-dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "blinky-lite-Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "blinky-lite-scalarDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "blinky-lite-vectorDevice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f22a539a.a67b3",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "48e0f477.ea0e4c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "a3eb7ad8.27c498"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Device Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2dba0745.a98d98",
        "type": "subflow",
        "name": "Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "3deefd6d.1dde92"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 60,
                "wires": [
                    {
                        "id": "f3358361.19029",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1120,
                "y": 120,
                "wires": [
                    {
                        "id": "f728a8f0.ad8b68",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2d027d69.1fdeb2",
        "type": "subflow",
        "name": "App Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3966deae.453262"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 60,
                "wires": [
                    {
                        "id": "3966deae.453262",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "495f0879.c831c8",
        "type": "subflow",
        "name": "Core Role Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "8e411315.2b09f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 40,
                "wires": [
                    {
                        "id": "8e411315.2b09f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "fee416c.fb205e8",
        "type": "subflow",
        "name": "Action Permission Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "54f691be.e6b47"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 40,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 760,
                "y": 120,
                "wires": [
                    {
                        "id": "92d40c38.2026a",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d7162906.0afcd8",
        "type": "subflow",
        "name": "Public HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "6ca560.6e2ceaa"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "adce79c2.bd6fa8",
        "type": "subflow",
        "name": "Widget Html",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "132e93cb.ae000c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "path": "/scalarArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "path": "/scalarPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "path": "/vectorPlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "path": "/vectorArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "path": "/scalarViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2b65833e.87911c",
        "type": "websocket-listener",
        "path": "/scalarAlarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "23623a1c.e4ce46",
        "type": "nexmobasic"
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e71c9288.03dd3",
        "type": "websocket-listener",
        "path": "/blinky-basic/websocket",
        "wholemsg": "false"
    },
    {
        "id": "9375a6d1.3e14e8",
        "type": "websocket-listener",
        "path": "/control-apps/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c4d6389f.42aca8",
        "type": "websocket-listener",
        "path": "/blinky-stepper/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c0c4adc.e7b956",
        "type": "websocket-listener",
        "path": "/blinky-power-relay/websocket",
        "wholemsg": "false"
    },
    {
        "id": "557f40b4.fc262",
        "type": "websocket-listener",
        "path": "/blinky-shiver-expert/websocket",
        "wholemsg": "false"
    },
    {
        "id": "19f426d.ba145d9",
        "type": "websocket-listener",
        "path": "/blinky-shiver-simple/websocket",
        "wholemsg": "false"
    },
    {
        "id": "11409eb4.88d3c1",
        "type": "websocket-listener",
        "path": "/blinky-shaker/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c9f0eb6c.93d8d8",
        "type": "websocket-listener",
        "path": "/blinky-thermo/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8a054889.379478",
        "type": "websocket-listener",
        "path": "/solar-regulator/websocket",
        "wholemsg": "false"
    },
    {
        "id": "ffc8491b.7eba18",
        "type": "websocket-listener",
        "path": "/blinky-cosmic-interval/websocket",
        "wholemsg": "false"
    },
    {
        "id": "41e2977d.e61d58",
        "type": "websocket-listener",
        "path": "/blinky-relay-bake/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e1d2437b.14b8a",
        "type": "websocket-listener",
        "path": "/blinky-env/websocket",
        "wholemsg": "false"
    },
    {
        "id": "78f65260.780d3c",
        "type": "websocket-listener",
        "path": "/blinky-ssr-bake/websocket",
        "wholemsg": "false"
    },
    {
        "id": "40f038e6.5f0818",
        "type": "websocket-listener",
        "path": "/blinky-thermo-cam/websocket",
        "wholemsg": "false"
    },
    {
        "id": "839103c3.87224",
        "type": "websocket-listener",
        "path": "/blinky-thermo-cam-archive/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e2cece33.d4cad",
        "type": "mongodb3",
        "uri": "$(MONGODBCAMIP)",
        "name": "blinky-thermo-cam",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "d61dce7c.c084a",
        "type": "websocket-listener",
        "path": "/nb-freezer-mon/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c1211ec2.5887d",
        "type": "websocket-listener",
        "path": "/blinky-wind/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fc576385.12f95",
        "type": "websocket-listener",
        "path": "/blinky-DS18B20/websocket",
        "wholemsg": "false"
    },
    {
        "id": "417794ff.011e5c",
        "type": "websocket-listener",
        "path": "/blinky-turnstile/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c026b071.1e826",
        "type": "websocket-listener",
        "path": "/blinky-wind-view/websocket",
        "wholemsg": "false"
    },
    {
        "id": "85c4c7aa.d48438",
        "type": "websocket-listener",
        "path": "/kallis-bathers/websocket",
        "wholemsg": "false"
    },
    {
        "id": "f4be01a.3f255",
        "type": "websocket-listener",
        "path": "/kallis-weather/websocket",
        "wholemsg": "false"
    },
    {
        "id": "4d01cc56.b625c4",
        "type": "websocket-listener",
        "path": "/brantevik-widget/websocket",
        "wholemsg": "false"
    },
    {
        "id": "55bc820e.81f5ac",
        "type": "websocket-listener",
        "path": "/kallis-widget/websocket",
        "wholemsg": "false"
    },
    {
        "id": "dddd1a95.f87278",
        "type": "websocket-listener",
        "path": "/blinky-webcam/websocket",
        "wholemsg": "false"
    },
    {
        "id": "508cc5df.e1e3cc",
        "type": "websocket-listener",
        "path": "/solar-field-designer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e865fc91.88a2a",
        "type": "websocket-listener",
        "path": "/mybrantevik-widget/websocket",
        "wholemsg": "false"
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarPlotter",
        "url": "/scalarPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "83301a46.e7b368"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarPlotter",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1750,
        "y": 300,
        "wires": []
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "80b3fbd.ba21908"
            ],
            [
                "ccb4a4a2.49a2e8"
            ],
            [
                "8e79cfec.1347"
            ],
            [
                "98c9d4ad.3f54f8"
            ],
            [
                "4819746c.65db8c"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 300,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n            </tr>\n        </table>\n    </div>\n    <div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <table>\n                    <tr>\n                        <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                        <td width=50% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                         <td align=\"center\">\n                            <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\">Start Plot</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 1190,
        "y": 40,
        "wires": [
            [
                "72941646.0206b8"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "818972ac.61492"
            ],
            [
                "a73ef173.723ab"
            ],
            [
                "dfbf9465.6e7518"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'scalar')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n        attrList        : attrList\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var plotStarted = false;\n        var plotTraces = [];\n        var plotStartTime = 0;\n        var plotLength = 0;\n        var plotLayout = {};\n \n        function onDocumentReadySpecial()\n        {\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n            upDatePlot();\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n        }\n        function attrSelectedSpecial(itrace)\n        {\n        }\n\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function startPlot()\n        {\n            if (!plotStarted)\n            {\n                $(\"#startPlotButton\").html('Stop Plot');\n            }\n            else\n            {\n                $(\"#startPlotButton\").html('Start Plot');\n            }\n            plotStarted = !plotStarted;\n            if (!plotStarted)\n            {\n                plotTraces = [];\n                for (var itrace = 0; itrace < numTraces; ++itrace)\n                {\n                    deviceSelect[itrace].disabled = false;\n                    nameSelect[itrace].disabled = false;\n                    propSelect[itrace].disabled = false;\n                    attrSelect[itrace].disabled = false;\n                    $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", false );\n                    $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", false );\n                    $('#pts_' + itrace.toString()).prop( \"disabled\", false );\n                }\n                return;\n            }\n            plotTraces = [];\n            \n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace].disabled = true;\n                nameSelect[itrace].disabled = true;\n                propSelect[itrace].disabled = true;\n                attrSelect[itrace].disabled = true;\n                $('#plotAxis_' + itrace.toString() + 'y1').prop( \"disabled\", true );\n                $('#plotAxis_' + itrace.toString() + 'y2').prop( \"disabled\", true );\n                $('#pts_' + itrace.toString()).prop( \"disabled\", true );\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var modeType = 'lines';\n                    if (devInfo[itrace].pts) modeType = 'markers';\n                    var trace =  \n                    {\n                        x: [],\n                        y: [],\n                        name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                        yaxis: devInfo[itrace].axis,\n                        type: 'scatter',\n                        mode: modeType\n                    };\n                    plotTraces.push(trace);\n                }\n            }\n            plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n\n            plotStartTime = new Date().getTime();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n            plotLength = Number($(\"#plotLength\").val());\n        }\n        function upDatePlot()\n        {\n            if (!plotStarted) return;\n            var now = new Date().getTime();\n            var plotBeginning = now - plotLength * 1000;\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0)\n                {\n                    var removeDone = false;\n                    while(!removeDone)\n                    {\n                        if (plotTraces[traceCount].x[0] < plotBeginning)\n                        {\n                            plotTraces[traceCount].x.shift();\n                            plotTraces[traceCount].y.shift();\n                        }\n                        else\n                        {\n                            removeDone = true;\n                        }\n                    }\n                    plotTraces[traceCount].x.push(now);\n                    plotTraces[traceCount].y.push(devInfo[itrace].device[devInfo[itrace].attr].value);\n                    ++traceCount;\n                }\n            }\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }",
        "output": "str",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "da88a362.516c9"
            ]
        ]
    },
    {
        "id": "72c58cab.a3c494",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check Archive interval",
        "func": "msg.device.lastArchive = msg.payload.lastArchive;\nmsg.device.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.device);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.device[keys[ii]];\n\nvar archiveMsg = null;\nif ((msg.payload.timeStamp - msg.payload.lastArchive) > msg.payload.arcPeriod)\n{\n    msg.payload.lastArchive  = msg.payload.timeStamp;\n    msg.device.lastArchive = msg.payload.lastArchive;\n    var archiveDevice = JSON.parse(JSON.stringify(msg.device));\n    delete archiveDevice.arcPeriod;\n    delete archiveDevice.lastArchive;\n    keys = Object.keys(archiveDevice);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (archiveDevice[keys[ii]].hasOwnProperty('type'))\n        {\n            \n            archiveDevice[keys[ii]] = JSON.parse(JSON.stringify(msg.device[keys[ii]].value));\n        }\n    }\n    archiveMsg = {topic:'archiveData',payload: archiveDevice};\n}\nvar updateDeviceMsg = \n{\n    topic:'updateDevice',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn [updateDeviceMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "bc2507b7.46f4b8"
            ],
            [
                "621ab8d1.42e078"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "e020461d.044ee8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Device Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "72c58cab.a3c494"
            ]
        ]
    },
    {
        "id": "731fcbcd.96f0a4",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1290,
        "y": 40,
        "wires": [
            [
                "e020461d.044ee8"
            ]
        ]
    },
    {
        "id": "bc2507b7.46f4b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "update",
        "x": 1390,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "621ab8d1.42e078",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1400,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "699dce99.1fe68",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "8e79cfec.1347",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "dfbf9465.6e7518",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "68b75168.59f04",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarArchivePlotter",
        "url": "/scalarArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "bc63b66b.867d18"
            ]
        ]
    },
    {
        "id": "2857fd6b.987de2",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"19%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading \">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv1' href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv2' href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)' checked ></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv3' href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)' checked ></td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card' id=\"timePlotCard\" >\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 100,
        "wires": [
            [
                "bb160287.a4943"
            ]
        ]
    },
    {
        "id": "3662caf5.96ce96",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#timePlotCard').hide();\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getArchiveValues':\n                    archiveList.push(msg.payload);\n                    if (archiveRequestList.length > 0)\n                    {\n                        getArchiveValues();\n                    }\n                    else\n                    {\n                        loadArchiveValues();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n       }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#csv'+ itrace.toString()).removeAttr(\"href\");\n            $('#csv'+ itrace.toString()).css('color', 'black');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n        }\n        function selectAxis(itrace,axis)\n        {\n            devInfo[itrace].axis  = axis;\n        }\n        function selectPts(itrace)\n        {\n            devInfo[itrace].pts = !devInfo[itrace].pts;\n        }\n        function getArchiveData()\n        {\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].name.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate   : startDate, \n                        stopDate    : stopDate,\n                        itrace      : itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function loadArchiveValues()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            var plotTraces = [];\n            for (ii = 0; ii < archiveList.length; ++ii)\n            {\n                itrace = archiveList[ii].itrace;\n                var modeType = 'lines';\n                if (devInfo[itrace].pts) modeType = 'markers';\n                var trace =  \n                {\n                    x: [],\n                    y: [],\n                    name: devInfo[itrace].axis + ' ' + devInfo[itrace].deviceType + '.' + devInfo[itrace].name + '.' + devInfo[itrace].prop + '.' + devInfo[itrace].attr + ' (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')',\n                    yaxis: devInfo[itrace].axis,\n                    type: 'scatter',\n                    mode: modeType\n                }\n                for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n                {\n                    trace.x[ipt] = archiveList[ii].trace[ipt].timeStamp;\n                    trace.y[ipt] = archiveList[ii].trace[ipt].value;\n                }\n                plotTraces.push(trace);\n                makeCsvFile(ii);\n            }\n            var plotLayout =\n            {\n                showlegend: true,\n                legend: {x: 0,y: 1.35},\n                xaxis       : {type: 'date' },\n                yaxis: {title: 'y1'},\n                yaxis2: {title: 'y2',overlaying: 'y',side: 'right'}\n            };\n            $('#timePlotCard').show();\n            Plotly.newPlot('timePlot', plotTraces, plotLayout);\n        }\n        function makeCsvFile(ii)\n        {\n            var dataString = '';\n            var startT = archiveList[ii].trace[0].timeStamp;\n            var itrace = archiveList[ii].itrace;\n        \n            dataString = dataString + 'Device,' + devInfo[itrace].deviceType + ',' + devInfo[itrace].name + ',' + devInfo[itrace].prop + ',' + devInfo[itrace].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec), Value (' + devInfo[itrace].device[devInfo[itrace].attr].unit + ')\\n';\n            for (var ipt = 0; ipt < archiveList[ii].trace.length; ++ipt)\n            {\n                var x = (archiveList[ii].trace[ipt].timeStamp - startT) / 1000;\n                var y = archiveList[ii].trace[ipt].value;\n                dataString = dataString + x.toString() + ',' + y.toString() + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 670,
        "y": 100,
        "wires": [
            [
                "7d3145f.8eb39bc"
            ]
        ]
    },
    {
        "id": "c767ad27.32df7",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 1070,
        "y": 100,
        "wires": [
            [
                "2857fd6b.987de2"
            ]
        ]
    },
    {
        "id": "e4e0d070.30842",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "2672654d.766b0a",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarArchivePlotter",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1780,
        "y": 360,
        "wires": []
    },
    {
        "id": "1f6a9f15.3d80c1",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "Scalar DB Info",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 1535,
        "y": 360,
        "wires": []
    },
    {
        "id": "23adba5a.1575e6",
        "type": "link in",
        "z": "dc20c6e0.0feb98",
        "name": "scalar websocket out",
        "links": [
            "192cf6bb.b61fc9",
            "1f6a9f15.3d80c1",
            "1d6371f9.66705e"
        ],
        "x": 1615,
        "y": 360,
        "wires": [
            [
                "472ae883.652f08",
                "2672654d.766b0a",
                "3b8105e.0ce10fa"
            ]
        ]
    },
    {
        "id": "98c9d4ad.3f54f8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]     :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 460,
        "wires": [
            [
                "c83b72f2.fbac"
            ]
        ]
    },
    {
        "id": "c83b72f2.fbac",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "91696018.4cd47"
            ]
        ]
    },
    {
        "id": "91696018.4cd47",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "101f39eb.3dbc86",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarViewer",
        "url": "/scalarViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 160,
        "wires": [
            [
                "5fe2ee6b.e7801"
            ]
        ]
    },
    {
        "id": "98ef08d2.acd658",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"9%\"  align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Prop</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">value</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">unit</span></td>\n                <td width=\"13%\" align=\"center\"><span class=\"tableHeading \">Edit</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"propSelect0\" onchange=\"propSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText \" id=\"valueSelect0\"></span></td>\n                <td align=\"center\"><span class=\"tableText \" id=\"unitSelect0\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton0\" type=\"button\" onclick=\"editDevice(0)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect1\" onchange=\"deviceSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect1\" onchange=\"nameSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect1\" onchange=\"propSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect1\" onchange=\"attrSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect1\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton1\" type=\"button\" onclick=\"editDevice(1)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect2\" onchange=\"deviceSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect2\" onchange=\"nameSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect2\" onchange=\"propSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect2\" onchange=\"attrSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect2\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton2\" type=\"button\" onclick=\"editDevice(2)\">Edit</button>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"deviceSelect3\" onchange=\"deviceSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect3\" onchange=\"nameSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"propSelect3\" onchange=\"propSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"attrSelect3\" onchange=\"attrSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"valueSelect3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unitSelect3\"></span></td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton3\" type=\"button\" onclick=\"editDevice(3)\">Edit</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n        <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Value</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"attrValue\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Name</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                </tr>\n                <tr>\n                    <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Notify Number</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 160,
        "wires": [
            [
                "bc45cf67.b90c6"
            ]
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalardevicemenu",
        "field": "payload.javascript.scalardevicemenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n        var permitGetDeviceValues = true;\n\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : '',attr : '',device : {}, axis:'y1', pts:true};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getDeviceValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getDeviceList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'reading';\n            readOpt.innerHTML = 'reading';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'setting';\n            setOpt.innerHTML = 'setting';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editDeviceButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].prop = propSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter\n                };\n            sendActionMsg('getDeviceValues', 'readDatabase', actionMsg);\n        }\n        function loadDeviceValues(data)\n        {\n            if (!permitGetDeviceValues) return;\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadDeviceValuesSpecial(data);\n        }\n",
        "output": "str",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "64bfcc43.f50934",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Viewer",
        "output": "str",
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "98ef08d2.acd658"
            ]
        ]
    },
    {
        "id": "3b8105e.0ce10fa",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1750,
        "y": 420,
        "wires": []
    },
    {
        "id": "c885dc27.153e5",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "ScalarViewer",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "e6871441.93cb88"
            ]
        ]
    },
    {
        "id": "5d93334c.7b160c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "e06b15ee.c3bf78"
            ]
        ]
    },
    {
        "id": "e06b15ee.c3bf78",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Project Name",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "4819746c.65db8c",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload, \n    userID  : msg.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 500,
        "wires": [
            [
                "2e134ccf.236a14",
                "e4ba36d.73f00c8"
            ]
        ]
    },
    {
        "id": "6381975d.b98928",
        "type": "mqtt out",
        "z": "dc20c6e0.0feb98",
        "name": "Publish setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1360,
        "y": 500,
        "wires": []
    },
    {
        "id": "482179b1.0efb28",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "url": "/scalarAlarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "fac3ac47.cbce"
            ]
        ]
    },
    {
        "id": "9661ff85.f96c8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n            </div>\n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <table width=\"100%\" id='alarmTable'>\n            <tr class=\"tableHeading\">\n                <td width='12%'>Alarm</td>\n                <td width='12%'>Device</td>\n                <td width='12%'>Name</td>\n                <td width='12%'>Property</td>\n                <td width='12%'>Attribute</td>\n                <td width='12%'>Value</td>\n                <td width='12%'>Unit</td>\n                <td width='12%'>Type</td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1190,
        "y": 220,
        "wires": [
            [
                "f07664a9.ede108"
            ]
        ]
    },
    {
        "id": "30fbb3de.45ba1c",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            createAlarmTableRows(100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n               case 'alarmList':\n                    alarmScan(msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var devCell  = row.insertCell(1);\n                var nameCell = row.insertCell(2);\n                var propCell = row.insertCell(3);\n                var attrCell = row.insertCell(4);\n                var valueCell= row.insertCell(5);\n                var unitCell = row.insertCell(6);\n                var typeCell = row.insertCell(7);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                devCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_dev\");\n                nameCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_name\");\n                propCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_prop\");\n                attrCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_attr\");\n                valueCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_value\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/redLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(alarmList)\n        {\n            var deviceInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (alarmList.length > nrows) alert('Too many alarms to display!');\n            for (var idev = 0; idev < alarmList.length; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).show();\n                $('#alarmTable' + idev.toString() + '_dev').html(alarmList[idev].deviceType);\n                $('#alarmTable' + idev.toString() + '_name').html(alarmList[idev].name);\n                $('#alarmTable' + idev.toString() + '_prop').html(alarmList[idev].prop);\n                $('#alarmTable' + idev.toString() + '_attr').html(alarmList[idev].attr);\n                $('#alarmTable' + idev.toString() + '_value').html(alarmList[idev].value);\n                $('#alarmTable' + idev.toString() + '_unit').html(alarmList[idev].unit);\n                var type = '';\n                if (alarmList[idev].alarm == 1) type = 'LOW';\n                if (alarmList[idev].alarm == 2) type = 'HIGH';\n                if (alarmList[idev].alarm == 3) type = 'LOLO';\n                if (alarmList[idev].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + idev.toString() + '_type').html(type);\n                if (alarmList[idev].alarm < 3)\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var idev = alarmList.length; idev < nrows; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 930,
        "y": 220,
        "wires": [
            [
                "f98b12be.28903"
            ]
        ]
    },
    {
        "id": "f98b12be.28903",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "9661ff85.f96c8"
            ]
        ]
    },
    {
        "id": "8923ffe3.37bda",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "/scalarAlarmScanner",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "60f8d457.92c10c",
        "type": "mongodb3 in",
        "z": "dc20c6e0.0feb98",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "902a8791.29d718"
            ]
        ]
    },
    {
        "id": "6eaf67b8.ba2648",
        "type": "inject",
        "z": "dc20c6e0.0feb98",
        "name": "Every 10 sec",
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "'name'",
        "payloadType": "str",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "60f8d457.92c10c"
            ]
        ]
    },
    {
        "id": "902a8791.29d718",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Scan for alarms",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar oldAlarmList = context.get('oldAlarmList')\nif (oldAlarmList == undefined) oldAlarmList = [];\nvar numDevices = objectLength(msg.payload);\nvar props = ['readings', 'settings'];\nvar alarmList = [];\nvar alarmCount = 0;\nfor (var idev = 0; idev < numDevices; ++idev)\n{\n    var device = msg.payload[idev];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == 'scalar')\n            {\n                if (device[keys[ii]].alarm.value > 0)\n                {\n                    alarmList[alarmCount] = \n                    {\n                        deviceType: device.deviceType,\n                        name  : device.name,\n                        prop  : device[keys[ii]].action,\n                        attr  : keys[ii],\n                        value : device[keys[ii]].value,\n                        unit  : device[keys[ii]].unit,\n                        alarm : device[keys[ii]].alarm.value,\n                        id    : device.deviceType + '-' +  device.name + '-' +  device[keys[ii]].action + '-' + keys[ii],\n                        notify: device[keys[ii]].alarm.notify\n                    };\n                    ++alarmCount;\n                }\n            }\n        }\n    }\n}\n\nvar newAlarmList = [];\nvar newAlarmCount = 0;\nfor (var ialarm = 0; ialarm < alarmCount; ++ialarm)\n{\n    var oldAlarm = oldAlarmList.find(oldAlarm => oldAlarm.id === alarmList[ialarm].id);\n    if (oldAlarm == undefined) \n    {\n        newAlarmList[newAlarmCount] = alarmList[ialarm];\n        ++newAlarmCount;\n    }\n}\ncontext.set('oldAlarmList', alarmList);\nreturn [{topic:'alarmList', payload:{topic:'alarmList',payload:alarmList}},{topic:'newAlarmList', payload:newAlarmList}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "8923ffe3.37bda"
            ],
            [
                "fcd3d5a6.7bdaf8"
            ]
        ]
    },
    {
        "id": "1c8b36de.a489c9",
        "type": "sendsms",
        "z": "dc20c6e0.0feb98",
        "creds": "23623a1c.e4ce46",
        "to": "{{msg.to}}",
        "fr": "{{msg.from}}",
        "text": "{{msg.payload}}",
        "unicode": false,
        "x": 1310,
        "y": 800,
        "wires": [
            [
                "30c5692.3ac4c96"
            ]
        ]
    },
    {
        "id": "30c5692.3ac4c96",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1450,
        "y": 800,
        "wires": []
    },
    {
        "id": "fcd3d5a6.7bdaf8",
        "type": "split",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 750,
        "y": 800,
        "wires": [
            [
                "81b10ec2.0f878"
            ]
        ]
    },
    {
        "id": "81b10ec2.0f878",
        "type": "delay",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 800,
        "wires": [
            [
                "77c8c2b5.2b57ec"
            ]
        ]
    },
    {
        "id": "77c8c2b5.2b57ec",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Prepare SMS",
        "func": "if (msg.payload.notify.name.length < 1) return null;\nif (msg.payload.notify.number.length < 1) return null;\nvar type = '';\nif (msg.payload.alarm == 1) type = 'LOW';\nif (msg.payload.alarm == 2) type = 'HIGH';\nif (msg.payload.alarm == 3) type = 'LOLO';\nif (msg.payload.alarm == 4) type = 'HIHI';\nvar message = 'Alarm-' + type + ': ' + msg.payload.id;\nmessage = message + ' is at ' + msg.payload.value.toString() + ' ' + msg.payload.unit\nreturn {topic:'sms',to:msg.payload.notify.number, payload:message, from:'46000000000'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 800,
        "wires": [
            [
                "78c1fcc3.ec6164",
                "1c8b36de.a489c9"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "72941646.0206b8",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 40,
        "wires": []
    },
    {
        "id": "bb160287.a4943",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 100,
        "wires": []
    },
    {
        "id": "bc45cf67.b90c6",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "f07664a9.ede108",
        "type": "subflow:f22a539a.a67b3",
        "z": "dc20c6e0.0feb98",
        "x": 1330,
        "y": 220,
        "wires": []
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorPlotter",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1690,
        "y": 180,
        "wires": []
    },
    {
        "id": "813098f2.aa5c28",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorPlotter",
        "url": "/vectorPlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "421bd3a6.9feaac"
            ]
        ]
    },
    {
        "id": "43013e03.44494",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"33%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class='vert-pad' width=\"100%\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Spectrogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\"  align=\"right\">\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n            </div>\n            <div class=\"col-md-6\">\n                <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n            </div>\n        </div>\n    </div>\n    ",
        "output": "str",
        "x": 1050,
        "y": 40,
        "wires": [
            [
                "c6c23586.848c58"
            ]
        ]
    },
    {
        "id": "6a7aaea9.6b97f",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : 'reading', attr : '',device : {}};\n            }\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n                timeMax = Number($(\"#plotslices\").val());\n                if (timeMax < 2)\n                {\n                    alert('Number of plot slices must be greater than 1');\n                    timeMax = 2;\n                }\n                birdsEyeTimeMax = timeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n                dataArray = [];\n                itimeSlice = 0;\n                plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n            setInterval(getDeviceValues, 1000);\n        }\n        function restartPlot()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            dataArray = [];\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                       break;\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            var actionMsg = \n                {\n                };\n            sendActionMsg('getDeviceList', 'readDatabase', actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            restartPlot();\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            var actionMsg = \n                {\n                    queryFilter : queryFilter,\n                };\n            sendActionMsg('getDeviceValues', 'readDatabase', actionMsg);\n        }\n        function loadDeviceValues(data)\n        {\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                upDatePlot(attr.value);\n                            }\n                        }\n                    } \n                }\n            }\n        }\n        function upDatePlot(value)\n        {\n            var npts = value[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                    dataArray[ix] =\n                    {\n                        'x': value[0][ix],\n                        'y': 0,\n                        'z': value[1][ix],\n                        'style': value[1][ix]\n                    };\n                }\n                var container = document.getElementById('spectrogram');\n            \n                graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n                $(\"#startTime\").text(new Date().toLocaleString());\n                $(\"#stopTime\").text(new Date().toLocaleString());\n                graph3d.on('cameraPositionChange', onCameraPositionChange);\n                if (sliceViewActive) sliceView();\n                if (birdsEyeViewActive) birdsEyeView();\n                if (topViewActive) topView();\n                plotStarted = true;\n            }\n            else\n            {\n                if (freeze) return;\n                if (itimeSlice < timeMax)\n                {\n                    timeStamp[itimeSlice] = new Date().getTime();\n                    deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[itimeSlice * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                    ++itimeSlice;\n                }\n                else\n                {\n                    for (var itime = 0; itime < (timeMax - 1); ++itime)\n                    {\n                        timeStamp[itime] = timeStamp[itime + 1];\n                        deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                        for (var ix = 0; ix < npts; ++ix)\n                        {\n                            dataArray[itime * npts + ix] =\n                            {\n                                'x': dataArray[(itime + 1) * npts + ix].x,\n                                'y': deltaT,\n                                'z': dataArray[(itime + 1) * npts + ix].z,\n                                'style': dataArray[(itime + 1) * npts + ix].style\n                            };\n                        }\n                    }\n                    timeStamp[timeMax - 1] = new Date().getTime();\n                    deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                    for (var ix = 0; ix < npts; ++ix)\n                    {\n                        dataArray[(timeMax - 1) * npts + ix] =\n                        {\n                            'x': value[0][ix],\n                            'y': deltaT,\n                            'z': value[1][ix],\n                            'style': value[1][ix]\n                        };\n                    }\n                }\n                $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n                $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n                graph3d.setData(dataArray);\n            }\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        \n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            itimeSlice = 0;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;\n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event)\n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "4f498dd4.8ddad4"
            ]
        ]
    },
    {
        "id": "6f9d3e8e.5dd7c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 930,
        "y": 40,
        "wires": [
            [
                "43013e03.44494"
            ]
        ]
    },
    {
        "id": "c6c23586.848c58",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1190,
        "y": 40,
        "wires": []
    },
    {
        "id": "23847e72.ad5052",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getArchiveValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 550,
        "y": 340,
        "wires": [
            [
                "239425dd.8a514a"
            ],
            [
                "c143b50b.37c0a8"
            ],
            [
                "567d6cad.83f094"
            ],
            [
                "80e43fea.99b4b"
            ],
            [
                "e42fbd97.1acb"
            ]
        ]
    },
    {
        "id": "239425dd.8a514a",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceList",
        "func": "var newMsg = \n{\n    topic           : 'getDeviceList',\n    userID          : msg.userID,\n    payload         : [{},{projection:{deviceType:1, _id:0}}]\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 260,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "567d6cad.83f094",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getAttrList",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getAttrList',\n    userID          : msg.userID,\n    payload         : [{$and : [{deviceType:msg.payload.deviceType}, {name:msg.payload.name}]}, projectionFilter],\n    prop            : msg.payload.prop,\n    name            : msg.payload.name,\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 340,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "80e43fea.99b4b",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getDeviceValues",
        "func": "var projectionFilter =  {projection:{_id:0}};\nvar newMsg = \n{\n    topic           : 'getDeviceValues',\n    userID          : msg.userID,\n    payload         : [msg.payload.queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 380,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "cca5ce34.ad466",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "cf416706.322028"
            ]
        ]
    },
    {
        "id": "cf416706.322028",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDeviceList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getNameList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getAttrList",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDeviceValues",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 300,
        "wires": [
            [
                "1f313e3a.8bfc52"
            ],
            [
                "7737092b.94fb48"
            ],
            [
                "bcfe30d9.5f058"
            ],
            [
                "b731442a.4504b8"
            ]
        ]
    },
    {
        "id": "1f313e3a.8bfc52",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse device list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar deviceList = [];\ndeviceList[0] = msg.payload[0].deviceType;\nif (numDevices > 1)\n{\n    for (var idevice = 1; idevice < numDevices; ++idevice)\n    {\n        var deviceAlreadyFound = false;\n        for (ii = 0; ii < idevice; ++ii)\n        {\n            if (msg.payload[idevice].deviceType == deviceList[ii]) deviceAlreadyFound = true;\n        }\n        if (!deviceAlreadyFound) deviceList[idevice] = msg.payload[idevice].deviceType;\n    }\n}\n\nreturn {\n    topic:'getDeviceList',\n    payload:{\n        topic           : 'getDeviceList',\n        payload         : deviceList,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 240,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "bcfe30d9.5f058",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse attrList",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar device = msg.payload[0];\nvar attrList = [];\nvar keys = Object.keys(device);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (device[keys[ii]].hasOwnProperty('type'))\n    {\n        if (device[keys[ii]].type == 'vector')\n        {\n            if (device[keys[ii]].action == msg.prop)\n            {\n                attrList.push(keys[ii]);\n            }\n        }\n    }\n}\nif (attrList.length < 1) return null;\nreturn {\n    topic:'getAttrList',\n    payload:{\n        topic           : 'getAttrList',\n        userID          : msg.userID,\n        prop            : msg.prop,\n        name            : msg.name,\n        trace           : msg.trace,\n        attrList        : attrList,\n        deviceType      : msg.deviceType,\n\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "b731442a.4504b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse getDeviceValues",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nif (numDevices < 1) return null;\nvar devices = [];\nfor (var idev = 0; idev < numDevices; ++idev) devices[idev] = msg.payload[idev];\nreturn {\n    topic:'getDeviceValues',\n    payload:{\n        topic           : 'getDeviceValues',\n        userID          : msg.userID,\n        devices         : devices,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 360,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "e42fbd97.1acb",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getArchiveValues",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1, \n        [msg.payload.device.attr]   :   1\n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n    maxPtsToPlot    : msg.payload.maxPtsToPlot,\n    itrace          : msg.payload.device.itrace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "3ea29ec6.e9bfa2"
            ]
        ]
    },
    {
        "id": "3ea29ec6.e9bfa2",
        "type": "mongodb3 in",
        "z": "b94899c9.b16088",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "22a317f1.3a10b8"
            ]
        ]
    },
    {
        "id": "22a317f1.3a10b8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic:'getArchiveValues',\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {itrace: msg.itrace, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nvar maxPts = msg.maxPtsToPlot;\nvar nstep = numRecords / msg.maxPtsToPlot;\nif (nstep < 1.0) \n{\n    nstep = 1.0;\n    maxPts = numRecords;\n}\nvar icnt = 0;\n\nwhile(icnt < maxPts)\n{\n    var index = Math.round(icnt * nstep);\n    trace[icnt] = {timeStamp: records[index].timeStamp, value: records[index][msg.device.attr]};\n    ++icnt\n}\n\nreturn {\n    topic:'getArchiveValues',\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {itrace: msg.itrace, trace:trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 520,
        "wires": [
            [
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "a45c73b4.cd0d1",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "d8854f8.5c820b"
            ]
        ]
    },
    {
        "id": "aa9e819c.38f8f",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "vectorArchivePlotter",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1700,
        "y": 520,
        "wires": []
    },
    {
        "id": "f424cab0.278588",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "/vectorArchivePlotter",
        "url": "/vectorArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "50b5b5d7.93c8ac"
            ]
        ]
    },
    {
        "id": "a2e15003.8612b",
        "type": "subflow:f22a539a.a67b3",
        "z": "b94899c9.b16088",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd934b09.f641b8",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 1;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var attrSelect=[];\n        var devInfo = [];\n\n        var startDate = 0;\n        var stopDate = 0;\n        var csvFile = [];\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType  : '', name : '', prop : 'reading', attr : '',device : {}};\n\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n                csvFile[itrace] = null;\n\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        }\n        function onWebSocketOpen()\n        {\n            var actionMsg = {};\n            sendActionMsg('getDeviceList', 'readDatabase',  actionMsg);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getArchiveValues':\n                        archiveList.push(msg.payload);\n                        if (archiveRequestList.length > 0)\n                        {\n                            getArchiveValues();\n                        }\n                        else\n                        {\n                            plotArchive();\n                        }\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value\n                };\n            sendActionMsg('getNameList', 'readDatabase', actionMsg);\n        }\n        function nameSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var actionMsg = \n                {\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : 'reading'\n                };\n            sendActionMsg('getAttrList', 'readDatabase', actionMsg);\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected')  return;\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            \n        }\n        function getArchiveData()\n        {\n\n            archiveRequestList = [];\n            archiveList = [];\n            startDate = new Date($( \"#startDate\" ).val()).getTime();\n            stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0) \n                {\n                    archiveRequestList[traceCount] = \n                    {\n                        deviceType  : devInfo[itrace].deviceType, \n                        name        : devInfo[itrace].name, \n                        prop        : devInfo[itrace].prop, \n                        attr        : devInfo[itrace].attr,\n                        startDate: startDate, \n                        stopDate: stopDate,\n                        itrace  :   itrace\n                    };\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            $('#plotSetupTable').hide();\n            $('#timePlotCard').hide();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#csv'+ itrace.toString()).removeAttr(\"href\");\n                $('#csv'+ itrace.toString()).css('color', 'black');\n                $('#csv'+ itrace.toString()).css('text-decoration', 'none');\n                $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            }\n            messageDialog('Alert', 'Wait!', 'Requesting data ...');\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var maxPtsToPlot = Number($( \"#maxPtsToPlot\" ).val());\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0],\n                    maxPtsToPlot: maxPtsToPlot\n                };\n            sendActionMsg('getArchiveValues', 'readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function plotArchive()\n        {\n            $( \"#messageDialog\" ).dialog('close');\n            $('#plotSetupTable').show();\n            \n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile();\n            var npts = archiveList[0].trace.length;\n            var oodataArray = [];\n            \n            var nxMax = archiveList[0].trace[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var yvalue = Math.round((archiveList[0].trace[ii].timeStamp - archiveList[0].trace[0].timeStamp)/3600) / 1000;\n                for (var ix = 0; ix < nxMax; ++ix)\n                {\n                    var zvalue = archiveList[0].trace[ii].value[1][ix];\n                    oodataArray[ii * nxMax + ix] =\n                    {\n                        'x': archiveList[0].trace[ii].value[0][ix],\n                        'y': yvalue,\n                        'z': zvalue,\n                        'style': zvalue\n                    };\n                }\n            }\n            var options = \n            {\n                width:  '100%',\n                height: '800px',\n                style: 'surface',\n                showPerspective: false,\n                showGrid: true,\n                showShadow: false,\n                keepAspectRatio: false,\n                verticalRatio: 1.0,\n                showZAxis: true,\n                yCenter: '50%',\n                xLabel: 'x',\n                yLabel: 'Time (hr)',\n                zLabel: 'y',\n                tooltip: true,\n                axisColor: '#000000'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n            var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n            var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        }\n        function makeCsvFile ()\n        {\n            var itrace = 0;\n            var dataString = '';\n            var startT = archiveList[0].trace[0].timeStamp;\n        \n            dataString = dataString + 'Device,' + devInfo[0].deviceType + ',' + devInfo[0].name + ',' + devInfo[0].prop + ',' + devInfo[0].attr  +'\\n';\n            dataString = dataString + 'StartDate,' + new Date(startT).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}) + '\\n';\n            dataString = dataString + 'StartDate (mS),' + startT.toString() + '\\n';\n            dataString = dataString + 'Time (sec),  \\n 0,x';\n            for (var ipt = 0; ipt < archiveList[0].trace[0].value[0].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[0].value[0][ipt];\n            dataString = dataString + '\\n';\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n\n                var x = (archiveList[0].trace[ii].timeStamp - startT) / 1000;\n                dataString = dataString + x.toString() + ',y';\n                for (var ipt = 0; ipt < archiveList[0].trace[ii].value[1].length; ++ipt) dataString = dataString + ',' + archiveList[0].trace[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[itrace] !== null) {\n              window.URL.revokeObjectURL(csvFile[itrace]);\n            }\n        \n            csvFile[itrace] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ itrace.toString()).css('color', 'blue');\n            $('#csv'+ itrace.toString()).css('text-decoration', 'underline');\n            $('#csv'+ itrace.toString()).css('font-weight', 'bold');\n            $('#csv'+ itrace.toString()).attr(\"href\", csvFile[itrace]);\n            $('#csv'+ itrace.toString()).attr(\"download\", devInfo[itrace].deviceType + '-' + devInfo[itrace].name + '-' + devInfo[itrace].prop + '-' + devInfo[itrace].attr + '.csv');\n        \n        }\n",
        "output": "str",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "49e3f3a3.2fac0c"
            ]
        ]
    },
    {
        "id": "e01d1110.ea59",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "7bae9ecc.c5e5b"
            ]
        ]
    },
    {
        "id": "7bae9ecc.c5e5b",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading \">Tr</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Device</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Name</span></td>\n                <td width=\"30%\" align=\"center\"><span class=\"tableHeading \">Attr</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0' href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"deviceSelect0\" onchange=\"deviceSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"nameSelect0\" onchange=\"nameSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select \" id=\"attrSelect0\" onchange=\"attrSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"500\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotTable'>\n                    <tr valign=\"top\">\n                        <td width='5%'>\n                            <table id='plotViewButtons'>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <td width='95%' >\n                            <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "a2e15003.8612b"
            ]
        ]
    },
    {
        "id": "4caf3fb1.f3572",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "2208dd06.5d2ba2"
            ]
        ]
    },
    {
        "id": "2208dd06.5d2ba2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f62ae826.1bfb58",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7a299117.69d3"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1060,
        "y": 1400,
        "wires": []
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, device:msg.payload, timeStamp: new Date().getTime()};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    device      :   msg.settingLogEntry.device,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 1270,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2e134ccf.236a14",
        "type": "subflow:e13648d6.d698c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 990,
        "y": 560,
        "wires": []
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "35ffcf83.1547"
            ]
        ]
    },
    {
        "id": "275c08.dff3c3f8",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/core",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "49150800.c088c8"
            ]
        ]
    },
    {
        "id": "59315144.42ea4",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarPlotter\" >Scalar Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarArchivePlotter\" >Scalar Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarViewer\" >Scalar Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarAlarmScanner\" >Scalar Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorPlotter\" >Vector Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorArchivePlotter\" >Vector Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/access-log\" >Access Log</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/settings-log\" >Settings Log</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/control-apps\" >Custom App Index</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "a9d47de1.dae3f"
            ]
        ]
    },
    {
        "id": "a9d47de1.dae3f",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Core Applications",
        "output": "str",
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "1e988252.38bf7e"
            ]
        ]
    },
    {
        "id": "f1353403.af8cb8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 890,
        "y": 60,
        "wires": [
            [
                "59315144.42ea4"
            ]
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "1e9bf28b.344d8d"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='accessLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%'>url</th>\n                            <th width='10%'>ip</th>\n                            <th width='7%' >country</th>\n                            <th width='6%' >region</th>\n                            <th width='7%' >city</th>\n                            <th width='20%'>rdns</th>\n                            <th width='10%'>isp</th>\n                            <th width='10%'>Date</th>\n                            <th width='10%'>Time</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"accessLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "e4c1258f.54e248"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getAccessLog', 'readDatabase', actionMsg);\n\n        }\n        function displayData(msg)\n        {\n            console.log(msg)\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.country + '</td>';\n            markup = markup + '<td>' + record.region + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(record.timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "d29bdb5c.25fd58"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1380,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "b213f397.94307"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='settingsLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%' >url</th>\n                            <th width='10%' >device</th>\n                            <th width='10%' >ip</th>\n                            <th width='7%'  >country</th>\n                            <th width='6%'  >region</th>\n                            <th width='7%'  >city</th>\n                            <th width='20%' >rdns</th>\n                            <th width='10%' >isp</th>\n                            <th width='10%' >Date</th>\n                            <th width='10%' >Time</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"settingsLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n   </div>\n    <div id=\"showDeviceDialog\" title=\"Device\" class='card'>\n        <p class='card-title' id='showDeviceDialogName'>Device</p>\n        <div class='card-body'>\n            <table id='showDeviceTable' width='100%'>\n                <thead>\n                    <tr>\n                        <th width='50%' >Attribute</th>\n                        <th width='50%' >Value</th>\n                    </tr>\n                </thead>\n                <tbody id=\"showDeviceTableBody\"></tbody>\n            </table>\n        </div>\n    </div>  ",
        "output": "str",
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "1f057b8c.e3a574"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "2f50dfa8.90179"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup SettingsLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 920,
        "y": 380,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1390,
        "y": 380,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    case 'permissionError':\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                        break;\n                    case 'loginExpired':\n                        location.reload();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            var actionMsg = \n                {\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                };\n            sendActionMsg('getSettingsLog', 'readDatabase', actionMsg);\n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayDevice(' + ii.toString() + ')\">' + settingsHistory[ii].device.deviceType  + '-' + settingsHistory[ii].device.name + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.country + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.region + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleDateString() + '</td>';\n            markup = markup + '<td>' + new Date(settingsHistory[ii].timeStamp).toLocaleTimeString() + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayDevice(index)\n        {\n            var actionArray = [];\n            var attrList = [];\n            var keys = Object.keys(settingsHistory[index].device);\n            for (var ii = 0; ii < keys.length; ++ii)\n            {\n                if (settingsHistory[index].device[keys[ii]].hasOwnProperty('type'))\n                {\n                    if (settingsHistory[index].device[keys[ii]].type == 'scalar')\n                    {\n                        if (settingsHistory[index].device[keys[ii]].action == 'setting')\n                        {\n                            actionArray.push(settingsHistory[index].device[keys[ii]]);\n                            attrList.push(keys[ii]);\n                        }\n                    }\n                }\n            }\n\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            $( \"#showDeviceDialogName\" ).html(settingsHistory[index].device.name + ' ' + time);\n            $( \"#showDeviceTableBody\" ).remove();\n            var markup = '<tbody id=\"showDeviceTableBody\">';\n\n            for (var ii = 0; ii < actionArray.length; ++ii)\n            {\n                markup = markup +'<tr>';\n                markup = markup + '<td align=\"left\">' + attrList[ii] + '</td>';\n                markup = markup + '<td>' + actionArray[ii].value.toString() + '</td>';\n                markup = markup + '</tr>';\n            }\n            markup = markup + '</tbody>';\n            $(\"#showDeviceTable\").append(markup);\n\n            $( \"#showDeviceDialog\" ).dialog( \"option\", \"title\", \"Device Setting\"); \n            $( \"#showDeviceDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "4140c1ee.dca18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8bfd61eb.0f8f1"
            ]
        ]
    },
    {
        "id": "8bfd61eb.0f8f1",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from settings log",
        "func": "var queryFilter = \n{\n    'ipInfo.ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 700,
        "wires": [
            [
                "f7ff007a.8d8b"
            ]
        ]
    },
    {
        "id": "f7ff007a.8d8b",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "removeMany",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "ab1257ae.74fda8"
            ]
        ]
    },
    {
        "id": "ab1257ae.74fda8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "79a0dc4b.21aaa4",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "d3d9bc03.02e38"
            ]
        ]
    },
    {
        "id": "d3d9bc03.02e38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from access log",
        "func": "var queryFilter = \n{\n    'ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 780,
        "wires": [
            [
                "7ffae9ab.87bee8"
            ]
        ]
    },
    {
        "id": "7ffae9ab.87bee8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "removeMany",
        "x": 700,
        "y": 780,
        "wires": [
            [
                "35a0f533.d24c2a"
            ]
        ]
    },
    {
        "id": "35a0f533.d24c2a",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "1e988252.38bf7e",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "e4c1258f.54e248",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1290,
        "y": 120,
        "wires": []
    },
    {
        "id": "1f057b8c.e3a574",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1270,
        "y": 300,
        "wires": []
    },
    {
        "id": "80b3fbd.ba21908",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 340,
        "wires": [
            [
                "699dce99.1fe68"
            ]
        ]
    },
    {
        "id": "818972ac.61492",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 340,
        "wires": [
            [
                "1f6a9f15.3d80c1"
            ]
        ]
    },
    {
        "id": "fa0c0cab.d9876",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "javascript.specialscalar",
        "field": "payload.javascript.specialscalar",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var editedTrace = -1;\n        \n        function onDocumentReadySpecial()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                $('#editDeviceButton'+ itrace.toString()).hide();\n            }\n        }\n        function onWebSocketMessageSpecial(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getJwtToken':\n                    loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    break;\n                default:\n                // code block\n            }\n        }\n        $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" ); permitGetDeviceValues = true;},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(itrace)\n        {\n            permitGetDeviceValues = false;\n            editedTrace = itrace;\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\");    \n            $( \"#editDeviceDialogAttribute\").html(devInfo[itrace].deviceType + '-'  + devInfo[itrace].name + '-'  + devInfo[itrace].prop + '-'  + devInfo[itrace].attr);\n            var attr = devInfo[itrace].device[devInfo[itrace].attr];\n            $( \"#attrValue\").val(attr.value);\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = devInfo[editedTrace].device[devInfo[editedTrace].attr];\n            if (isNaN($('#attrValue').val()) \n                || isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                permitGetDeviceValues = true;\n                acknowledgeDialog('Error', 'Entry not a number!', attr.attr);\n                return;\n            }\n\n            attr.value = Number($( \"#attrValue\").val());\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var actionMsg = \n                {\n                    topic   : project + '/' + devInfo[editedTrace].device.deviceType + '/' + devInfo[editedTrace].device.name + '/setting',\n                    payload :  devInfo[editedTrace].device\n                };\n            sendActionMsg('sendSettingToMqtt', 'setting',  actionMsg);\n            permitGetDeviceValues = true;\n        }\n        function loadDeviceValuesSpecial(data)\n        {\n        }\n        function clearAttrOptionListSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).hide();\n        }\n        function attrSelectedSpecial(itrace)\n        {\n            $('#editDeviceButton'+ itrace.toString()).show();\n        }\n\n",
        "output": "str",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "93a819a0.6e9808"
            ]
        ]
    },
    {
        "id": "93a819a0.6e9808",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 160,
        "wires": [
            [
                "64bfcc43.f50934"
            ]
        ]
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalardevicemenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "da88a362.516c9",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "7d3145f.8eb39bc",
        "type": "subflow:df70f6f.9e4ed08",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "env": [],
        "x": 900,
        "y": 100,
        "wires": [
            [
                "c767ad27.32df7"
            ]
        ]
    },
    {
        "id": "78c1fcc3.ec6164",
        "type": "debug",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "c143b50b.37c0a8",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "getNameList",
        "func": "var newMsg = \n{\n    topic           : 'getNameList',\n    userID          : msg.userID,\n    payload         : [{deviceType:msg.payload.deviceType},{projection:{name:1, _id:0}}],\n    deviceType      : msg.payload.deviceType,\n    trace           : msg.payload.trace\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "cca5ce34.ad466"
            ]
        ]
    },
    {
        "id": "7737092b.94fb48",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse name list",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numNames = objectLength(msg.payload);\nvar nameList = [];\n\nfor (var iname = 0; iname < numNames; ++iname)\n{\n    nameList[iname] = msg.payload[iname].name;\n}\nreturn {\n    topic:'getNameList',\n    payload:{\n        topic           : 'getNameList',\n        nameList        : nameList,\n        userID          : msg.userID,\n        deviceType      : msg.deviceType,\n        trace           : msg.trace,\n    }\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1440,
        "y": 280,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "aea924a9.6a9e68",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "96140e28.f0af"
            ]
        ]
    },
    {
        "id": "fe60c45b.b5b258",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1070,
        "y": 960,
        "wires": [
            [
                "5610900e.5ca0b"
            ]
        ]
    },
    {
        "id": "5610900e.5ca0b",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 960,
        "wires": []
    },
    {
        "id": "7db15dac.050a44",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 960,
        "wires": [
            [
                "fe60c45b.b5b258"
            ]
        ]
    },
    {
        "id": "281ae8e3.adc998",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/device?deviceType=blinky-basic&name=01&token=$(< blinky-lite-v2-token.txt)\"",
        "info": "",
        "x": 420,
        "y": 880,
        "wires": []
    },
    {
        "id": "a3efdc0a.76eff",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 710,
        "y": 2400,
        "wires": [
            [
                "28d7885b.29ba58"
            ]
        ]
    },
    {
        "id": "c3761de5.51f6a",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "1de67fe2.40e2e"
            ]
        ]
    },
    {
        "id": "1de67fe2.40e2e",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "ae273eea.d73dc"
            ]
        ]
    },
    {
        "id": "2f6b8176.8101fe",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, mqttDevice : device, payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 100,
        "wires": [
            [
                "fec4a75b.95ea48"
            ]
        ]
    },
    {
        "id": "ee4c177c.2435b8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "parse topic",
        "func": "return {\n    topic   :msg.payload.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 40,
        "wires": [
            [
                "731fcbcd.96f0a4"
            ]
        ]
    },
    {
        "id": "bd9824df.ef3118",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-basic",
        "url": "/blinky-basic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "13193347.eb277d"
            ]
        ]
    },
    {
        "id": "c6d4dfc7.827cb",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1270,
        "y": 280,
        "wires": []
    },
    {
        "id": "4627d72c.810368",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "Prune every 2 hours",
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "6d14548b.92e89c"
            ]
        ]
    },
    {
        "id": "6d14548b.92e89c",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 400,
        "y": 520,
        "wires": [
            [
                "cdfc8294.43d83"
            ]
        ]
    },
    {
        "id": "eae07f83.bcf2c",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 940,
        "y": 520,
        "wires": [
            [
                "f226d7aa.824b28"
            ]
        ]
    },
    {
        "id": "cdfc8294.43d83",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "eae07f83.bcf2c"
            ]
        ]
    },
    {
        "id": "f226d7aa.824b28",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var idevice = 0; idevice < numDevices; ++idevice)\n{\n    timeStampList[idevice] = msg.payload[idevice].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 580,
        "wires": [
            [
                "6532f8b6.6c31b8"
            ]
        ]
    },
    {
        "id": "6532f8b6.6c31b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 940,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6c3053f6.dc3e9c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "729cd6f7.ca5578"
            ]
        ]
    },
    {
        "id": "729cd6f7.ca5578",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Device Type",
        "func": "var queryFilter = \n{\n    $and :\n    [\n        {\n            \"deviceType\": \"blinky-wind\"\n        },\n        {\n            \"name\": \"01\"\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    payload         :  [queryFilter]\n};\nreturn newMsg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 700,
        "wires": [
            [
                "cf34c25.b29984"
            ]
        ]
    },
    {
        "id": "cf34c25.b29984",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 540,
        "y": 740,
        "wires": [
            [
                "4dd34a88.974344"
            ]
        ]
    },
    {
        "id": "2d28afa.778ba5",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 540,
        "y": 660,
        "wires": [
            [
                "4dd34a88.974344"
            ]
        ]
    },
    {
        "id": "4dd34a88.974344",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 780,
        "y": 720,
        "wires": []
    },
    {
        "id": "29822a72.7731e6",
        "type": "JsonWebToken",
        "z": "2dba0745.a98d98",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 400,
        "y": 60,
        "wires": [
            [
                "f3358361.19029"
            ]
        ]
    },
    {
        "id": "3deefd6d.1dde92",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check for Project Cookies",
        "func": "var projectCookie = msg.req.cookies[global.get('project') + 'Role'];\nif(projectCookie == undefined)\n{\n    msg.cookies = { };\n    msg.payload.errorMsg = \"Credentials needed\";\n    return [null,msg];\n}\nmsg.token = projectCookie;\nmsg.payload['roleToken'] = msg.token;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "29822a72.7731e6"
            ],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "f3358361.19029",
        "type": "function",
        "z": "2dba0745.a98d98",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload.errorMsg = tokenError;\n    msg.cookies = { };\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload.errorMsg = 'Login Expired. Please login again';\n        msg.cookies = { };\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload.errorMsg = 'Credentials not valid for App';\n    msg.cookies = { };\n    return [null,msg];\n}\nmsg.payload['profile'] = JSON.stringify(msg.token);\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 60,
        "wires": [
            [],
            [
                "c0be6557.9ceae8"
            ]
        ]
    },
    {
        "id": "3966deae.453262",
        "type": "subflow:2dba0745.a98d98",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "6a38d804.df8fa8"
            ]
        ]
    },
    {
        "id": "6a38d804.df8fa8",
        "type": "subflow:8341090a.df9758",
        "z": "2d027d69.1fdeb2",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": []
    },
    {
        "id": "8e411315.2b09f",
        "type": "subflow:2dba0745.a98d98",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [
                "ecfe972c.7c72e8"
            ]
        ]
    },
    {
        "id": "ecfe972c.7c72e8",
        "type": "subflow:f22a539a.a67b3",
        "z": "495f0879.c831c8",
        "name": "",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "3dbc8e22.aafca2",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/process-login",
        "url": "/process-login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1640,
        "wires": [
            [
                "2623a5b9.60e51a"
            ]
        ]
    },
    {
        "id": "c7dcd2fd.f38ec",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 510,
        "y": 1640,
        "wires": [
            [
                "d0b46e62.c61f3"
            ]
        ]
    },
    {
        "id": "2623a5b9.60e51a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 1640,
        "wires": [
            [
                "c7dcd2fd.f38ec"
            ]
        ]
    },
    {
        "id": "d0b46e62.c61f3",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: User not found';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "d1cf61fb.35fc1"
            ],
            [
                "2497b9a4.db7a46"
            ]
        ]
    },
    {
        "id": "2497b9a4.db7a46",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 930,
        "y": 1680,
        "wires": [
            [
                "25cbcda4.aaf522"
            ]
        ]
    },
    {
        "id": "25cbcda4.aaf522",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload.errorMsg = 'Error: Invalid password';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 1680,
        "wires": [
            [
                "abf9b132.7c298"
            ],
            [
                "3abe79d2.fee286"
            ]
        ]
    },
    {
        "id": "3abe79d2.fee286",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 940,
        "y": 1760,
        "wires": [
            [
                "26477e37.472222"
            ]
        ]
    },
    {
        "id": "c10f4686.4bfa58",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:#415c71;\">{{{payload.errorMsg}}}</h1>\n    <form action=\"/process-login\" method=\"POST\">\n        <table align='center'>\n            <tr>\n                <td>\n                    <label for=\"username\" class=\"big-text\">User</label>\n                </td>\n                <td>\n                    <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"password\" class=\"big-text\">Password</label>\n                </td>\n                <td>\n                    <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                </td>\n            </tr>\n        </table>    \n        <input type=\"hidden\" name=\"url\" value=\"{{{userData.url}}}\" />\n    </form>  ",
        "output": "str",
        "x": 630,
        "y": 1540,
        "wires": [
            [
                "67f4ab6d.c1fd04"
            ]
        ]
    },
    {
        "id": "7e91110a.c2165",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 350,
        "y": 1540,
        "wires": [
            [
                "5a857f25.a6af6"
            ]
        ]
    },
    {
        "id": "aff12a21.2e53c8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 210,
        "y": 1540,
        "wires": [
            [
                "7e91110a.c2165"
            ]
        ]
    },
    {
        "id": "67f4ab6d.c1fd04",
        "type": "subflow:8341090a.df9758",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 770,
        "y": 1540,
        "wires": []
    },
    {
        "id": "5a857f25.a6af6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 490,
        "y": 1540,
        "wires": [
            [
                "c10f4686.4bfa58"
            ]
        ]
    },
    {
        "id": "26477e37.472222",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set project cookie",
        "func": "msg.cookies = { };\nmsg.cookies[global.get('project') + 'Role'] = msg.token;\nmsg.cookies[global.get('project') + 'Username'] = msg.payload.username;\nmsg.cookies[global.get('project') + 'ExpDate'] = msg.payload.expDate;\nmsg.statusCode = 302;\nmsg.headers = {};\nmsg.headers.location = '/'\nvar previousUrl = msg.userData.url;\nif(previousUrl == undefined)\n{\n    msg.headers.location = '/'\n}\nelse\n{\n    msg.headers.location = previousUrl;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1760,
        "wires": [
            [
                "fee60e7.48d0cf"
            ]
        ]
    },
    {
        "id": "fee60e7.48d0cf",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 1760,
        "wires": []
    },
    {
        "id": "e322d811.8b4178",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Login Error",
        "links": [
            "d1cf61fb.35fc1",
            "abf9b132.7c298"
        ],
        "x": 75,
        "y": 1540,
        "wires": [
            [
                "aff12a21.2e53c8"
            ]
        ]
    },
    {
        "id": "d1cf61fb.35fc1",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "No User",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 855,
        "y": 1620,
        "wires": []
    },
    {
        "id": "abf9b132.7c298",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Bad Password",
        "links": [
            "e322d811.8b4178"
        ],
        "x": 1315,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ab328d8b.b827a",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "insertOne",
        "x": 570,
        "y": 1860,
        "wires": [
            [
                "1965db8f.5178e4"
            ]
        ]
    },
    {
        "id": "1965db8f.5178e4",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1860,
        "wires": []
    },
    {
        "id": "ba337c11.0eb2f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Add User",
        "func": "var user = {\n    \"username\"  :   \"dmcginnis427\",\n    \"password\"  :   \"$2a$10$A0..ostRUI2TSke4/c.g8.B4afXgy.J1tCX0g7zOP07YBG1ntInm2\",\n    \"profile\"   :   \n    {\n        \"timeoutMin\"    :   15,\n        \"roles\"         :   [\"reading\",\"setting\",\"rsetting\",\"ping\",\"readDatabase\",\"renew\",\"appView\",\"coreView\"]\n        \n    }\n}\nreturn {topic:'user',payload:user};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1860,
        "wires": [
            [
                "ab328d8b.b827a"
            ]
        ]
    },
    {
        "id": "297ec315.26eb4c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1860,
        "wires": [
            [
                "ba337c11.0eb2f"
            ]
        ]
    },
    {
        "id": "ea16c2f2.cc51f",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "encrypt",
        "field": "",
        "hash": "payload",
        "rounds": 10,
        "x": 310,
        "y": 1920,
        "wires": [
            [
                "b3869c42.e862d"
            ]
        ]
    },
    {
        "id": "78dde377.f2284c",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestEncrypt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "blinky-lite",
        "payloadType": "str",
        "x": 170,
        "y": 1920,
        "wires": [
            [
                "ea16c2f2.cc51f"
            ]
        ]
    },
    {
        "id": "b3869c42.e862d",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1920,
        "wires": []
    },
    {
        "id": "174053b9.1f51bc",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "TestVerify",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"txt\":\"zebograf\",\"hash\":\"$2a$10$NO0QftMJiHQPA8z7BmlFWOW0uajRSg3gP4Nq1IdwjEndxHRRihjkW\"}",
        "payloadType": "json",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "3a224a45.c10eb6"
            ]
        ]
    },
    {
        "id": "f1f8d58.a302028",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1980,
        "wires": []
    },
    {
        "id": "3a224a45.c10eb6",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "f1f8d58.a302028"
            ]
        ]
    },
    {
        "id": "781dbbc5.3a2e14",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "f1353403.af8cb8"
            ]
        ]
    },
    {
        "id": "44733e49.ba7ec",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "64665cab.c46c24",
        "type": "subflow:495f0879.c831c8",
        "z": "90f83725.6dae08",
        "name": "",
        "env": [],
        "x": 690,
        "y": 300,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "83301a46.e7b368",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "5edcffd1.23572"
            ]
        ]
    },
    {
        "id": "5edcffd1.23572",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "5fe2ee6b.e7801",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "86c26641.91e478"
            ]
        ]
    },
    {
        "id": "86c26641.91e478",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "fa0c0cab.d9876"
            ]
        ]
    },
    {
        "id": "fac3ac47.cbce",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "6141143b.207eec"
            ]
        ]
    },
    {
        "id": "6141143b.207eec",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "30fbb3de.45ba1c"
            ]
        ]
    },
    {
        "id": "bc63b66b.867d18",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "87b81ba7.286ac8"
            ]
        ]
    },
    {
        "id": "87b81ba7.286ac8",
        "type": "subflow:495f0879.c831c8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "3662caf5.96ce96"
            ]
        ]
    },
    {
        "id": "50b5b5d7.93c8ac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "bb1b3802.2e34b8"
            ]
        ]
    },
    {
        "id": "bb1b3802.2e34b8",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 140,
        "wires": [
            [
                "fd934b09.f641b8"
            ]
        ]
    },
    {
        "id": "421bd3a6.9feaac",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Allowed Role",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 40,
        "wires": [
            [
                "1a4ad963.adfef7"
            ]
        ]
    },
    {
        "id": "1a4ad963.adfef7",
        "type": "subflow:495f0879.c831c8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 480,
        "y": 40,
        "wires": [
            [
                "6a7aaea9.6b97f"
            ]
        ]
    },
    {
        "id": "13193347.eb277d",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "f1f3e0dd.83dae"
            ]
        ]
    },
    {
        "id": "f1f3e0dd.83dae",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "91235a13.6c4198",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Change device name",
        "func": "var newMsg = \n{\n    topic           : 'changeName',\n    payload         : [{ \"name\": \"demo02\"}, { $set: { \"name\" : \"Demo-02\" } }],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 880,
        "wires": [
            [
                "f40aa393.052ae"
            ]
        ]
    },
    {
        "id": "f40aa393.052ae",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "updateMany",
        "x": 550,
        "y": 880,
        "wires": [
            [
                "5d7e61b7.94062"
            ]
        ]
    },
    {
        "id": "36864c40.8e8b94",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "91235a13.6c4198"
            ]
        ]
    },
    {
        "id": "5d7e61b7.94062",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 880,
        "wires": []
    },
    {
        "id": "a5eca460.0e66c8",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/control-apps",
        "url": "/control-apps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "433db7b4.42d728"
            ]
        ]
    },
    {
        "id": "1871f1b7.8fa49e",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 1210,
        "y": 140,
        "wires": []
    },
    {
        "id": "7d5c1f82.04cd2",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Control Apps",
        "output": "str",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "fa2e8992.31b268"
            ]
        ]
    },
    {
        "id": "e7a2ef05.36c48",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "appsYellow.png",
        "output": "str",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "7d5c1f82.04cd2"
            ]
        ]
    },
    {
        "id": "433db7b4.42d728",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView','coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "7413bfa1.a556d"
            ]
        ]
    },
    {
        "id": "7413bfa1.a556d",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "a858ad3a.95706",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "e7a2ef05.36c48"
            ]
        ]
    },
    {
        "id": "8f8ebd71.b1cf1",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top: 1px;'>\n            <div class=\"col-md-12\" align=\"center\">\n{{{payload.html.launcher}}}\n            </div>\n        </div>\n        <div class='row' style='padding-top: 25px;'>\n            <div class=\"col-md-3\" align=\"center\">\n            </div>\n            <div class=\"col-md-6\" align=\"center\">\n                <a class='btn btn-block card-button big-text' href='/core' >Utilites</a>\n            </div>\n            <div class=\"col-md-3\" align=\"center\">\n            </div>\n        </div>\n        <div class='row' style='padding-top: 25px;'>\n            <div class=\"col-md-12\" align=\"center\">\n{{{payload.html.user}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 890,
        "y": 140,
        "wires": [
            [
                "1871f1b7.8fa49e"
            ]
        ]
    },
    {
        "id": "c207bc73.737ed",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.launcher}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "d9f475e3.2ebe68"
            ]
        ]
    },
    {
        "id": "78a482dc.b332ac",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "insertOne",
        "x": 580,
        "y": 2060,
        "wires": [
            [
                "389f1443.3ce90c"
            ]
        ]
    },
    {
        "id": "389f1443.3ce90c",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 2060,
        "wires": []
    },
    {
        "id": "31c358e4.c01978",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Add device",
        "func": "var device = \n{\n  \"deviceType\": \"blinky-basic\",\n  \"name\": \"01\",\n  \"arcPeriod\": 60000,\n  \"timeStamp\": 1584283380359,\n  \"lastArchive\": 1584283329231,\n  \"ledState\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 0,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"linkQuality\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 52,\n    \"unit\": \"/70\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 30,\n        \"low\": 40,\n        \"high\": 71,\n        \"hihi\": 80\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"signalLevel\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": -58,\n    \"unit\": \"dBm\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -70,\n        \"low\": -60,\n        \"high\": 0,\n        \"hihi\": 30\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"ledOn\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 1,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"ledToggle\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 0,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2,\n        \"low\": -1,\n        \"high\": 2,\n        \"hihi\": 3\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"loopDelay\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 500,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 0,\n        \"low\": 0,\n        \"high\": 20000,\n        \"hihi\": 30000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  }\n};\nreturn {topic:'user',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "78a482dc.b332ac"
            ]
        ]
    },
    {
        "id": "c3990995.c6ea18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2060,
        "wires": [
            [
                "31c358e4.c01978"
            ]
        ]
    },
    {
        "id": "ae273eea.d73dc",
        "type": "gzip",
        "z": "e17f7487.2a78e8",
        "name": "",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "ea65f8a7.000ed8"
            ]
        ]
    },
    {
        "id": "ea65f8a7.000ed8",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "2f6b8176.8101fe"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-basic';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "6533b535.454c4c"
            ]
        ]
    },
    {
        "id": "c76a9544.852e88",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Basic {{{payload.script.name}}}",
        "output": "str",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "c98976c.3996888"
            ]
        ]
    },
    {
        "id": "4943dafd.596124",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "2b97e6dd.6d7b5a"
            ]
        ]
    },
    {
        "id": "c98976c.3996888",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Led State',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Loop Delay (mS)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var loopDelayChanged = false;\n        \n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function loopDelayChange()\n        {\n            loopDelayChanged = true;\n            $('#loopDelayButtonId').show();\n        }\n        function loopDelay()\n        {\n            $('#loopDelayButtonId').hide();\n            if (isNaN($('#loopDelayInputId').val()))\n            {\n                loopDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#loopDelayInputId').val()), 'loopDelay');\n            loopDelayChanged = false;\n        }\n",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "4943dafd.596124"
            ]
        ]
    },
    {
        "id": "2b97e6dd.6d7b5a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            historyStripChart.addTracePoints(device.ledState.value, device.loopDelay.value);\n            if (!loopDelayChanged)$('#loopDelayInputId').val(device.loopDelay.value);\n\n            if(device.ledState.value > 0)\n            {\n                $(\"#ledStateId\").attr(\"src\",\"/img/redLight.png\");\n            }\n            else\n            {\n                $(\"#ledStateId\").attr(\"src\",\"/img/yellowLight.png\");\n            }\n\n            var buttonColor = '#ff0000';\n            var buttonTextColor = '#000000';\n            var buttonText = \"Off\";\n            if (device.ledToggle.value > 0) \n            {\n                buttonColor = '#00ff00';\n                buttonText = 'On';\n            }\n            $('#ledToggleButtonId').css('color', buttonTextColor); \n            $('#ledToggleButtonId').css('background-color', buttonColor); \n            $('#ledToggleButtonId').text(buttonText); \n            \n            buttonColor = '#ff0000';\n            buttonTextColor = '#000000';\n            buttonText = \"Off\";\n            if (device.ledOn.value > 0) \n            {\n                buttonColor = '#00ff00';\n                buttonText = 'On';\n            }\n            $('#ledOnButtonId').css('color', buttonTextColor); \n            $('#ledOnButtonId').css('background-color', buttonColor); \n            $('#ledOnButtonId').text(buttonText); \n            if (device.ledToggle.value > 0) \n            {\n//                $('#ledOnButtonId').prop('disabled', true);\n                $('#ledOnButtonId').hide();\n            }\n            else\n            {\n//                $('#ledOnButtonId').prop('disabled', false);\n                $('#ledOnButtonId').show();\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 120,
        "wires": [
            [
                "e9fc5e9d.d698"
            ]
        ]
    },
    {
        "id": "1ee8ce74.b06fc2",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 240,
        "wires": [
            [
                "2f9f8abf.a80656"
            ]
        ]
    },
    {
        "id": "c1034be9.37f0a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.toggleButtons}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 320,
        "wires": [
            [
                "7a83f84a.d12268"
            ]
        ]
    },
    {
        "id": "450b0136.7ccbd",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 280,
        "wires": [
            [
                "c6d4dfc7.827cb"
            ]
        ]
    },
    {
        "id": "b6fcc866.328488",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "c273ba2f.eae8a8"
            ]
        ]
    },
    {
        "id": "1c00a3e0.d2260c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "28cd98f1.2a1518"
            ]
        ]
    },
    {
        "id": "6f88c98b.7a65c8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "1c00a3e0.d2260c"
            ]
        ]
    },
    {
        "id": "7fef0c19.4ed014",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Led State</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height='70px' id='ledStateId' />\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('ledState')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Set Led Toggle</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:grey;color:black' id='ledToggleButtonId' onclick=\"ledToggle()\" >?</button>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Set Led On/Off</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:grey;color:black' id='ledOnButtonId' onclick=\"ledOn()\" >?</button>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Loop Delay (mS)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"loopDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"loopDelayChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"loopDelayButtonId\" onclick=\"loopDelay()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 40,
        "wires": [
            [
                "6f88c98b.7a65c8"
            ]
        ]
    },
    {
        "id": "a4466b68.9f0738",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['ledState','loopDelay'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 200,
        "wires": [
            [
                "1ee8ce74.b06fc2"
            ]
        ]
    },
    {
        "id": "e9fc5e9d.d698",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.toggleButtons",
        "field": "payload.script.toggleButtons",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function ledToggle()\n        {\n            if (device.ledToggle.value > 0)\n            {\n                device.ledToggle.value = 0;\n            }\n            else\n            {\n                device.ledToggle.value = 1;\n                \n            }\n            $('#ledToggleButtonId').css('color', 'black'); \n            $('#ledToggleButtonId').css('background-color', 'grey'); \n            $('#ledToggleButtonId').text('?'); \n            sendSetting();\n        }\n        function ledOn()\n        {\n            if (device.ledOn.value > 0)\n            {\n                device.ledOn.value = 0;\n            }\n            else\n            {\n                device.ledOn.value = 1;\n                \n            }\n            $('#ledOnButtonId').css('color', 'black'); \n            $('#ledOnButtonId').css('background-color', 'grey'); \n            $('#ledOnButtonId').text('?'); \n            sendSetting();\n        }\n",
        "output": "str",
        "x": 710,
        "y": 160,
        "wires": [
            [
                "a4466b68.9f0738"
            ]
        ]
    },
    {
        "id": "6533b535.454c4c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "c76a9544.852e88"
            ]
        ]
    },
    {
        "id": "7a299117.69d3",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "764116fd.f6e648",
                "35181b40.f4b854"
            ]
        ]
    },
    {
        "id": "81c39fe.b208a6",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-relay",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-shiver",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-shaker",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-thermo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "solar-regulator",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-cosmic-interval",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-relay-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-env",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-ssr-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nb-freezer-mon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-wind",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-DS18B20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-turnstile",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-webcam",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 16,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "5f767381.0ac26c"
            ],
            [
                "beaaec7b.14e4"
            ],
            [
                "89a5eb36.c422e8"
            ],
            [
                "772958de.6fce18"
            ],
            [
                "66486726.3947a8"
            ],
            [
                "4a0e93c9.98b4fc"
            ],
            [
                "5d622fc9.ab529"
            ],
            [
                "13ad8845.88ebf8"
            ],
            [
                "6e011a7b.2ccbb4"
            ],
            [
                "f1e13e6e.d9099"
            ],
            [
                "bad679e2.d62e68"
            ],
            [
                "95daa5b.a032558"
            ],
            [
                "304b3835.9b6918"
            ],
            [
                "a988b405.392318"
            ],
            [
                "1c641721.29eb79"
            ],
            [
                "a91cdcd0.61dc6"
            ]
        ]
    },
    {
        "id": "764116fd.f6e648",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "81c39fe.b208a6"
            ]
        ]
    },
    {
        "id": "5f767381.0ac26c",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-basic mqtt",
        "links": [
            "7e343bf8.8fec14"
        ],
        "x": 775,
        "y": 80,
        "wires": []
    },
    {
        "id": "68378c41.1d2814",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-basic/websocket",
        "server": "e71c9288.03dd3",
        "client": "",
        "x": 1050,
        "y": 40,
        "wires": []
    },
    {
        "id": "7e343bf8.8fec14",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky basic input socket",
        "links": [
            "5f767381.0ac26c",
            "6b79628a.0393ec",
            "e1a8363e.6beae8",
            "1e710224.de723e",
            "224d9b05.f92104"
        ],
        "x": 895,
        "y": 40,
        "wires": [
            [
                "68378c41.1d2814"
            ]
        ]
    },
    {
        "id": "1c2ceb85.01cf44",
        "type": "gzip",
        "z": "8475ab9.3d26058",
        "name": "",
        "x": 1010,
        "y": 1340,
        "wires": [
            [
                "d0fb8153.688bb"
            ]
        ]
    },
    {
        "id": "d0fb8153.688bb",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1130,
        "y": 1340,
        "wires": [
            [
                "ee0ee61b.770a18"
            ]
        ]
    },
    {
        "id": "c695f12.122fa1",
        "type": "gzip",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 1110,
        "y": 500,
        "wires": [
            [
                "6381975d.b98928"
            ]
        ]
    },
    {
        "id": "e4ba36d.73f00c8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Stringify",
        "func": "msg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 500,
        "wires": [
            [
                "c695f12.122fa1"
            ]
        ]
    },
    {
        "id": "b6b8b063.9f62f",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.device.attr.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.device.attr[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2400,
        "wires": [
            [
                "a3efdc0a.76eff"
            ]
        ]
    },
    {
        "id": "28d7885b.29ba58",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.deviceType,\n        payload:{\n            topic           : msg.topic,\n            payload         : {device: msg.device, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.device.attr.length; ++ij)\n    {\n        trace[ii][msg.device.attr[ij]] = records[ii][msg.device.attr[ij]];\n    }\n}\n\nreturn {\n    topic : msg.device.deviceType,\n    payload:{\n        topic           : msg.topic,\n        payload         : {device: msg.device, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2400,
        "wires": [
            [
                "36088082.3139d"
            ]
        ]
    },
    {
        "id": "36088082.3139d",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-relay",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-shiver",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-thermo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "solar-regulator",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-cosmic-interval",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-relay-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-env",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-ssr-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nb-freezer-mon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-wind",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-DS18B20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-turnstile",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 14,
        "x": 1150,
        "y": 2400,
        "wires": [
            [
                "e1a8363e.6beae8"
            ],
            [
                "cf0c1c82.336a3"
            ],
            [
                "935b3af0.edbb38"
            ],
            [
                "a4477b71.432a98"
            ],
            [
                "7011908d.95c51"
            ],
            [
                "31c983a.65bbb7c"
            ],
            [
                "bd3aa3c8.56634"
            ],
            [
                "a8b68e5d.98408"
            ],
            [
                "baefdf48.ffa12"
            ],
            [
                "ab824e1f.3ad1"
            ],
            [
                "9c753d.85c14ac"
            ],
            [
                "6d200160.afc65"
            ],
            [
                "62fb9e33.02bff"
            ],
            [
                "9b3bde89.b6f61"
            ]
        ]
    },
    {
        "id": "e1a8363e.6beae8",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-basic-archive",
        "links": [
            "7e343bf8.8fec14"
        ],
        "x": 1295,
        "y": 2160,
        "wires": []
    },
    {
        "id": "6a3353b.128b3ac",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-basic/websocket",
        "server": "e71c9288.03dd3",
        "client": "",
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "4bda293b.6a4c38",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "Action Switch",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "renew",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 660,
        "y": 1420,
        "wires": [
            [
                "d6984859.a267c8"
            ],
            [
                "a4b9417e.3c5d7"
            ],
            [
                "cc1f29ab.67bb78"
            ],
            [
                "14b7f9da.2d7c86"
            ]
        ]
    },
    {
        "id": "1e710224.de723e",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Action Error Message Out",
        "links": [
            "7e343bf8.8fec14",
            "80b48a2e.fb2228",
            "d0705889.a79d18",
            "a8a88b3.a878478",
            "4d17b368.0e74ac",
            "3b3f00c.e1f7e",
            "c7b674e2.931c88",
            "6d4ae2aa.ffa1cc",
            "ae6d0749.651b58",
            "d8b0e2fe.3e47e",
            "ebb358f3.95c638",
            "bf657e74.6ac66",
            "ffb80136.883f8",
            "9ef4d388.4bcf7",
            "80c07ebe.4f177",
            "8c18e9cd.f40f08",
            "435b9182.cc3ac",
            "8d0f331.1da14d",
            "b7a01bb7.010988",
            "fb8b1545.8b1a38"
        ],
        "x": 795,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d6984859.a267c8",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "2132a017.ba23f",
                "1c2ceb85.01cf44"
            ]
        ]
    },
    {
        "id": "49150800.c088c8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 60,
        "wires": [
            [
                "781dbbc5.3a2e14"
            ]
        ]
    },
    {
        "id": "1e9bf28b.344d8d",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "44733e49.ba7ec"
            ]
        ]
    },
    {
        "id": "b213f397.94307",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['coreView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "64665cab.c46c24"
            ]
        ]
    },
    {
        "id": "a4b9417e.3c5d7",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "2132a017.ba23f"
            ]
        ]
    },
    {
        "id": "cc1f29ab.67bb78",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "readDatabase out",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 795,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c4595efc.a717b",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive in",
        "links": [
            "cc1f29ab.67bb78",
            "8257a0f.6bb886",
            "a66aeb44.77e748",
            "e826b9af.41ca18",
            "38378280.30819e",
            "1ba08149.e5642f",
            "c7ccca02.902f08",
            "8a054338.b6be3",
            "7ceba2d4.4dcf3c",
            "721a7865.6ff7e8",
            "3d600dd.1fe0cf2",
            "d958fbdd.fe1e48",
            "a92d4c9a.7f5e4",
            "b9a67318.b5255"
        ],
        "x": 295,
        "y": 2400,
        "wires": [
            [
                "b6b8b063.9f62f"
            ]
        ]
    },
    {
        "id": "54f691be.e6b47",
        "type": "json",
        "z": "fee416c.fb205e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "7de7a240.cf57fc"
            ]
        ]
    },
    {
        "id": "7de7a240.cf57fc",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "632b2f1c.15e43"
            ]
        ]
    },
    {
        "id": "632b2f1c.15e43",
        "type": "JsonWebToken",
        "z": "fee416c.fb205e8",
        "name": "roleToken",
        "tokenconfig": "6acefdd9.69f124",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "92d40c38.2026a"
            ]
        ]
    },
    {
        "id": "92d40c38.2026a",
        "type": "function",
        "z": "fee416c.fb205e8",
        "name": "Check Role",
        "func": "var errMsg = null;\nvar tokenError = msg.error;\nif (tokenError != undefined)\n{\n    errMsg = \n    {\n        topic : msg.topic, \n        payload:\n        {\n            topic:'badToken', \n            payload: msg.topic + \" badToken\",\n            userID : msg.userID,\n            role   : msg.role\n        }\n    };\n    return [null,errMsg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        errMsg = \n        {\n            topic : msg.topic, \n            payload:\n            {\n                topic:'loginExpired', \n                payload: msg.topic + \" login expired\",\n                userID : msg.userID,\n                role   : msg.role\n            }\n        };\n        return [null,errMsg];\n    }\n}\npermittedRole = false;\nfor (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n{\n    if (msg.token.roles[itoken] == msg.role) permittedRole = true;\n}\nif (permittedRole) return [msg,null];\n\nerrMsg = \n{\n    topic : msg.topic, \n    payload:\n    {\n        topic  : 'permissionError', \n        payload: msg.topic + \" not permitted\",\n        userID : msg.userID,\n        role   : msg.role\n    }\n};\n\nreturn [null,errMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e6d1a4ad.2186e8",
        "type": "subflow:fee416c.fb205e8",
        "z": "8475ab9.3d26058",
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "4bda293b.6a4c38"
            ],
            [
                "1e710224.de723e"
            ]
        ]
    },
    {
        "id": "e6871441.93cb88",
        "type": "subflow:fee416c.fb205e8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "f445d1dd.72e4"
            ],
            [
                "192cf6bb.b61fc9"
            ]
        ]
    },
    {
        "id": "192cf6bb.b61fc9",
        "type": "link out",
        "z": "dc20c6e0.0feb98",
        "name": "permission error out",
        "links": [
            "23adba5a.1575e6"
        ],
        "x": 435,
        "y": 440,
        "wires": []
    },
    {
        "id": "d8854f8.5c820b",
        "type": "subflow:fee416c.fb205e8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "23847e72.ad5052"
            ],
            [
                "e6340f03.d4d27"
            ]
        ]
    },
    {
        "id": "e6340f03.d4d27",
        "type": "link out",
        "z": "b94899c9.b16088",
        "name": "permission error out",
        "links": [
            "91ece6bd.2f67d8"
        ],
        "x": 415,
        "y": 420,
        "wires": []
    },
    {
        "id": "91ece6bd.2f67d8",
        "type": "link in",
        "z": "b94899c9.b16088",
        "name": "vector websocket in",
        "links": [
            "e6340f03.d4d27"
        ],
        "x": 1625,
        "y": 340,
        "wires": [
            [
                "c10d43eb.a111b",
                "aa9e819c.38f8f"
            ]
        ]
    },
    {
        "id": "d29bdb5c.25fd58",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ],
            [
                "6b0f35.479560cc"
            ]
        ]
    },
    {
        "id": "6b0f35.479560cc",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Access Log Permission check",
        "links": [
            "29e4a.7f1061b68"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "29e4a.7f1061b68",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Access Log Websocket in",
        "links": [
            "6b0f35.479560cc"
        ],
        "x": 1255,
        "y": 240,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "2f50dfa8.90179",
        "type": "subflow:fee416c.fb205e8",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "8d3e512a.420f"
            ],
            [
                "96bdbbff.532998"
            ]
        ]
    },
    {
        "id": "96bdbbff.532998",
        "type": "link out",
        "z": "90f83725.6dae08",
        "name": "Settings Log Permission check",
        "links": [
            "ad5167e6.cd9ed8"
        ],
        "x": 535,
        "y": 420,
        "wires": []
    },
    {
        "id": "ad5167e6.cd9ed8",
        "type": "link in",
        "z": "90f83725.6dae08",
        "name": "Settings Log Websocket in",
        "links": [
            "96bdbbff.532998"
        ],
        "x": 1255,
        "y": 420,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "f728a8f0.ad8b68",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <h1 style=\"text-align:center;color:#415c71;\">{{{payload.errorMsg}}}</h1>\n    <form action=\"/process-login\" method=\"POST\">\n        <table align='center'>\n            <tr>\n                <td>\n                    <label for=\"username\" class=\"big-text\">User</label>\n                </td>\n                <td>\n                    <input name=\"username\" type=\"text\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <label for=\"password\" class=\"big-text\">Password</label>\n                </td>\n                <td>\n                    <input name=\"password\" type=\"password\" class=\"big-text\"/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <input type=\"submit\" class=\"btn jumbotron-button btn-block big-text bold-text\"/>\n                </td>\n            </tr>\n        </table>    \n        <input type=\"hidden\" name=\"url\" value=\"{{{req.url}}}\" />\n    </form>  ",
        "output": "str",
        "x": 1030,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9c382ca2.1a311",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Log-in",
        "output": "str",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "5896b9d2.764738"
            ]
        ]
    },
    {
        "id": "c0be6557.9ceae8",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "9c382ca2.1a311"
            ]
        ]
    },
    {
        "id": "5896b9d2.764738",
        "type": "template",
        "z": "2dba0745.a98d98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "f728a8f0.ad8b68"
            ]
        ]
    },
    {
        "id": "5726b4b4.e7359c",
        "type": "websocket in",
        "z": "a858ad3a.95706",
        "name": "/control-apps/websocket",
        "server": "9375a6d1.3e14e8",
        "client": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "56e9df4a.f6e63"
            ]
        ]
    },
    {
        "id": "56e9df4a.f6e63",
        "type": "subflow:fee416c.fb205e8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "c60da0b.fd1f96"
            ],
            [
                "6458b16b.42fe9"
            ]
        ]
    },
    {
        "id": "c60da0b.fd1f96",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 300,
        "wires": [
            [
                "503fb1fa.e2bb1"
            ]
        ]
    },
    {
        "id": "503fb1fa.e2bb1",
        "type": "JsonWebToken",
        "z": "a858ad3a.95706",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 780,
        "y": 300,
        "wires": [
            [
                "271627bb.951278"
            ]
        ]
    },
    {
        "id": "271627bb.951278",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "6458b16b.42fe9"
            ]
        ]
    },
    {
        "id": "6458b16b.42fe9",
        "type": "websocket out",
        "z": "a858ad3a.95706",
        "name": "/control-apps/websocket",
        "server": "9375a6d1.3e14e8",
        "client": "",
        "x": 1170,
        "y": 300,
        "wires": []
    },
    {
        "id": "1b76d304.e576bd",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "check token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "e57a1a0e.507818"
            ]
        ]
    },
    {
        "id": "96140e28.f0af",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token and Role",
        "func": "msg.token = msg.payload.token;\ndelete  msg.payload.token;\nmsg.payload.allowedRoles = [\"readDatabase\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 960,
        "wires": [
            [
                "1b76d304.e576bd"
            ]
        ]
    },
    {
        "id": "e57a1a0e.507818",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload = 'Error-BadToken';\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload = 'Error-LoginExpired';\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload = 'Error-CredentialsNotValidForApp';\n    return [null,msg];\n}\ndelete msg.token;\ndelete msg.payload.allowedRoles;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 960,
        "wires": [
            [
                "7db15dac.050a44"
            ],
            [
                "8cf93fbc.123f4"
            ]
        ]
    },
    {
        "id": "8cf93fbc.123f4",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1000,
        "wires": []
    },
    {
        "id": "544d2b75.abe264",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/device?deviceType=blinky-basic&name=01&token=$(< blinky-lite-v2-token.txt)\" | json_pp > out.json",
        "info": "",
        "x": 480,
        "y": 920,
        "wires": []
    },
    {
        "id": "9a2f9ea0.84376",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/setDevice",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "aa38fdda.bad9d"
            ]
        ]
    },
    {
        "id": "8fb8e5ba.bc08a8",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "check token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "39c11e39.486842"
            ]
        ]
    },
    {
        "id": "aa38fdda.bad9d",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token and Role",
        "func": "msg.token = msg.payload.token;\ndelete  msg.payload.token;\nmsg.payload.allowedRoles = [\"rsetting\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "8fb8e5ba.bc08a8"
            ]
        ]
    },
    {
        "id": "39c11e39.486842",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check permitted roles",
        "func": "var tokenError = msg.error;\nif (tokenError != undefined)\n{\n    msg.payload = 'Error-BadToken';\n    return [null,msg];\n}\nif (msg.token.expDate > 0)\n{\n    if (msg.token.expDate < new Date().getTime())\n    {\n        msg.payload = 'Error-LoginExpired';\n        return [null,msg];\n    }\n}\nvar permittedRole = false;\nfor (irole = 0; irole < msg.payload.allowedRoles.length; ++irole)\n{\n    for (itoken = 0; itoken < msg.token.roles.length; ++itoken)\n    {\n        if (msg.token.roles[itoken] == msg.payload.allowedRoles[irole]) permittedRole = true;\n    }\n}\nif (!permittedRole)\n{\n    msg.payload = 'Error-CredentialsNotValidFoApp';\n    return [null,msg];\n}\ndelete msg.token;\ndelete msg.payload.allowedRoles;\nreturn [msg,null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "ac020639.dbe368"
            ],
            [
                "9f2b501a.06c8c"
            ]
        ]
    },
    {
        "id": "9f2b501a.06c8c",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ac020639.dbe368",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "msg['userData'] = [];\nvar ikey = 0;\nfor( var key in msg.payload ) \n{\n    if ((key != 'deviceType') && (key != 'name') )\n    {\n        msg['userData'][ikey] = {attr : key, value: Number(msg.payload[key])};\n        ++ikey\n    }\n}\nif (msg['userData'] < 1)\n{\n    msg.payload = 'Error-NoAttributesFound';\n    return [null,msg];\n}\nvar queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1120,
        "wires": [
            [
                "4a7b7cdd.65e2a4"
            ],
            [
                "9f2b501a.06c8c"
            ]
        ]
    },
    {
        "id": "4a7b7cdd.65e2a4",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1090,
        "y": 1120,
        "wires": [
            [
                "50d24d87.ef19d4"
            ]
        ]
    },
    {
        "id": "50d24d87.ef19d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup MQTT",
        "func": "function isEmpty(obj) \n{\n    for(var prop in obj) {\n        if(obj.hasOwnProperty(prop))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    msg.payload = 'Error-DeviceNotFound';\n    return [null,null,msg];\n}\nfor (var ii = 0; ii < msg.userData.length; ++ii)\n{\n    try\n    {\n        msg.payload[msg.userData[ii]['attr']].value = msg.userData[ii]['value'];\n    }\n    catch (e)\n    {\n        msg.payload = 'Error-' + msg.userData[ii]['attr'] + 'NotFound';\n        return [null,null,msg];\n    }\n}\nvar newMsg = \n{\n    topic : global.get('project') + '/' + msg.payload.deviceType + '/' + msg.payload.name + '/setting',\n    payload : JSON.stringify(msg.payload)\n}\nmsg.payload = 'Success';\nflow.set('setDeviceMqtt',{mqttTopic:newMsg.topic, mqttDevice: JSON.parse(newMsg.payload)})\nreturn [newMsg,msg,msg];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 1120,
        "wires": [
            [
                "56debf6b.c8177"
            ],
            [
                "624fda40.949a64"
            ],
            [
                "1448fbc5.6b29b4"
            ]
        ]
    },
    {
        "id": "1448fbc5.6b29b4",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 1180,
        "wires": []
    },
    {
        "id": "56debf6b.c8177",
        "type": "gzip",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 1450,
        "y": 1100,
        "wires": [
            [
                "6c992b47.a19184"
            ]
        ]
    },
    {
        "id": "6c992b47.a19184",
        "type": "mqtt out",
        "z": "90f83725.6dae08",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1620,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f46a4c46.e6b3a",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1090,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "624fda40.949a64",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 1160,
        "wires": [
            [
                "32e0be49.2d3482"
            ]
        ]
    },
    {
        "id": "32e0be49.2d3482",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nreturn {\n    topic:'clientInfo', \n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1580,
        "y": 1200,
        "wires": [
            [
                "f2042f45.64c2a"
            ]
        ]
    },
    {
        "id": "f2042f45.64c2a",
        "type": "http request",
        "z": "90f83725.6dae08",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1590,
        "y": 1240,
        "wires": [
            [
                "b7dcd98.26fbd28"
            ]
        ]
    },
    {
        "id": "b7dcd98.26fbd28",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = '/setDevice';\ndata['userID'] = -1;\ndata['timeStamp'] = new Date().getTime();\nvar setDeviceMqtt = flow.get('setDeviceMqtt');\nvar newMsg = \n{\n    topic:'settingLogEntry',\n    payload:\n    {\n        topic     : setDeviceMqtt.mqttTopic,\n        userID    : -1,\n        device    : setDeviceMqtt.mqttDevice,\n        timeStamp : data['timeStamp'],\n        ipInfo    : data\n    }\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1600,
        "y": 1280,
        "wires": [
            [
                "54b525ac.6a602c"
            ]
        ]
    },
    {
        "id": "54b525ac.6a602c",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 1650,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "35ffcf83.1547",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "41efb541.ee2eec"
            ]
        ]
    },
    {
        "id": "9ac12bdb.3cd258",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 180,
        "wires": [
            [
                "f46a4c46.e6b3a"
            ]
        ]
    },
    {
        "id": "80520db7.bb9d6",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/setDevice?deviceType=blinky-basic&name=02&ledOn=0&token=$(< blinky-lite-v2-token.txt)\"",
        "info": "",
        "x": 460,
        "y": 1060,
        "wires": []
    },
    {
        "id": "95559ed1.ef85a",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/rlogin",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "167b94d7.2438fb"
            ]
        ]
    },
    {
        "id": "7ec14c90.e05b84",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "users",
        "operation": "findOne",
        "x": 470,
        "y": 1400,
        "wires": [
            [
                "e8388d01.1c89a"
            ]
        ]
    },
    {
        "id": "167b94d7.2438fb",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "user query",
        "func": "msg.userData = {cred : {}, url : msg.payload.url};\nmsg.userData.cred = \n{\n    username : msg.payload.username, \n    password : msg.payload.password,\n};\nmsg.payload =  [{username : msg.userData.cred.username },  {projection  :{_id :   0}}]\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 1400,
        "wires": [
            [
                "7ec14c90.e05b84"
            ]
        ]
    },
    {
        "id": "e8388d01.1c89a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check username",
        "func": "function isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload))\n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-UserNotFound';\n    return [msg, null];\n}\nvar pwcheck = \n{\n    \"topic\"     : \"checkPassword\",\n    \"txt\"       : msg.userData.cred.password,\n    \"hash\"      : msg.payload.password\n}\nmsg.payload.profile['expDate'] = -1;\nif ( msg.payload.profile.timeoutMin > 0)\n{\n    msg.payload.profile['expDate'] = new Date().getTime() + msg.payload.profile.timeoutMin * 60000;\n}\nmsg.payload.profile['username'] = msg.payload.username;\nmsg.userData.cred.profile = msg.payload.profile;\nmsg.payload = pwcheck;\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "25881126.cb17ae"
            ],
            [
                "c8f33f39.e1014"
            ]
        ]
    },
    {
        "id": "25881126.cb17ae",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c8f33f39.e1014",
        "type": "bcrypt",
        "z": "90f83725.6dae08",
        "name": "decrypt password",
        "action": "verify",
        "field": "payload.txt",
        "hash": "payload.hash",
        "rounds": 10,
        "x": 890,
        "y": 1400,
        "wires": [
            [
                "50b2e9d4.8c3558"
            ]
        ]
    },
    {
        "id": "50b2e9d4.8c3558",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check password",
        "func": "if (msg.match == false)  \n{\n    delete msg.userData['cred'];\n    msg.payload = 'Error-InvalidPassword';\n    return [msg, null];\n\n}\nmsg.payload = msg.userData.cred.profile;\ndelete msg.userData['cred'];\ndelete msg['match'];\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 1400,
        "wires": [
            [
                "25881126.cb17ae"
            ],
            [
                "2585d0a4.d3cd9"
            ]
        ]
    },
    {
        "id": "2585d0a4.d3cd9",
        "type": "JsonWebToken",
        "z": "90f83725.6dae08",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 1300,
        "y": 1400,
        "wires": [
            [
                "9f2410e6.14e8"
            ]
        ]
    },
    {
        "id": "9f2410e6.14e8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set token",
        "func": "msg.payload = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1440,
        "y": 1400,
        "wires": [
            [
                "9f444dd0.9583"
            ]
        ]
    },
    {
        "id": "9f444dd0.9583",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8e76fa92.a3ca88",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "curl \"http://localhost:60427/rlogin?username=user&password=blinky-lite\" > blinky-lite-v2-token.txt",
        "info": "",
        "x": 400,
        "y": 1300,
        "wires": []
    },
    {
        "id": "9e3fb71e.5349e8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 900,
        "y": 100,
        "wires": [
            [
                "8f8ebd71.b1cf1"
            ]
        ]
    },
    {
        "id": "d9f475e3.2ebe68",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.launcher",
        "field": "payload.html.launcher",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-4\" align=\"center\">\n                                <span class='card-text' >App</span>\n                            </div>\n                            <div class=\"col-md-8\" align=\"center\">\n                                <select class=\"custom-select big-text\" id=\"application\" onchange=\"appSelected()\">\n                                    <option value=\"none\">none</option>\n                                    <option value=\"blinky-basic\">blinky-basic</option>\n                                    <option value=\"blinky-cosmic-interval\">blinky-cosmic-interval</option>\n                                    <option value=\"blinky-DS18B20\">blinky-DS18B20</option>\n                                    <option value=\"blinky-env\">blinky-env</option>\n                                    <option value=\"blinky-power-relay\">blinky-power-relay</option>\n                                    <option value=\"blinky-relay-bake\">blinky-relay-bake</option>\n                                    <option value=\"blinky-shaker\">blinky-shaker</option>\n                                    <option value=\"blinky-shiver-expert\">blinky-shiver-expert</option>\n                                    <option value=\"blinky-shiver-simple\">blinky-shiver-simple</option>\n                                    <option value=\"blinky-stepper\">blinky-stepper</option>\n                                    <option value=\"blinky-ssr-bake\">blinky-ssr-bake</option>\n                                    <option value=\"blinky-thermo\">blinky-thermo</option>\n                                    <option value=\"blinky-thermo-cam\">blinky-thermo-cam</option>\n                                    <option value=\"blinky-thermo-cam-archive\">blinky-thermo-cam-archive</option>\n                                    <option value=\"blinky-turnstile\">blinky-turnstile</option>\n                                    <option value=\"blinky-wind\">blinky-wind</option>\n                                    <option value=\"blinky-webcam\">blinky-webcam</option>\n                                    <option value=\"solar-regulator\">solar-regulator</option>\n                                    <option value=\"nb-freezer-mon\">nb-freezer-mon</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-4\" align=\"center\">\n                                <span class='card-text' >Device</span>\n                            </div>\n                            <div class=\"col-md-8\" align=\"center\">\n                                <select class=\"custom-select big-text\" id=\"deviceA\" onchange=\"deviceAselected()\">\n                                    <option value=\"none\">none</option>\n                                    <option value=\"01\">01</option>\n                                    <option value=\"02\">02</option>\n                                    <option value=\"03\">03</option>\n                                    <option value=\"04\">04</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"col-md-1\" align=\"center\">\n                            </div>\n                            <div class=\"col-md-5\" align=\"center\">\n                            </div>\n                            <div class=\"col-md-5\" align=\"center\">\n                                <button class='btn btn-block card-button big-text' id='launchAppButton' onclick=\"launchApp()\" >Launch</button>\n                            </div>\n                            <div class=\"col-md-1\" align=\"center\">\n                            </div>\n                        </div>\n                    </div>\n                </div>",
        "output": "str",
        "x": 920,
        "y": 60,
        "wires": [
            [
                "9e3fb71e.5349e8"
            ]
        ]
    },
    {
        "id": "fa2e8992.31b268",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            getCreds();\n            setInterval(function(){getCreds();}, 1000);\n            initLaunchMenu();\n            \n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "583ab8.267ae548"
            ]
        ]
    },
    {
        "id": "583ab8.267ae548",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.launcher",
        "field": "payload.script.launcher",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function initLaunchMenu()\n        {\n            $('#deviceA').prop('disabled', true);\n            $('#launchAppButton').prop('disabled', true);\n        }\n\n        function appSelected()\n        {\n            var application = $('#application').val();\n            if (application == 'none')\n            {\n                initLaunchMenu();\n            }\n            else\n            {\n                $('#deviceA').prop('disabled', false);\n                $('#launchAppButton').prop('disabled', true);\n            }\n        }\n        function deviceAselected()\n        {\n            var deviceA = $('#deviceA').val();\n            if (deviceA == 'none')\n            {\n               $('#launchAppButton').prop('disabled', true);\n            }\n            else\n            {\n                $('#launchAppButton').prop('disabled', false);\n            }\n        }\n        function launchApp()\n        {\n            var application = $('#application').val();\n            var deviceA = $('#deviceA').val();\n            var link = \"/\" + application + '?name=' + deviceA;\n            window.location.href = link;\n//            window.open(link, '_blank');\n        }\n",
        "output": "str",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "1b12d27c.5827be"
            ]
        ]
    },
    {
        "id": "1b12d27c.5827be",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "c207bc73.737ed"
            ]
        ]
    },
    {
        "id": "28cd98f1.2a1518",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "b6fcc866.328488"
            ]
        ]
    },
    {
        "id": "2f9f8abf.a80656",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "c1034be9.37f0a8"
            ]
        ]
    },
    {
        "id": "7ad87996.ca0e68",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-stepper/websocket",
        "server": "c4d6389f.42aca8",
        "client": "",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "d0705889.a79d18",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky stepper input socket",
        "links": [
            "1e710224.de723e",
            "cf0c1c82.336a3",
            "224d9b05.f92104",
            "beaaec7b.14e4"
        ],
        "x": 895,
        "y": 100,
        "wires": [
            [
                "7ad87996.ca0e68"
            ]
        ]
    },
    {
        "id": "beaaec7b.14e4",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-stepper mqtt",
        "links": [
            "d0705889.a79d18"
        ],
        "x": 775,
        "y": 140,
        "wires": []
    },
    {
        "id": "26e86d49.a53492",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-stepper/websocket",
        "server": "c4d6389f.42aca8",
        "client": "",
        "x": 150,
        "y": 1200,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "64102cb4.19f984",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-stepper",
        "url": "/blinky-stepper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "957fb6ec.123398"
            ]
        ]
    },
    {
        "id": "957fb6ec.123398",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "dc9fbfa.3e6864"
            ]
        ]
    },
    {
        "id": "dc9fbfa.3e6864",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "9e172c0d.a4435"
            ]
        ]
    },
    {
        "id": "9e172c0d.a4435",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-stepper';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "fbde8f14.91d79"
            ]
        ]
    },
    {
        "id": "ef8f40f8.b42e4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Stepper {{{payload.script.name}}}",
        "output": "str",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "a0915612.8dde08"
            ]
        ]
    },
    {
        "id": "fbde8f14.91d79",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "stairsYellow.png",
        "output": "str",
        "x": 330,
        "y": 520,
        "wires": [
            [
                "ef8f40f8.b42e4"
            ]
        ]
    },
    {
        "id": "5c2b74eb.f53eec",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-top:50px;padding-bottom:80px;'>\n            <div class='col-md-12' align='center'>\n                <table  width='100%'>\n                   <tr>\n                        <td width='20%' align='left'> </td>\n                        <td width='60%' align='center'>\n                            <button class='btn btn-block card-button big-text' id=\"moveMotorButton\" onclick=\"moveMotor()\" >Move</button>\n                        </td>\n                        <td width='20%' align='left'> </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.controls}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 970,
        "y": 720,
        "wires": [
            [
                "8217f93a.fb2308"
            ]
        ]
    },
    {
        "id": "a0915612.8dde08",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var noStepsToTurnChanged = false;\n        var stepDelayuSChanged = false;\n        var delayAfterRotationmSChanged = false;\n        var loopDelayChanged = false;\n        \n\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        useWebSockets(true);\n\n        var plotConfig = \n        {\n            trace1Title : 'Revolutions',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Steps to Turn',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n\n        function onDocumentReady()\n        {\n            $('#noStepsToTurnButtonId').hide();\n            $('#stepDelayuSButtonId').hide();\n            $('#delayAfterRotationmSButtonId').hide();\n            $('#loopDelayButtonId').hide();\n            $('#moveMotorButton').prop('disabled', true);\n            \n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n        }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            historyStripChart.addTracePoints(device.nrevs.value, device.noStepsToTurn.value);\n\n            if (!noStepsToTurnChanged) $('#noStepsToTurnInputId').val(device.noStepsToTurn.value);\n            if (!stepDelayuSChanged)   $('#stepDelayuSInputId').val(device.stepDelayuS.value);\n            if (!delayAfterRotationmSChanged)   $('#delayAfterRotationmSInputId').val(device.delayAfterRotationmS.value);\n            if (!loopDelayChanged)   $('#loopDelayInputId').val(device.loopDelay.value);\n            \n            $('#resolutionInputId').val(device.resolution.value);\n            $('#stayAwakeAfterRotationInputId').val(device.stayAwakeAfterRotation.value);\n            $('#resetNrevReadingInputId').val(device.resetNrevReading.value);\n\n            $('#nrevsId').text((Math.round(100 * device.nrevs.value) / 100).toString());\n            if (device.moveMotor.value < 1) $('#moveMotorButton').prop('disabled', false);\n        }\n        function noStepsToTurnChange()\n        {\n            noStepsToTurnChanged = true;\n            $('#noStepsToTurnButtonId').show();\n        }\n        function stepDelayuSChange()\n        {\n            stepDelayuSChanged = true;\n            $('#stepDelayuSButtonId').show();\n        }\n        function delayAfterRotationmSChange()\n        {\n            delayAfterRotationmSChanged = true;\n            $('#delayAfterRotationmSButtonId').show();\n        }\n        function loopDelayChange()\n        {\n            loopDelayChanged = true;\n            $('#loopDelayButtonId').show();\n        }\n        function noStepsToTurn()\n        {\n            $('#noStepsToTurnButtonId').hide();\n            if (isNaN($('#noStepsToTurnInputId').val()))\n            {\n                noStepsToTurnChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#noStepsToTurnInputId').val()), 'noStepsToTurn');\n            noStepsToTurnChanged = false;\n        }\n        function stepDelayuS()\n        {\n            $('#stepDelayuSButtonId').hide();\n            if (isNaN($('#stepDelayuSInputId').val()))\n            {\n                stepDelayuSChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#stepDelayuSInputId').val()), 'stepDelayuS');\n            stepDelayuSChanged = false;\n        }\n        function delayAfterRotationmS()\n        {\n            $('#delayAfterRotationmSButtonId').hide();\n            if (isNaN($('#delayAfterRotationmSInputId').val()))\n            {\n                delayAfterRotationmSChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#delayAfterRotationmSInputId').val()), 'delayAfterRotationmS');\n            delayAfterRotationmSChanged = false;\n        }\n        function loopDelay()\n        {\n            $('#loopDelayButtonId').hide();\n            if (isNaN($('#loopDelayInputId').val()))\n            {\n                loopDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#loopDelayInputId').val()), 'loopDelay');\n            loopDelayChanged = false;\n        }\n        function moveMotor()\n        {\n            setScalarValue(1, 'moveMotor');\n            $('#moveMotorButton').prop('disabled', true);\n        }\n        function resolution()\n        {\n            if (isNaN($('#resolutionInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#resolutionInputId').val()), 'resolution');\n        }\n        function stayAwakeAfterRotation()\n        {\n            if (isNaN($('#stayAwakeAfterRotationInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#stayAwakeAfterRotationInputId').val()), 'stayAwakeAfterRotation');\n        }\n         function resetNrevReading()\n        {\n            if (isNaN($('#resetNrevReadingInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#resetNrevReadingInputId').val()), 'resetNrevReading');\n        }\n",
        "output": "str",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "50a59af2.f0f8e4"
            ]
        ]
    },
    {
        "id": "1471d7d2.82a4d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 680,
        "wires": [
            [
                "bc663011.51711"
            ]
        ]
    },
    {
        "id": "bc663011.51711",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.controls",
        "field": "payload.html.controls",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Motor location</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"nrevsId\" >0</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >No. Of Steps</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"noStepsToTurnInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"noStepsToTurnChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"noStepsToTurnButtonId\" onclick=\"noStepsToTurn()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Step Delay (uS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"stepDelayuSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"stepDelayuSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"stepDelayuSButtonId\" onclick=\"stepDelayuS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Delay After Rotation (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"delayAfterRotationmSInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"delayAfterRotationmSChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"delayAfterRotationmSButtonId\" onclick=\"delayAfterRotationmS()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Loop Delay (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"loopDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"loopDelayChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"loopDelayButtonId\" onclick=\"loopDelay()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Resolution</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"resolutionInputId\" onchange=\"resolution()\" >\n                                                        <option value=\"0\">200</option>\n                                                        <option value=\"1\">400</option>\n                                                        <option value=\"2\">800</option>\n                                                        <option value=\"3\">1600</option>\n                                                        <option value=\"4\">3200</option>\n                                                        <option value=\"5\">6400</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Keep Awake</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"stayAwakeAfterRotationInputId\" onchange=\"stayAwakeAfterRotation()\" >\n                                                        <option value=\"0\">No</option>\n                                                        <option value=\"1\">Yes</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Reset Readback</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <select class=\"custom-select big-text\"  id=\"resetNrevReadingInputId\" onchange=\"resetNrevReading()\" >\n                                                        <option value=\"0\">No</option>\n                                                        <option value=\"1\">Reset</option>\n                                                    </select>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 990,
        "y": 480,
        "wires": [
            [
                "5d9a0a64.c9fec4"
            ]
        ]
    },
    {
        "id": "ad6e6c0b.46516",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['nrevs','noStepsToTurn'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 560,
        "wires": [
            [
                "3ea38060.19065"
            ]
        ]
    },
    {
        "id": "3ea38060.19065",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "512a7186.7e7e"
            ]
        ]
    },
    {
        "id": "512a7186.7e7e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 640,
        "wires": [
            [
                "1471d7d2.82a4d8"
            ]
        ]
    },
    {
        "id": "5d9a0a64.c9fec4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 520,
        "wires": [
            [
                "80254f19.aa401"
            ]
        ]
    },
    {
        "id": "80254f19.aa401",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 560,
        "wires": [
            [
                "d38edc1c.90605"
            ]
        ]
    },
    {
        "id": "d38edc1c.90605",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 980,
        "y": 600,
        "wires": [
            [
                "fa0b9d53.4643c"
            ]
        ]
    },
    {
        "id": "fa0b9d53.4643c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 640,
        "wires": [
            [
                "8f6482a5.43f4a"
            ]
        ]
    },
    {
        "id": "50a59af2.f0f8e4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 520,
        "wires": [
            [
                "ad6e6c0b.46516"
            ]
        ]
    },
    {
        "id": "8217f93a.fb2308",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1270,
        "y": 720,
        "wires": []
    },
    {
        "id": "cf0c1c82.336a3",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-stepper-archive",
        "links": [
            "d0705889.a79d18"
        ],
        "x": 1295,
        "y": 2200,
        "wires": []
    },
    {
        "id": "28ebc7b7.46b498",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 2480,
        "wires": [
            [
                "5b671f90.f02c1"
            ]
        ]
    },
    {
        "id": "5b671f90.f02c1",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 600,
        "y": 2480,
        "wires": [
            [
                "7569e60e.54a608"
            ]
        ]
    },
    {
        "id": "7569e60e.54a608",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 2480,
        "wires": [
            [
                "224d9b05.f92104"
            ]
        ]
    },
    {
        "id": "f4326ad5.3e47e8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "Setup Renew in",
        "links": [
            "14b7f9da.2d7c86"
        ],
        "x": 295,
        "y": 2480,
        "wires": [
            [
                "28ebc7b7.46b498"
            ]
        ]
    },
    {
        "id": "14b7f9da.2d7c86",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "links": [
            "f4326ad5.3e47e8"
        ],
        "x": 795,
        "y": 1500,
        "wires": []
    },
    {
        "id": "224d9b05.f92104",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "renew out",
        "links": [
            "3b3f00c.e1f7e",
            "435b9182.cc3ac",
            "4d17b368.0e74ac",
            "7e343bf8.8fec14",
            "80b48a2e.fb2228",
            "80c07ebe.4f177",
            "8c18e9cd.f40f08",
            "8d0f331.1da14d",
            "9ef4d388.4bcf7",
            "a8a88b3.a878478",
            "ae6d0749.651b58",
            "b7a01bb7.010988",
            "bf657e74.6ac66",
            "d0705889.a79d18",
            "d8b0e2fe.3e47e",
            "ebb358f3.95c638",
            "ffb80136.883f8",
            "fb8b1545.8b1a38"
        ],
        "x": 895,
        "y": 2480,
        "wires": []
    },
    {
        "id": "89a5eb36.c422e8",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-power-relay mqtt",
        "links": [
            "80b48a2e.fb2228"
        ],
        "x": 775,
        "y": 200,
        "wires": []
    },
    {
        "id": "d594c50e.9ea898",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-power-relay/websocket",
        "server": "3c0c4adc.e7b956",
        "client": "",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "80b48a2e.fb2228",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky power-relay input socket",
        "links": [
            "89a5eb36.c422e8",
            "935b3af0.edbb38",
            "224d9b05.f92104",
            "1e710224.de723e"
        ],
        "x": 895,
        "y": 160,
        "wires": [
            [
                "d594c50e.9ea898"
            ]
        ]
    },
    {
        "id": "935b3af0.edbb38",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-power-relay-archive",
        "links": [
            "80b48a2e.fb2228"
        ],
        "x": 1295,
        "y": 2240,
        "wires": []
    },
    {
        "id": "e7ec4bc.823f0b8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-power-relay';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 840,
        "wires": [
            [
                "bd7bb585.59f0a8"
            ]
        ]
    },
    {
        "id": "710819c.32bd2e8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Power Relay {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 920,
        "wires": [
            [
                "9c6a0d24.c8a51"
            ]
        ]
    },
    {
        "id": "9480c01.435314",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 880,
        "wires": [
            [
                "cf37a4b4.5ca698"
            ]
        ]
    },
    {
        "id": "9c6a0d24.c8a51",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Power',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Current',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        var mqttDevice = null;\n        var device = null;\n        let historyStripChart = new StripChart(plotConfig);\n        var nsamplesChanged = false;\n        var nfilterChanged = false;\n        var avgRmsOffsetChanged = false;\n        var adcTomAChanged = false;\n        var loopDelayChanged = false;\n        \n        function onDocumentReady()\n        {\n            $('#nsamplesButtonId').hide();\n            $('#nfilterButtonId').hide();\n            $('#avgRmsOffsetButtonId').hide();\n            $('#adcTomAButtonId').hide();\n            $('#loopDelayButtonId').hide();\n\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n           switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function nsamplesChange()\n        {\n            nsamplesChanged = true;\n            $('#nsamplesButtonId').show();\n        }\n        function nfilterChange()\n        {\n            nfilterChanged = true;\n            $('#nfilterButtonId').show();\n        }\n        function avgRmsOffsetChange()\n        {\n            avgRmsOffsetChanged = true;\n            $('#avgRmsOffsetButtonId').show();\n        }\n        function adcTomAChange()\n        {\n            adcTomAChanged = true;\n            $('#adcTomAButtonId').show();\n        }\n        function loopDelayChange()\n        {\n            loopDelayChanged = true;\n            $('#loopDelayButtonId').show();\n        }\n        function nsamples()\n        {\n            $('#nsamplesButtonId').hide();\n            if (isNaN($('#nsamplesInputId').val()))\n            {\n                nsamplesChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#nsamplesInputId').val()), 'nsamples');\n            nsamplesChanged = false;\n        }\n        function nfilter()\n        {\n            $('#nfilterButtonId').hide();\n            if (isNaN($('#nfilterInputId').val()))\n            {\n                nfilterChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#nfilterInputId').val()), 'nfilter');\n            nfilterChanged = false;\n        }\n        function avgRmsOffset()\n        {\n            $('#avgRmsOffsetButtonId').hide();\n            if (isNaN($('#avgRmsOffsetInputId').val()))\n            {\n                avgRmsOffsetChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#avgRmsOffsetInputId').val()), 'avgRmsOffset');\n            avgRmsOffsetChanged = false;\n        }\n        function adcTomA()\n        {\n            $('#adcTomAButtonId').hide();\n            if (isNaN($('#adcTomAInputId').val()))\n            {\n                adcTomAChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#adcTomAInputId').val()), 'adcTomA');\n            adcTomAChanged = false;\n        }\n        function loopDelay()\n        {\n            $('#loopDelayButtonId').hide();\n            if (isNaN($('#loopDelayInputId').val()))\n            {\n                loopDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#loopDelayInputId').val()), 'loopDelay');\n            loopDelayChanged = false;\n        }\n",
        "output": "str",
        "x": 690,
        "y": 840,
        "wires": [
            [
                "9480c01.435314"
            ]
        ]
    },
    {
        "id": "cf37a4b4.5ca698",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#avgRmsId').text(device.avgRms.value);\n            $('#milliAmpsId').text(device.milliAmps.value);\n            $('#powerId').text(device.power.value);\n            $('#adcSampleRateId').text(device.adcSampleRate.value);\n            historyStripChart.addTracePoints(device.power.value, device.milliAmps.value);\n            if (!nsamplesChanged)$('#nsamplesInputId').val(device.nsamples.value);\n            if (!nfilterChanged)$('#nfilterInputId').val(device.nfilter.value);\n            if (!avgRmsOffsetChanged)$('#avgRmsOffsetInputId').val(device.avgRmsOffset.value);\n            if (!adcTomAChanged)$('#adcTomAInputId').val(device.adcTomA.value);\n            if (!loopDelayChanged)$('#loopDelayInputId').val(device.loopDelay.value);\n\n            buttonColor = '#ff0000';\n            buttonTextColor = '#000000';\n            buttonText = \"Off\";\n            if (device.powerOn.value > 0) \n            {\n                buttonColor = '#00ff00';\n                buttonText = 'On';\n            }\n            $('#powerOnButtonId').css('color', buttonTextColor); \n            $('#powerOnButtonId').css('background-color', buttonColor); \n            $('#powerOnButtonId').text(buttonText); \n       }\n",
        "output": "str",
        "x": 720,
        "y": 920,
        "wires": [
            [
                "486890db.5caad"
            ]
        ]
    },
    {
        "id": "ed445f7c.467a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 1040,
        "wires": [
            [
                "84864105.62b85"
            ]
        ]
    },
    {
        "id": "ccca63dd.a647c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.toggleButtons}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 1120,
        "wires": [
            [
                "12a2a77c.d36bf9"
            ]
        ]
    },
    {
        "id": "a9372311.c8e76",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 1080,
        "wires": [
            [
                "bb919909.77ccc8"
            ]
        ]
    },
    {
        "id": "6fc51615.0102f8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1000,
        "wires": [
            [
                "c9ac94fa.ab9fe8"
            ]
        ]
    },
    {
        "id": "cb04861c.229c68",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "bb8e689d.7ee058"
            ]
        ]
    },
    {
        "id": "64557181.c5124",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 880,
        "wires": [
            [
                "cb04861c.229c68"
            ]
        ]
    },
    {
        "id": "12a2a77c.d36bf9",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                 <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Power On/Off</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:grey;color:black' id='powerOnButtonId' onclick=\"powerOn()\" >?</button>\n                                    </td>\n                                    <td width='20%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Power (W)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='powerId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('power')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Current (mA)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='milliAmpsId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('milliAmps')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Avg RMS Count</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='avgRmsId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('avgRms')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Sample Rate (kHz)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='adcSampleRateId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('adcSampleRate')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Average Samples</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"nsamplesInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"nsamplesChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"nsamplesButtonId\" onclick=\"nsamples()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Line Filter Samples</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"nfilterInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"nfilterChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"nfilterButtonId\" onclick=\"nfilter()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >RMS Offset</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"avgRmsOffsetInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"avgRmsOffsetChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"avgRmsOffsetButtonId\" onclick=\"avgRmsOffset()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >ADC Conversion</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"adcTomAInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"adcTomAChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"adcTomAButtonId\" onclick=\"adcTomA()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Loop Delay (mS)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"loopDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"loopDelayChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"loopDelayButtonId\" onclick=\"loopDelay()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 840,
        "wires": [
            [
                "64557181.c5124"
            ]
        ]
    },
    {
        "id": "3798ac83.a6e954",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['power','milliAmps'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "ed445f7c.467a8"
            ]
        ]
    },
    {
        "id": "486890db.5caad",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.toggleButtons",
        "field": "payload.script.toggleButtons",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function powerOn()\n        {\n            if (device.powerOn.value > 0)\n            {\n                device.powerOn.value = 0;\n            }\n            else\n            {\n                device.powerOn.value = 1;\n                \n            }\n            $('#ledOnButtonId').css('color', 'black'); \n            $('#ledOnButtonId').css('background-color', 'grey'); \n            $('#ledOnButtonId').text('?'); \n            sendSetting();\n        }\n",
        "output": "str",
        "x": 710,
        "y": 960,
        "wires": [
            [
                "3798ac83.a6e954"
            ]
        ]
    },
    {
        "id": "bd7bb585.59f0a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "yellowSwitch.png",
        "output": "str",
        "x": 370,
        "y": 880,
        "wires": [
            [
                "710819c.32bd2e8"
            ]
        ]
    },
    {
        "id": "bb8e689d.7ee058",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 960,
        "wires": [
            [
                "6fc51615.0102f8"
            ]
        ]
    },
    {
        "id": "84864105.62b85",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 1080,
        "wires": [
            [
                "ccca63dd.a647c"
            ]
        ]
    },
    {
        "id": "bb919909.77ccc8",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1270,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ce3d6855.979e28",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-power-relay",
        "url": "/blinky-power-relay",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "b6436a4f.0a0588"
            ]
        ]
    },
    {
        "id": "b6436a4f.0a0588",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "27a198c0.97abc8"
            ]
        ]
    },
    {
        "id": "27a198c0.97abc8",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 120,
        "y": 920,
        "wires": [
            [
                "e7ec4bc.823f0b8"
            ]
        ]
    },
    {
        "id": "5150ef03.424f4",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-power-relay/websocket",
        "server": "3c0c4adc.e7b956",
        "client": "",
        "x": 160,
        "y": 1260,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "7a83f84a.d12268",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "9c04948e.356768"
            ]
        ]
    },
    {
        "id": "9c04948e.356768",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraCss",
        "field": "payload.extraCss",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 680,
        "y": 400,
        "wires": [
            [
                "7fef0c19.4ed014"
            ]
        ]
    },
    {
        "id": "be82d379.fd146",
        "type": "comment",
        "z": "9c854ea3.68416",
        "name": "Example extraScripts",
        "info": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "4edfe160.96fb8",
        "type": "comment",
        "z": "9c854ea3.68416",
        "name": "Example extraCss",
        "info": "        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "c273ba2f.eae8a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 240,
        "wires": [
            [
                "450b0136.7ccbd"
            ]
        ]
    },
    {
        "id": "8f6482a5.43f4a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 980,
        "y": 680,
        "wires": [
            [
                "5c2b74eb.f53eec"
            ]
        ]
    },
    {
        "id": "c9ac94fa.ab9fe8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "a9372311.c8e76"
            ]
        ]
    },
    {
        "id": "9e17c685.810eb8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-shiver';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "623db03d.d4123"
            ]
        ]
    },
    {
        "id": "ac0bd2ac.3ebdb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Shiver {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 1320,
        "wires": [
            [
                "231bc222.ec828e"
            ]
        ]
    },
    {
        "id": "231bc222.ec828e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var averagesChanged = false;\n        var sampleIntervalChanged = false;\n        var minFreqChanged = false;\n        var maxFreqChanged = false;\n        var freqOffsetChanged = false;\n\n        var graph3d = null;\n        var itimeSlice = 0;\n        var oodataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 100; \n        var timeMax = birdsEyeTimeMax;\n        var modeMax = 255;\n        var modeMin = 1;\n        var maxAmpScale = 8250;\n        var editDeviceProperty = '';\n\n        var threedPlotOptions = \n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            zLabel: 'dB',\n            xLabel: 'Freq (Hz)',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#000000',\n            zMin:0,\n            zMax:10\n        };\n        var plotConfig = \n        {\n            trace1Title : 'Mode Amp(um)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Mode',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        \n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $('#waitForArchiveMessage').hide();\n            \n            $('#averagesButton').hide();\n            $('#sampleIntervalButton').hide();\n            $('#minFreqButton').hide();\n            $('#maxFreqButton').hide();\n            $('#freqOffsetButton').hide();\n\n            $('#averages').attr('disabled',true);\n            $('#sampleInterval').attr('disabled',true);\n            $('#minFreq').attr('disabled',true);\n            $('#maxFreq').attr('disabled',true);\n            $('#freqOffset').attr('disabled',true);\n\n            drawSpectrogram();\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        updateUltraAmpBarChart();\n                        addOoDataArrays();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function updateUltraAmpBarChart()\n        {\n            var ultraAmpAttr = device.ultraAmp;\n            var ultraAmpBarConfig = \n                {\n                    lolo            : ultraAmpAttr.alarm.limits.lolo, \n                    low             : ultraAmpAttr.alarm.limits.low, \n                    high            : ultraAmpAttr.alarm.limits.high, \n                    hihi            : ultraAmpAttr.alarm.limits.hihi, \n                    value           : ultraAmpAttr.value, \n                    unit            : ultraAmpAttr.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ffff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'ultraAmpBarPlot'\n                };\n            setHorzBarWidget(ultraAmpBarConfig);\n            \n        }\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#averages').attr('disabled',false);\n            $('#sampleInterval').attr('disabled',false);\n            $('#minFreq').attr('disabled',false);\n            $('#maxFreq').attr('disabled',false);\n            $('#freqOffset').attr('disabled',false);\n            \n            if (!averagesChanged) $('#averages').val(device.averages.value);\n            if (!sampleIntervalChanged) $('#sampleInterval').val(device.sampleIntervalSetting.value);\n            if (!minFreqChanged) $('#minFreq').val(device.minDisplayMode.value);\n            if (!maxFreqChanged) $('#maxFreq').val(device.maxDisplayMode.value);\n            if (!freqOffsetChanged) $('#freqOffset').val(device.freqOffsetReading.value);\n            historyStripChart.addTracePoints(device.maxAmp.value, device.maxAmpMode.value);\n\n        }\n        function averagesChange()\n        {\n            averagesChanged = true;\n            $('#averagesButton').show();\n        }\n        function sampleIntervalChange()\n        {\n            sampleIntervalChanged = true;\n            $('#sampleIntervalButton').show();\n        }\n        function minFreqChange()\n        {\n            minFreqChanged = true;\n            $('#minFreqButton').show();\n        }\n        function maxFreqChange()\n        {\n            maxFreqChanged = true;\n            $('#maxFreqButton').show();\n        }\n        function freqOffsetChange()\n        {\n            freqOffsetChanged = true;\n            $('#freqOffsetButton').show();\n        }\n        function averages()\n        {\n            $('#averagesButton').hide();\n            if (isNaN($('#averages').val()))\n            {\n                averagesChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#averages').val()), 'averages');\n            averagesChanged = false;\n        }\n        function sampleInterval()\n        {\n            $('#sampleIntervalButton').hide();\n            if (isNaN($('#sampleInterval').val()))\n            {\n                sampleIntervalChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#sampleInterval').val()), 'sampleIntervalSetting');\n            sampleIntervalChanged = false;\n        }\n        function minFreq()\n        {\n            $('#minFreqButton').hide();\n            if (isNaN($('#minFreq').val()))\n            {\n                minFreqChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#minFreq').val()), 'minDisplayMode');\n            minFreqChanged = false;\n        }\n        function maxFreq()\n        {\n            $('#maxFreqButton').hide();\n            if (isNaN($('#maxFreq').val()))\n            {\n                maxFreqChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#maxFreq').val()), 'maxDisplayMode');\n            maxFreqChanged = false;\n        }\n        function freqOffset()\n        {\n            $('#freqOffsetButton').hide();\n            if (isNaN($('#freqOffset').val()))\n            {\n                freqOffsetChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#freqOffset').val()), 'freqOffsetSetting');\n            freqOffsetChanged = false;\n        }\n",
        "output": "str",
        "x": 690,
        "y": 1240,
        "wires": [
            [
                "505d3b57.66dbf4"
            ]
        ]
    },
    {
        "id": "fcb8c6e7.546b08",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 1440,
        "wires": [
            [
                "2427b51c.07513a"
            ]
        ]
    },
    {
        "id": "3f4467c2.8ed568",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.spectrogram}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 1520,
        "wires": [
            [
                "39a887ac.c7a928"
            ]
        ]
    },
    {
        "id": "b39724e1.243138",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.ultraAmpBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.settings}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 1560,
        "wires": [
            [
                "f87598d4.05aaf8"
            ]
        ]
    },
    {
        "id": "91cd103a.aa5da",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1480,
        "wires": [
            [
                "da1c44e0.a9b258"
            ]
        ]
    },
    {
        "id": "da88260.d7a68d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "cb8fedb1.ad6fb"
            ]
        ]
    },
    {
        "id": "710e2bdb.66e0e4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['maxAmp','maxAmpMode'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "fcb8c6e7.546b08"
            ]
        ]
    },
    {
        "id": "623db03d.d4123",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "shiverYellow.png",
        "output": "str",
        "x": 390,
        "y": 1280,
        "wires": [
            [
                "ac0bd2ac.3ebdb"
            ]
        ]
    },
    {
        "id": "cb8fedb1.ad6fb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1440,
        "wires": [
            [
                "91cd103a.aa5da"
            ]
        ]
    },
    {
        "id": "2427b51c.07513a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 1480,
        "wires": [
            [
                "3f4467c2.8ed568"
            ]
        ]
    },
    {
        "id": "39a887ac.c7a928",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 690,
        "y": 1560,
        "wires": [
            [
                "d001e79b.4db5d8"
            ]
        ]
    },
    {
        "id": "d001e79b.4db5d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraCss",
        "field": "payload.extraCss",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "bd6d0393.5b33d"
            ]
        ]
    },
    {
        "id": "964aaf00.3129a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 720,
        "y": 1320,
        "wires": [
            [
                "e2abc749.deae88"
            ]
        ]
    },
    {
        "id": "e2abc749.deae88",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.spectrogram",
        "field": "payload.script.spectrogram",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// spectrogram Javascript\n        function initializeDataArray()\n        {   \n            oodataArray = [];\n            itimeSlice = 0;\n            for (var imode = modeMin; imode <= modeMax; ++imode)\n            {\n                var value = -60.0;\n                oodataArray[imode - modeMin] =\n                {\n                    'x': imode,\n                    'y': 0,\n                    'z': value,\n                    'style': value\n                };\n            }\n        }\n        function drawSpectrogram()\n        {\n            var container = document.getElementById('spectrogram');\n            initializeDataArray();\n            threedPlotOptions.zMax = 0.0;\n            threedPlotOptions.zMin = 20.0 * Math.log10(1.0 / maxAmpScale);\n            \n            graph3d = new vis.Graph3d(container, oodataArray, threedPlotOptions);\n            $(\"#startTime\").text(new Date().toLocaleString());\n            $(\"#stopTime\").text(new Date().toLocaleString());\n            graph3d.on('cameraPositionChange', onCameraPositionChange);\n//            birdsEyeView();\n            sliceView();\n        }\n        function addOoDataArrays()\n        {\n            var spectrum =  device.spectrum;\n            var maxAmp =  device.maxAmp;\n            var spectrumArray = spectrum.value[1];\n            var freqArray = spectrum.value[0];\n\n            var maxAmpMode =  device.maxAmpMode;\n            var minDisplayMode =  device.minDisplayMode;\n            var maxDisplayMode =  device.maxDisplayMode;\n\n            npts = freqArray.length * 2.0;\n            npts2 = freqArray.length;\n            var sampleRate = 2.0 * (freqArray[npts2 - 1] - freqArray[0]);\n            var minDisplayModeIndex = Math.round(minDisplayMode.value * npts / sampleRate);\n            var maxDisplayModeIndex = Math.round(maxDisplayMode.value * npts / sampleRate);\n            \n            if (minDisplayModeIndex < 1) minDisplayModeIndex = 1;\n            if (maxDisplayModeIndex > 255) maxDisplayModeIndex = 255;\n            minDisplayModeIndex = 0;\n            \n            if ((modeMax != maxDisplayModeIndex) || (modeMin != minDisplayModeIndex))\n            {\n                modeMin = minDisplayModeIndex;\n                modeMax = maxDisplayModeIndex;\n                initializeDataArray();\n                graph3d.redraw();\n                return;\n            }\n            if (freeze) return;\n\n            var mostExcitedModeAmp = maxAmp.value;\n            var mostExcitedMode = maxAmpMode.value;\n            $(\"#maxMode\").text(Math.round(100 * mostExcitedMode) / 100);\n            $(\"#maxModeAmplitude\").text(Math.round(100 * mostExcitedModeAmp) / 100);\n        \n            if (itimeSlice < timeMax)\n            {\n                timeStamp[itimeSlice] = new Date().getTime();\n                deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n                for (var imode = modeMin; imode <= modeMax; ++imode)\n                {\n                    var value = Math.round(100.0 * Number(spectrumArray[imode])) / 100.0;\n                    if (value < 1.0)  value = 1.0;\n                    value = 20.0 * Math.log10(value / maxAmpScale);\n                    oodataArray[itimeSlice * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                    {\n                        'x': freqArray[imode],\n                        'y': deltaT,\n                        'z': value,\n//                        'style': value\n                    };\n                }\n                ++itimeSlice;\n            }\n            else\n            {\n                for (var itime = 0; itime < (timeMax - 1); ++itime)\n                {\n                    timeStamp[itime] = timeStamp[itime + 1];\n                    deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                    for (var imode = modeMin; imode <= modeMax; ++imode)\n                    {\n                        oodataArray[itime * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                        {\n                            'x': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].x,\n                            'y': deltaT,\n                            'z': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].z,\n//                            'style': oodataArray[(itime + 1) * (modeMax - modeMin + 1) + (imode - modeMin)].style\n                        };\n                    }\n                }\n                timeStamp[timeMax - 1] = new Date().getTime();\n                deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n                for (var imode = modeMin; imode <= modeMax; ++imode)\n                {\n                    var value = Math.round(100.0 * Number(spectrumArray[imode])) / 100.0;\n                    if (value < 1.0)  value = 1.0;\n                    value = 20.0 * Math.log10(value / maxAmpScale);\n                    oodataArray[(timeMax - 1) * (modeMax - modeMin + 1) + (imode - modeMin)] =\n                    {\n                        'x': freqArray[imode],\n                        'y': deltaT,\n                        'z': value,\n//                        'style': value\n                    };\n                }\n            }\n            $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n            $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n            graph3d.setData(oodataArray);\n        }\n        function freezeRun()\n        {\n            freeze = !freeze;\n            if (freeze)\n            {\n                $(\"#freezeButton\").text('Frozen');\n            }\n            else\n            {\n                $(\"#freezeButton\").text('Running');\n            }\n        }\n        function birdsEyeView()\n        {\n            var horzAngle = 315.0 * 3.1415927 / 180.0;\n            var vertAngle = 45.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;   \n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function sliceView()\n        {\n            var horzAngle = 0.0 * 3.1415927 / 180.0;\n            var vertAngle = 0.0 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n            timeMax = 2;\n            $(\"#plotslices\").val(timeMax.toString());\n            oodataArray = [];\n            itimeSlice = 0;\n            initializeDataArray();\n            graph3d.redraw();\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function topView()\n        {\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n            if (sliceViewActive)\n            {\n                timeMax =  birdsEyeTimeMax;   \n                $(\"#plotslices\").val(timeMax.toString());\n            }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        }\n        function onCameraPositionChange(event) \n        {\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n        }\n",
        "output": "str",
        "x": 710,
        "y": 1360,
        "wires": [
            [
                "710e2bdb.66e0e4"
            ]
        ]
    },
    {
        "id": "bd6d0393.5b33d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-3'>\n                        </div>\n                        <div class='col-md-6'>\n                            <p class='card-title'>Spectrogram</p>\n                         </div>\n                        <div class='col-md-3'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div class=\"container-fluid spectrogram\" align=\"center\" id=\"spectrogram\"></div>\n                                <div width=\"100%\">\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n                                        </div>\n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n                                        </div>\n                                        <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                                            <button class=\"btn jumbotron-button btn-block big-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-3\"  align=\"left\">\n                                            <span class=\"big-text\">Time</span>\n                                        </div>\n                                        <div class=\"col-md-9\">\n                                            <span class=\"big-text\" id=\"stopTime\"></span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                        <div class=\"col-md-8\" align=\"left\" >\n                                            <span class=\"big-text\">Max. Mode Freq.</span>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <span class=\"big-text\" id=\"maxMode\"></span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\"> \n                                         <div class=\"col-md-8\" align=\"left\" >\n                                            <span class=\"big-text\">Max. Mode Amp.</span>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <span class=\"big-text\" id=\"maxModeAmplitude\"></span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1240,
        "wires": [
            [
                "937a3399.e636e"
            ]
        ]
    },
    {
        "id": "937a3399.e636e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.ultraAmpBar",
        "field": "payload.html.ultraAmpBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>UltraSound Amplitude</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"ultraAmpButton\" onclick=\"editDevice('ultraAmp')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"ultraAmpBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1030,
        "y": 1280,
        "wires": [
            [
                "51dee100.41b0d"
            ]
        ]
    },
    {
        "id": "51dee100.41b0d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.settings",
        "field": "payload.html.settings",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Settings</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='averagesLabel'>Averages</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"averages\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"averagesChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"averagesButton\" onclick=\"averages()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regTempLabel'>Sample Interval (uS)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"sampleInterval\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"sampleIntervalChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"sampleIntervalButton\" onclick=\"sampleInterval()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regWindowLabel'>Min. Freq. (Hz)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"minFreq\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"minFreqChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"minFreqButton\" onclick=\"minFreq()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regWindowLabel'>Max. Freq. (Hz)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"maxFreq\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"maxFreqChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"maxFreqButton\" onclick=\"maxFreq()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regWindowLabel'>Freq. Offset (Hz)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"freqOffset\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"freqOffsetChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"freqOffsetButton\" onclick=\"freqOffset()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "49acd113.5aab9"
            ]
        ]
    },
    {
        "id": "6f35b95b.b2e138",
        "type": "comment",
        "z": "9c854ea3.68416",
        "name": "Example extraScripts",
        "info": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "x": 460,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c5684ff7.40aa2",
        "type": "comment",
        "z": "9c854ea3.68416",
        "name": "Example extraCss",
        "info": "        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n",
        "x": 450,
        "y": 1600,
        "wires": []
    },
    {
        "id": "da1c44e0.a9b258",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1520,
        "wires": [
            [
                "b39724e1.243138"
            ]
        ]
    },
    {
        "id": "f87598d4.05aaf8",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6b630bb1.9538f4",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-shiver-expert",
        "url": "/blinky-shiver-expert",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1240,
        "wires": [
            [
                "1c0d191f.1b7ab7"
            ]
        ]
    },
    {
        "id": "1c0d191f.1b7ab7",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 1280,
        "wires": [
            [
                "79fb001d.b057"
            ]
        ]
    },
    {
        "id": "79fb001d.b057",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 1320,
        "wires": [
            [
                "9e17c685.810eb8"
            ]
        ]
    },
    {
        "id": "e96075b6.bf93b8",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shiver-expert/websocket",
        "server": "557f40b4.fc262",
        "client": "",
        "x": 1070,
        "y": 220,
        "wires": []
    },
    {
        "id": "a8a88b3.a878478",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky shiver-expert input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "772958de.6fce18",
            "a4477b71.432a98"
        ],
        "x": 895,
        "y": 220,
        "wires": [
            [
                "e96075b6.bf93b8"
            ]
        ]
    },
    {
        "id": "772958de.6fce18",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-shiver mqtt",
        "links": [
            "a8a88b3.a878478",
            "4d17b368.0e74ac"
        ],
        "x": 775,
        "y": 260,
        "wires": []
    },
    {
        "id": "f273d670.2eec68",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shiver-simple/websocket",
        "server": "19f426d.ba145d9",
        "client": "",
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "4d17b368.0e74ac",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky shiver-simple input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "772958de.6fce18",
            "a4477b71.432a98"
        ],
        "x": 895,
        "y": 280,
        "wires": [
            [
                "f273d670.2eec68"
            ]
        ]
    },
    {
        "id": "12971f64.723261",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shiver-expert/websocket",
        "server": "557f40b4.fc262",
        "client": "",
        "x": 170,
        "y": 1320,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "a4477b71.432a98",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-shiver-archive",
        "links": [
            "4d17b368.0e74ac",
            "a8a88b3.a878478"
        ],
        "x": 1295,
        "y": 2280,
        "wires": []
    },
    {
        "id": "2293d0e2.8669a",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shiver-simple/websocket",
        "server": "19f426d.ba145d9",
        "client": "",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "4f498dd4.8ddad4",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "6f9d3e8e.5dd7c"
            ]
        ]
    },
    {
        "id": "49e3f3a3.2fac0c",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/visDist/vis.js\"></script>\n",
        "output": "str",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "e01d1110.ea59"
            ]
        ]
    },
    {
        "id": "505d3b57.66dbf4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 1280,
        "wires": [
            [
                "964aaf00.3129a"
            ]
        ]
    },
    {
        "id": "49acd113.5aab9",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1360,
        "wires": [
            [
                "da88260.d7a68d8"
            ]
        ]
    },
    {
        "id": "4c965379.05494c",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-shiver';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "39e05016.86e59"
            ]
        ]
    },
    {
        "id": "d2d3a6d9.68cf38",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Shiver {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 1880,
        "wires": [
            [
                "1a591d09.1ef653"
            ]
        ]
    },
    {
        "id": "1a591d09.1ef653",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var editDeviceProperty = '';\n        var plotConfig = \n        {\n            trace1Title : 'Mode Amp(um)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Mode',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        updateMaxAmpBarChart();\n                        updateMaxAmpModeGaugeChart();\n                        updateAvgPowerBarChart();\n                        updateUltraAmpBarChart();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function updateMaxAmpBarChart()\n        {\n            var maxAmpBarConfig = \n                {\n                    lolo            : device.maxAmp.alarm.limits.lolo, \n                    low             : device.maxAmp.alarm.limits.low, \n                    high            : device.maxAmp.alarm.limits.high, \n                    hihi            : device.maxAmp.alarm.limits.hihi, \n                    value           : device.maxAmp.value, \n                    unit            : device.maxAmp.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : 'ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'maxAmpBarPlot'\n                };\n            setHorzBarWidget(maxAmpBarConfig);\n        }\n        function updateMaxAmpModeGaugeChart()\n        {\n            var maxAmpModeGaugeConfig = \n                {\n                    lolo            : device.maxAmpMode.alarm.limits.lolo, \n                    low             : device.maxAmpMode.alarm.limits.low, \n                    high            : device.maxAmpMode.alarm.limits.high, \n                    hihi            : device.maxAmpMode.alarm.limits.hihi, \n                    value           : device.maxAmpMode.value, \n                    unit            : device.maxAmpMode.unit, \n                    textsize        : 38,\n                    label           : 'Freq.', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ffff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'maxAmpModeGaugePlot'\n                };\n            setGaugeWidget(maxAmpModeGaugeConfig);\n        }\n        function updateAvgPowerBarChart()\n        {\n            var avgPowerBarConfig = \n                {\n                    lolo            : device.avgPower.alarm.limits.lolo, \n                    low             : device.avgPower.alarm.limits.low, \n                    high            : device.avgPower.alarm.limits.high, \n                    hihi            : device.avgPower.alarm.limits.hihi, \n                    value           : device.avgPower.value, \n                    unit            : device.avgPower.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : 'ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'avgPowerBarPlot'\n                };\n            setHorzBarWidget(avgPowerBarConfig);\n        }\n        function updateUltraAmpBarChart()\n        {\n            var ultraAmpBarConfig = \n                {\n                    lolo            : device.ultraAmp.alarm.limits.lolo, \n                    low             : device.ultraAmp.alarm.limits.low, \n                    high            : device.ultraAmp.alarm.limits.high, \n                    hihi            : device.ultraAmp.alarm.limits.hihi, \n                    value           : device.ultraAmp.value, \n                    unit            : device.ultraAmp.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#00ff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'ultraAmpBarPlot'\n                };\n            setHorzBarWidget(ultraAmpBarConfig);\n        }\n        function updateDmaReadings()\n        {\n/*            var minFreq = device.minDisplayMode.value;\n            var maxFreq = device.maxDisplayMode.value;\n            if (device.spectrum.value[0][255] < maxFreq) maxFreq = device.spectrum.value[0][255];\n            var maxAmp = device.maxAmp.value;\n            var maxAmpMode = device.maxAmpMode.value;\n            var avgPower = device.avgPower.value;\n*/\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            historyStripChart.addTracePoints(device.maxAmp.value, device.maxAmpMode.value);\n\n        }\n",
        "output": "str",
        "x": 690,
        "y": 1800,
        "wires": [
            [
                "114e1aa.17b7fe5"
            ]
        ]
    },
    {
        "id": "ea922e44.47517",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 2000,
        "wires": [
            [
                "ef1dd994.867d58"
            ]
        ]
    },
    {
        "id": "c8c15c70.4b6d6",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 2080,
        "wires": [
            [
                "6a2fb534.80583c"
            ]
        ]
    },
    {
        "id": "dcea25fd.95a378",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.maxAmpBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.maxAmpModeGauge}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.avgPowerBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.ultraAmpBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 2160,
        "wires": [
            [
                "7bb37bd3.0b63b4"
            ]
        ]
    },
    {
        "id": "b8548d59.47a95",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2080,
        "wires": [
            [
                "b7b36d36.50c5b"
            ]
        ]
    },
    {
        "id": "531a866f.f51ee8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2000,
        "wires": [
            [
                "1cc7568b.5e4799"
            ]
        ]
    },
    {
        "id": "601aad17.498c74",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['maxAmp','maxAmpMode'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1960,
        "wires": [
            [
                "ea922e44.47517"
            ]
        ]
    },
    {
        "id": "39e05016.86e59",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "shiverYellow.png",
        "output": "str",
        "x": 390,
        "y": 1840,
        "wires": [
            [
                "d2d3a6d9.68cf38"
            ]
        ]
    },
    {
        "id": "1cc7568b.5e4799",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2040,
        "wires": [
            [
                "b8548d59.47a95"
            ]
        ]
    },
    {
        "id": "ef1dd994.867d58",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 2040,
        "wires": [
            [
                "c8c15c70.4b6d6"
            ]
        ]
    },
    {
        "id": "6a2fb534.80583c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraScripts",
        "field": "payload.extraScripts",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": " ",
        "output": "str",
        "x": 690,
        "y": 2120,
        "wires": [
            [
                "7667dfe7.357ba"
            ]
        ]
    },
    {
        "id": "7667dfe7.357ba",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraCss",
        "field": "payload.extraCss",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 680,
        "y": 2160,
        "wires": [
            [
                "ee59c08.d38bb4"
            ]
        ]
    },
    {
        "id": "15f31614.60f2da",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 720,
        "y": 1880,
        "wires": [
            [
                "5b301a8b.9cd354"
            ]
        ]
    },
    {
        "id": "5b301a8b.9cd354",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.textsize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.textsize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 710,
        "y": 1920,
        "wires": [
            [
                "601aad17.498c74"
            ]
        ]
    },
    {
        "id": "ee59c08.d38bb4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.maxAmpBar",
        "field": "payload.html.maxAmpBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Vibration Amplitude</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"ultraAmpButton\" onclick=\"editDevice('maxAmp')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"maxAmpBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1800,
        "wires": [
            [
                "55ab8167.5d386"
            ]
        ]
    },
    {
        "id": "55ab8167.5d386",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.maxAmpModeGauge",
        "field": "payload.html.maxAmpModeGauge",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Vibration Frequency</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"ultraAmpButton\" onclick=\"editDevice('maxAmpMode')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"maxAmpModeGaugePlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1050,
        "y": 1840,
        "wires": [
            [
                "dbd2c40d.0de578"
            ]
        ]
    },
    {
        "id": "dbd2c40d.0de578",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.avgPowerBar",
        "field": "payload.html.avgPowerBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Vibration Power</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"ultraAmpButton\" onclick=\"editDevice('avgPower')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"avgPowerBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1880,
        "wires": [
            [
                "38e0f7c2.8776e8"
            ]
        ]
    },
    {
        "id": "38e0f7c2.8776e8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.ultraAmpBar",
        "field": "payload.html.ultraAmpBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>UltraSound Amplitude</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"ultraAmpButton\" onclick=\"editDevice('ultraAmp')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"ultraAmpBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1030,
        "y": 1920,
        "wires": [
            [
                "37d7cd78.6e4712"
            ]
        ]
    },
    {
        "id": "b7b36d36.50c5b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2120,
        "wires": [
            [
                "dcea25fd.95a378"
            ]
        ]
    },
    {
        "id": "7bb37bd3.0b63b4",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2dc1a1c4.02158e",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-shiver-simple",
        "url": "/blinky-shiver-simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1800,
        "wires": [
            [
                "31a5e024.9e436"
            ]
        ]
    },
    {
        "id": "31a5e024.9e436",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 1840,
        "wires": [
            [
                "b8541b48.a85508"
            ]
        ]
    },
    {
        "id": "b8541b48.a85508",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 1880,
        "wires": [
            [
                "4c965379.05494c"
            ]
        ]
    },
    {
        "id": "114e1aa.17b7fe5",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 1840,
        "wires": [
            [
                "15f31614.60f2da"
            ]
        ]
    },
    {
        "id": "37d7cd78.6e4712",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1960,
        "wires": [
            [
                "531a866f.f51ee8"
            ]
        ]
    },
    {
        "id": "66486726.3947a8",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-shaker mqtt",
        "links": [
            "3b3f00c.e1f7e",
            "c7b674e2.931c88",
            "6d4ae2aa.ffa1cc"
        ],
        "x": 775,
        "y": 320,
        "wires": []
    },
    {
        "id": "5293984d.80ce18",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shaker/websocket",
        "server": "11409eb4.88d3c1",
        "client": "",
        "x": 1050,
        "y": 340,
        "wires": []
    },
    {
        "id": "3b3f00c.e1f7e",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky shiver-simple input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "66486726.3947a8"
        ],
        "x": 895,
        "y": 340,
        "wires": [
            [
                "5293984d.80ce18"
            ]
        ]
    },
    {
        "id": "78685123.95a21",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-shaker/websocket",
        "server": "11409eb4.88d3c1",
        "client": "",
        "x": 150,
        "y": 1440,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "ef2d1708.d21768",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-shaker';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 2280,
        "wires": [
            [
                "38293b.5f2f56c6"
            ]
        ]
    },
    {
        "id": "6c47061e.8e5638",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Shaker {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 2360,
        "wires": [
            [
                "ad50f25c.c7f4d"
            ]
        ]
    },
    {
        "id": "ad50f25c.c7f4d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var motorSpeedSliderMoved = false;\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $( function() \n            {\n                $( \"#motorSpeedSlider\" ).slider(\n                    {\n                        stop    :   function( event, ui ) \n                                    {\n                                        if (mqttDevice == null) return;\n                                        $('#motorSpeed').hide();\n                                        var motorSpeedValue = Math.round(2.0 * ui.value) + 100;\n                                        var motorSpeedSetting = device['motor-speed'];\n                                        motorSpeedSetting.value = motorSpeedValue;\n                                        \n                                        sendSetting();\n                            \n                                        setTimeout(function()\n                                        {\n                                            motorSpeedSliderMoved = false; \n                                            $('#motorSpeed').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){motorSpeedSliderMoved = true},\n                    });\n            } );\n            $(\"#motorSpeedSlider\").children(\"div\").css(\"background\",\"red\");\n\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!motorSpeedSliderMoved)\n            {   \n                var motorSpeed = device['motor-speed'].value;\n//                            $('#motorSpeed').text(Math.round(motorSpeed * 0.1638 - 6) + ' Hz');\n                $('#motorSpeed').text(Math.round(motorSpeed * 0.75 - 100.0) + ' Hz');\n                $('#motorSpeedSlider' ).slider( \"value\", Math.round((motorSpeed - 100) / 2.0) );\n            }\n            var motorOn = device['motor-on'].value;\n            if (motorOn == 0)\n            {\n                $('#motorOffButton').css('color', 'var(--color1)'); \n                $('#motorOffButton').css('background-color', 'var(--color5)'); \n                $('#motorOnButton').css('color', 'var(--color5)'); \n                $('#motorOnButton').css('background-color', 'var(--color1)'); \n            }\n            else\n            {\n                $('#motorOffButton').css('color', 'var(--color5)'); \n                $('#motorOffButton').css('background-color', 'var(--color1)'); \n                $('#motorOnButton').css('color', 'var(--color1)'); \n                $('#motorOnButton').css('background-color', 'var(--color5)'); \n            }\n            var motorDirection = device['motor-direction'].value;\n            if (motorDirection == 0)\n            {\n                $('#motorDirectionCCWButton').css('color', 'var(--color1)'); \n                $('#motorDirectionCCWButton').css('background-color', 'var(--color5)'); \n                $('#motorDirectionCWButton').css('color', 'var(--color5)'); \n                $('#motorDirectionCWButton').css('background-color', 'var(--color1)'); \n            }\n            else\n            {\n                $('#motorDirectionCCWButton').css('color', 'var(--color5)'); \n                $('#motorDirectionCCWButton').css('background-color', 'var(--color1)'); \n                $('#motorDirectionCWButton').css('color', 'var(--color1)'); \n                $('#motorDirectionCWButton').css('background-color', 'var(--color5)'); \n            }\n        }\n        function setMotorOn(motorOn)\n        {\n            if (mqttDevice == null) return;\n            var motorOnSetting = device['motor-on'];\n            motorOnSetting.value = motorOn;\n            sendSetting();\n        }\n        function setMotorDirection(motorDirection)\n        {\n            if (mqttDevice == null) return;\n            var motorDirectionSetting = device['motor-direction'];\n            motorDirectionSetting.value = motorDirection;\n            sendSetting();\n        }\n        ",
        "output": "str",
        "x": 690,
        "y": 2280,
        "wires": [
            [
                "96ba9eaf.c359f"
            ]
        ]
    },
    {
        "id": "96ba9eaf.c359f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 2320,
        "wires": [
            [
                "8a4b1366.6efb"
            ]
        ]
    },
    {
        "id": "6371c2b1.d3f55c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 2400,
        "wires": [
            [
                "46e17d79.def6c4"
            ]
        ]
    },
    {
        "id": "2565dfa2.388ca",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.control}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 2440,
        "wires": [
            [
                "40df03da.f6335c"
            ]
        ]
    },
    {
        "id": "b8720bfd.13f9c8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2360,
        "wires": [
            [
                "f2dbbc80.4c0b8"
            ]
        ]
    },
    {
        "id": "38293b.5f2f56c6",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "shakerYellow.png",
        "output": "str",
        "x": 390,
        "y": 2320,
        "wires": [
            [
                "6c47061e.8e5638"
            ]
        ]
    },
    {
        "id": "388f8502.53683a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2320,
        "wires": [
            [
                "b8720bfd.13f9c8"
            ]
        ]
    },
    {
        "id": "8a4b1366.6efb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 2360,
        "wires": [
            [
                "6371c2b1.d3f55c"
            ]
        ]
    },
    {
        "id": "f2dbbc80.4c0b8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2400,
        "wires": [
            [
                "2565dfa2.388ca"
            ]
        ]
    },
    {
        "id": "8a850e1.68de8f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.control",
        "field": "payload.html.control",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='30%'>\n                                        <span class='big-text'>Motor State</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorOffButton\" onclick=\"setMotorOn(0)\">Off</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorOnButton\" onclick=\"setMotorOn(1)\">On</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='30%'>\n                                        <span class='big-text'>Motor Direction</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorDirectionCCWButton\" onclick=\"setMotorDirection(0)\">&#8634;</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"motorDirectionCWButton\" onclick=\"setMotorDirection(1)\">&#8635;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='big-text'>Motor Speed</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='big-text bold-text' id='motorSpeed'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"motorSpeedSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2280,
        "wires": [
            [
                "388f8502.53683a"
            ]
        ]
    },
    {
        "id": "46e17d79.def6c4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "extraCss",
        "field": "payload.extraCss",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n",
        "output": "str",
        "x": 680,
        "y": 2440,
        "wires": [
            [
                "8a850e1.68de8f"
            ]
        ]
    },
    {
        "id": "40df03da.f6335c",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 2440,
        "wires": []
    },
    {
        "id": "3f3b3cfd.e0ac24",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-shaker",
        "url": "/blinky-shaker",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2280,
        "wires": [
            [
                "1c0c51bb.5cb60e"
            ]
        ]
    },
    {
        "id": "1c0c51bb.5cb60e",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 2320,
        "wires": [
            [
                "6e9ed29b.e4bdac"
            ]
        ]
    },
    {
        "id": "6e9ed29b.e4bdac",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 2360,
        "wires": [
            [
                "ef2d1708.d21768"
            ]
        ]
    },
    {
        "id": "78d0accf.e38584",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-thermo/websocket",
        "server": "c9f0eb6c.93d8d8",
        "client": "",
        "x": 1050,
        "y": 400,
        "wires": []
    },
    {
        "id": "ae6d0749.651b58",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky thermo input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "4a0e93c9.98b4fc",
            "7011908d.95c51"
        ],
        "x": 895,
        "y": 400,
        "wires": [
            [
                "78d0accf.e38584"
            ]
        ]
    },
    {
        "id": "4a0e93c9.98b4fc",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-thermo mqtt",
        "links": [
            "ae6d0749.651b58"
        ],
        "x": 775,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ebecf5c.01f9",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-thermo/websocket",
        "server": "c9f0eb6c.93d8d8",
        "client": "",
        "x": 150,
        "y": 1500,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "7011908d.95c51",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-thermo-archive",
        "links": [
            "ae6d0749.651b58"
        ],
        "x": 1295,
        "y": 2320,
        "wires": []
    },
    {
        "id": "24e3a15c.86b8ee",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-thermo';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 2560,
        "wires": [
            [
                "4809c817.870e48"
            ]
        ]
    },
    {
        "id": "678dc4e9.8e6dac",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Thermo {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 2640,
        "wires": [
            [
                "3a8824ac.1e7e3c"
            ]
        ]
    },
    {
        "id": "4809c817.870e48",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 370,
        "y": 2600,
        "wires": [
            [
                "678dc4e9.8e6dac"
            ]
        ]
    },
    {
        "id": "272d5812.2b5918",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'MAX31855 A',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: { color: plotConfig.trace1Color},\n                    visible: true\n\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'MAX31855 B',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: { color: plotConfig.trace2Color},\n                    visible:  true\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'DS18B20 A',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: { color: 'red'},\n                    visible: true\n                };\n                this.trace4 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'DS18B20 B',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: { color: 'green'},\n                    visible: true\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt, trace3Pt, trace4Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                        this.trace4.x.shift();\n                        this.trace4.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                this.trace4.x.push(now);\n                this.trace4.y.push(trace4Pt);\n                this.trace1.visible = $('#max31855ACheck').prop(\"checked\");\n                this.trace2.visible = $('#max31855BCheck').prop(\"checked\");\n                this.trace3.visible = $('#ds18b20ACheck').prop(\"checked\");\n                this.trace4.visible = $('#ds18b20BCheck').prop(\"checked\");\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3, this.trace4], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 2600,
        "wires": [
            [
                "a9289f4a.bc471"
            ]
        ]
    },
    {
        "id": "3a8824ac.1e7e3c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Temp-A (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Temp-B (C)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'temperatureStripChart'\n        };\n        let temperatureStripChart = new StripChart(plotConfig);\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n",
        "output": "str",
        "x": 690,
        "y": 2560,
        "wires": [
            [
                "272d5812.2b5918"
            ]
        ]
    },
    {
        "id": "a2122f7f.cca8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 2720,
        "wires": [
            [
                "30088477.ff133c"
            ]
        ]
    },
    {
        "id": "92a83014.d2471",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 2800,
        "wires": [
            [
                "7381c8c7.e220f8"
            ]
        ]
    },
    {
        "id": "b292af04.9ebd7",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 2800,
        "wires": [
            [
                "bb60ee47.6e36a"
            ]
        ]
    },
    {
        "id": "a3c70d08.573d3",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2720,
        "wires": [
            [
                "6fb0f7f0.50cc98"
            ]
        ]
    },
    {
        "id": "a8580172.72ffe",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2680,
        "wires": [
            [
                "a3c70d08.573d3"
            ]
        ]
    },
    {
        "id": "30088477.ff133c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 2760,
        "wires": [
            [
                "92a83014.d2471"
            ]
        ]
    },
    {
        "id": "6fb0f7f0.50cc98",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2760,
        "wires": [
            [
                "b292af04.9ebd7"
            ]
        ]
    },
    {
        "id": "7f9be640.c7d848",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"temperatureStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2600,
        "wires": [
            [
                "6083f77c.1067d8"
            ]
        ]
    },
    {
        "id": "7381c8c7.e220f8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%' class='big-text bold-text' style='color:#415c71'>Device</td>\n                                    <td width='20%' class='big-text bold-text' style='color:#415c71' align='center'>Value</td>\n                                    <td width='10%' class='big-text bold-text' style='color:#415c71' align='center'>Plot</td>\n                                    <td width='20%' class='big-text bold-text' style='color:#415c71' align='center'>Alarm</td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >MAX31855 A</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='max31855AId' >-100</span>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <input type=\"checkbox\" id=\"max31855ACheck\" style=\"width:30px;height:30px;\" checked>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('mAX31855_A')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >MAX31855 B</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='max31855BId' >-100</span>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <input type=\"checkbox\" id=\"max31855BCheck\" style=\"width:30px;height:30px;\" checked>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('mAX31855_B')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >DS18B20 A</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='ds18b20AId' >-100</span>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <input type=\"checkbox\" id=\"ds18b20ACheck\" style=\"width:30px;height:30px;\" checked>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('dS18B20_A')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >DS18B20 B</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='ds18b20BId' >-100</span>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <input type=\"checkbox\" id=\"ds18b20BCheck\" style=\"width:30px;height:30px;\" checked>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('dS18B20_B')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 2560,
        "wires": [
            [
                "7f9be640.c7d848"
            ]
        ]
    },
    {
        "id": "a9289f4a.bc471",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            temperatureStripChart.addTracePoints(device.mAX31855_A.value, device.mAX31855_B.value, device.dS18B20_A.value, device.dS18B20_B.value);\n            $('#max31855AId').text(device.mAX31855_A.value);\n            $('#max31855BId').text(device.mAX31855_B.value);\n            $('#ds18b20AId').text(device.dS18B20_A.value);\n            $('#ds18b20BId').text(device.dS18B20_B.value);\n        }\n",
        "output": "str",
        "x": 720,
        "y": 2640,
        "wires": [
            [
                "7413735e.007fdc"
            ]
        ]
    },
    {
        "id": "7413735e.007fdc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['mAX31855_A','mAX31855_B', 'dS18B20_A', 'dS18B20_B'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'MAX31855 A',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace1Color},\n                visible: true\n\n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'MAX31855 B',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace2Color},\n                visible:  true\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'DS18B20 A',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: 'red'},\n                visible: true\n            };\n            var trace4 = \n            {\n                x: [],\n                y: [],\n                name: 'DS18B20 B',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: 'green'},\n                visible: true\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                trace4.x[ii] = x;\n                trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n            }\n\n            trace1.visible = $('#max31855ACheck').prop(\"checked\");\n            trace2.visible = $('#max31855BCheck').prop(\"checked\");\n            trace3.visible = $('#ds18b20ACheck').prop(\"checked\");\n            trace4.visible = $('#ds18b20BCheck').prop(\"checked\");\n \n            Plotly.newPlot('archiveChart', [trace1,trace2,trace3,trace4], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 2680,
        "wires": [
            [
                "a2122f7f.cca8"
            ]
        ]
    },
    {
        "id": "6083f77c.1067d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 2640,
        "wires": [
            [
                "a8580172.72ffe"
            ]
        ]
    },
    {
        "id": "bb60ee47.6e36a",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 2800,
        "wires": []
    },
    {
        "id": "78a8d29c.cedd2c",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-thermo",
        "url": "/blinky-thermo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2560,
        "wires": [
            [
                "3215c7e4.891fb8"
            ]
        ]
    },
    {
        "id": "3215c7e4.891fb8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 2600,
        "wires": [
            [
                "7c149a6d.d73fe4"
            ]
        ]
    },
    {
        "id": "7c149a6d.d73fe4",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 140,
        "y": 2640,
        "wires": [
            [
                "24e3a15c.86b8ee"
            ]
        ]
    },
    {
        "id": "5d622fc9.ab529",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "solar-regulator mqtt",
        "links": [
            "d8b0e2fe.3e47e",
            "a7680399.3df9b"
        ],
        "x": 775,
        "y": 440,
        "wires": []
    },
    {
        "id": "6e76a861.60f568",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/solar-regulator/websocket",
        "server": "8a054889.379478",
        "client": "",
        "x": 1060,
        "y": 460,
        "wires": []
    },
    {
        "id": "d8b0e2fe.3e47e",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "solar-regulator input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "5d622fc9.ab529",
            "31c983a.65bbb7c"
        ],
        "x": 895,
        "y": 460,
        "wires": [
            [
                "6e76a861.60f568"
            ]
        ]
    },
    {
        "id": "2eb7cbcf.fe44d4",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/solar-regulator/websocket",
        "server": "8a054889.379478",
        "client": "",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "31c983a.65bbb7c",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "solar-regulator-archive",
        "links": [
            "d8b0e2fe.3e47e",
            "a7680399.3df9b"
        ],
        "x": 1295,
        "y": 2360,
        "wires": []
    },
    {
        "id": "db089069.b20af",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'solar-regulator';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 2940,
        "wires": [
            [
                "c22ebedd.17a73"
            ]
        ]
    },
    {
        "id": "f039a490.13ad48",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Solar Regulator {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 3020,
        "wires": [
            [
                "3c97e5fb.859b6a"
            ]
        ]
    },
    {
        "id": "3c97e5fb.859b6a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Panel',\n            trace2Title : 'Outside',\n            trace3Title : 'Tank Bottom',\n            trace4Title : 'Tank Top',\n            trace5Title : 'Downstairs',\n            trace6Title : 'Upstairs',\n            trace7Title : 'Degree Days',\n            trace1Color : 'red',\n            trace2Color : 'green',\n            trace3Color : 'blue',\n            trace4Color : 'magenta',\n            trace5Color : 'cyan',\n            trace6Color : 'purple',\n            trace7Color : 'orange',\n            axis1Title : 'Temperature (C)',\n            axis2Title : 'Degree Days',\n            axis1TitleColor : '#557a95',\n            axis2TitleColor : '#f2a31f',\n            axis1GridColor : '#beceda',\n            axis2GridColor : '#f8d8a0',\n            plotLength  : 600,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyChart'\n        };\n        var changingState = false;\n        var regTempUpChanged = false;\n        var regTempDnChanged = false;\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n\n            $('#regTempUpButtonId').hide();\n            $('#regTempDnButtonId').hide();\n            $('#waitForArchiveMessage').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 2940,
        "wires": [
            [
                "a683c0f.576684"
            ]
        ]
    },
    {
        "id": "a683c0f.576684",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            var tempA01 = Math.round(100 * device.tankBotT.value) / 100;\n            var tempB01 = Math.round(100 * device.tankTopT.value) / 100;\n            var tempA02 = Math.round(100 * device.panelT.value) / 100;\n            var tempB02 = Math.round(100 * device.outsideT.value) / 100;\n            var tempA03 = Math.round(100 * device.downstairsT.value) / 100;\n            var tempB03 = Math.round(100 * device.upstairsT.value) / 100;\n            var diffTemp = Math.round(100 * device.deltaT.value) / 100;\n\n            $('#tempA01Id').text(tempA01.toString() + ' C');\n            $('#tempB01Id').text(tempB01.toString() + ' C');\n            $('#tempA02Id').text(tempA02.toString() + ' C');\n            $('#tempB02Id').text(tempB02.toString() + ' C');\n            $('#tempA03Id').text(tempA03.toString() + ' C');\n            $('#tempB03Id').text(tempB03.toString() + ' C');\n            $('#diffTempId').text(diffTemp.toString() + ' C');\n\n            var pumpStatus = 'Off';\n            var pumpStatusColor = 'white';\n\n            if (device.pumpStatus.value > 0)\n            {\n                pumpStatus = 'On';\n                pumpStatusColor = 'red';\n            }\n            $('#pumpStatusId').text(pumpStatus);\n            $('#pumpPowerId').text(device.pumpPower.value.toString() + ' W');\n            $('#pumpStatusId').css('color', pumpStatusColor); \n            $('#pumpPowerId').css('color', pumpStatusColor); \n//            historyChart.addTracePoints(tempA02, tempB02, tempA01, tempB01, diffTemp);\n\n            if (!changingState)\n            {\n                switch(device.regState.value) \n                {\n                  case 0:\n                    $('#offStateButton').css(\"background-color\", \"green\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 1:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"yellow\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 2:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"red\");\n                    break;\n                  default:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"grey\");\n                    $('#regulateStateButton').css(\"background-color\", \"grey\");\n                    $('#onStateButton').css(\"background-color\", \"grey\");\n                }            \n                \n            }\n            if (!regTempUpChanged)\n            {\n                $('#regTempUpInputId').val(device.regTup.value);\n            }\n            if (!regTempDnChanged)\n            {\n                $('#regTempDnInputId').val(device.regTdn.value);\n            }\n\n        }\n",
        "output": "str",
        "x": 720,
        "y": 2980,
        "wires": [
            [
                "4462d4cd.4d7ccc"
            ]
        ]
    },
    {
        "id": "ecf099b4.31c5d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 3100,
        "wires": [
            [
                "5f7a9a9f.2b4074"
            ]
        ]
    },
    {
        "id": "91a2caee.e29578",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.setState}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 3180,
        "wires": [
            [
                "5ccb00f2.9e274"
            ]
        ]
    },
    {
        "id": "51f8865a.03de88",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.state}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 3180,
        "wires": [
            [
                "6ebde49.e12e31c"
            ]
        ]
    },
    {
        "id": "fd44287a.3ec5b8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3100,
        "wires": [
            [
                "669b350f.c44acc"
            ]
        ]
    },
    {
        "id": "e37e82a7.f433",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['panelT','outsideT','tankBotT','tankTopT','downstairsT','upstairsT'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.axis1Title,\n                    titlefont       : {color: plotConfig.axis1TitleColor},\n                    tickfont        : {color:plotConfig.axis1TitleColor},\n                    gridcolor       : plotConfig.axis1GridColor,\n                    zerolinecolor   : plotConfig.axis1GridColor,\n                    linecolor       : plotConfig.axis1GridColor\n\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var traces = [];\n            traces[0] = \n            {\n                x: [],\n                y: [],\n                name: 'Panel Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red'}\n        \n            };\n            traces[1] = \n            {\n                x: [],\n                y: [],\n                name: 'Outside Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n        \n            };\n            traces[2] = \n            {\n                x: [],\n                y: [],\n                name: 'Tank Bottom Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'green'}\n        \n            };\n            traces[3] = \n            {\n                x: [],\n                y: [],\n                name: 'Tank Top Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'magenta'}\n        \n            };\n            traces[4] = \n            {\n                x: [],\n                y: [],\n                name: 'Downstairs Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'cyan'}\n        \n            };\n            traces[5] = \n            {\n                x: [],\n                y: [],\n                name: 'Upstairs Temp',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'purple'}\n        \n            };\n\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                for (var itrace = 0; itrace < traces.length; ++ itrace)\n                {\n                    traces[itrace].x[ii] = x;\n                    traces[itrace].y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[itrace]] ;\n                }\n            }\n\n            Plotly.newPlot('archiveChart', traces, layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 3060,
        "wires": [
            [
                "ecf099b4.31c5d8"
            ]
        ]
    },
    {
        "id": "c22ebedd.17a73",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "regulatorYellow.png",
        "output": "str",
        "x": 390,
        "y": 2980,
        "wires": [
            [
                "f039a490.13ad48"
            ]
        ]
    },
    {
        "id": "d21171e6.b0a89",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3060,
        "wires": [
            [
                "fd44287a.3ec5b8"
            ]
        ]
    },
    {
        "id": "5f7a9a9f.2b4074",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 3140,
        "wires": [
            [
                "91a2caee.e29578"
            ]
        ]
    },
    {
        "id": "669b350f.c44acc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3140,
        "wires": [
            [
                "51f8865a.03de88"
            ]
        ]
    },
    {
        "id": "5ccb00f2.9e274",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Panel Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempA02Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('panelT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Diff Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='diffTempId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('deltaT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Outside Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempB02Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('outsideT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Tank Bottom Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempA01Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('tankBotT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Tank Top Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempB01Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('tankTopT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Downstairs Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempA03Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('downstairsT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Upstairs Temp.</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='tempB03Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('upstairsT')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' >Pump Status</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <span class='card-text' id='pumpPowerId' >-100</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='pumpStatusId' >?</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 2940,
        "wires": [
            [
                "60b78789.65dfd8"
            ]
        ]
    },
    {
        "id": "60b78789.65dfd8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.state",
        "field": "payload.html.state",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>State</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60%><button class='btn btn-block big-text' id=\"offStateButton\" onclick=\"changeState(0)\" >Off</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"regulateStateButton\" onclick=\"changeState(1)\">Regulate</button></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"onStateButton\" onclick=\"changeState(2)\">On</button></td>\n                                    <td></td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'  style='padding-top: 30px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%'>\n                                        <span class='card-text' >Reg Temp Up (C)</span>\n                                    </td>\n                                    <td width='30%'>\n                                        <input id=\"regTempUpInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"regTempUpChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"regTempUpButtonId\" onclick=\"regTempUp()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%'>\n                                        <span class='card-text' >Reg Temp Dn (C)</span>\n                                    </td>\n                                    <td width='30%'>\n                                        <input id=\"regTempDnInputId\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"regTempDnChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"regTempDnButtonId\" onclick=\"regTempDn()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 2980,
        "wires": [
            [
                "e56b6399.488cc"
            ]
        ]
    },
    {
        "id": "e56b6399.488cc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2,false)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4,true)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8,true)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24,true)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72,true)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168,true)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' id=\"waitForArchiveMessage\">\n                            <div class='col-md-12'>\n                                <h1 style='color:white;'>Retrieving Archive Data...</h1>\n                            </div>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3020,
        "wires": [
            [
                "d21171e6.b0a89"
            ]
        ]
    },
    {
        "id": "4462d4cd.4d7ccc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.setState",
        "field": "payload.script.setState",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Set State JavaScript\n\n        function changeState(state)\n        {\n            var settingAttr = device.regState;\n            settingAttr.value = state;\n            sendSetting();\n            changingState = true;\n            $('#offStateButton').css(\"background-color\", \"grey\");\n            $('#regulateStateButton').css(\"background-color\", \"grey\");\n            $('#onStateButton').css(\"background-color\", \"grey\");\n            setTimeout(function(){ changingState = false; }, 1000);\n        }\n        function regTempUpChange()\n        {\n            regTempUpChanged = true;\n            $('#regTempUpButtonId').show();\n\n        }\n        function regTempDnChange()\n        {\n            regTempDnChanged = true;\n            $('#regTempDnButtonId').show();\n\n        }\n        function regTempUp()\n        {\n            $('#regTempUpButtonId').hide();\n            if (isNaN($('#regTempUpInputId').val()))\n            {\n                regTempUpChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#regTempUpInputId').val()), 'regTup');\n            regTempUpChanged = false;\n        }\n        function regTempDn()\n        {\n            $('#regTempDnButtonId').hide();\n            if (isNaN($('#regTempDnInputId').val()))\n            {\n                regTempDnChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#regTempDnInputId').val()), 'regTdn');\n            regTempUpChanged = false;\n        }\n",
        "output": "str",
        "x": 700,
        "y": 3020,
        "wires": [
            [
                "e37e82a7.f433"
            ]
        ]
    },
    {
        "id": "6ebde49.e12e31c",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 3180,
        "wires": []
    },
    {
        "id": "a4faf072.94eb9",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/solar-regulator",
        "url": "/solar-regulator",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2940,
        "wires": [
            [
                "33641219.f3780e"
            ]
        ]
    },
    {
        "id": "33641219.f3780e",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 2980,
        "wires": [
            [
                "db5e9c99.a50bc"
            ]
        ]
    },
    {
        "id": "db5e9c99.a50bc",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 160,
        "y": 3020,
        "wires": [
            [
                "db089069.b20af"
            ]
        ]
    },
    {
        "id": "d6439f36.fbee7",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 440,
        "wires": [
            [
                "19310ace.c992d5"
            ]
        ]
    },
    {
        "id": "19310ace.c992d5",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BL-MC",
        "output": "str",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "680bc28.3fd903c"
            ]
        ]
    },
    {
        "id": "7bd0e32c.fe3bdc",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 480,
        "y": 440,
        "wires": [
            [
                "bb7837ce.8d7338"
            ]
        ]
    },
    {
        "id": "680bc28.3fd903c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" >\n        <div class='row no-gutters' >\n            <div class='col-12' align='center'>\n                <img src=\"/img/bl-mcSplashScreen.png\" width=\"900px\" style=\"padding-bottom:20px;\"/>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\">\n                    <tr>\n                        <td width=\"50%\"><a class=\"btn btn-primary btn-lg btn-block\" href='/overview'>Overview</a></td>\n                        <td width=\"50%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/people'>People</a></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\">\n                    <tr>\n                        <td width=\"50%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/apps'>Apps</a></td>\n                        <td width=\"50%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/remote-sensing'>Remote Sensing</a></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\">\n                    <tr>\n                        <td width=\"25%\"><a class=\"btn btn-primary btn-lg btn-block\" href='/components'>Components</a></td>\n                        <td width=\"25%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/blinky-thermal-suite'>Thermal</a></td>\n                        <td width=\"25%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/blinky-medical-suite'>Medical</a></td>\n                        <td width=\"25%\"><a class=\"btn btn-primary btn-lg btn-block\"  href='/blinky-env-suite'>Environment</a></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <hr>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "7bd0e32c.fe3bdc"
            ]
        ]
    },
    {
        "id": "30c36625.0c37ca",
        "type": "subflow:ca529822.9112f8",
        "z": "d7162906.0afcd8",
        "name": "",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "b02ee1e6.321d9",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/components",
        "url": "/components",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "acd4820a.8c999"
            ]
        ]
    },
    {
        "id": "e7fb26ce.45c778",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Components",
        "output": "str",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "b998e015.6cc39"
            ]
        ]
    },
    {
        "id": "23ca2060.71198",
        "type": "template",
        "z": "d7162906.0afcd8",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron navbar-fixed-top\" style=\"background-color:white;color: #547792;padding-top:10px; padding-bottom:10px;\" width=\"100%\" >\n        <div class='row'>\n            <div class='col-md-2' align='left'>\n                <a href='/'>\n                    <img src=\"/img/bl-mc-icon.png\" height=\"75px\"/>\n                </a>                \n            </div>\n            <div class='col-md-8' align='center'>\n                <h1 class=\"jumbotron-title big-text bold-text\">\n                    <span>{{{payload.title}}}</span>\n                </h1>\n            </div>\n            <div class='col-md-2' align='right'>\n                <a href='mailTo:info@bl-mc.se' target='_blank'>\n                    <img src=\"/img/mailBlue.png\" height=\"75px\"/>\n                </a>                \n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "30c36625.0c37ca"
            ]
        ]
    },
    {
        "id": "8bf5d087.fdd59",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        var componentTag = '{{{payload.componentTag}}}';\n\n        var modeZeroVisible = false;\n        var blinkyRelayBakeVisible = false;\n        var blinkyThermoVisible = false;\n        var blinkyThermoCamVisible = false;\n        var blinkySsrBakeVisible = false;\n        var blinkyPowerRelayVisible = false;\n        var blinkyStepperVisible = false;\n        var blinkyShiverVisible = false;\n        var blinkyShakerVisible = false;\n        var blinkyFeverVisible = false;\n        var blinkyWindVisible = false;\n        var blinkySolarSystemVisible = false;\n        var blinkyBasicVisible = false;\n        var blinkyEnvVisible = false;\n        var blinkyCosmicIntervalVisible = false;\n        var nbFreezerMonVisible = false;\n\n        function onDocumentReady()\n        {\n            $('#modeZero').hide();\n            $('#blinkySsrBake').hide();\n            $('#blinkyRelayBake').hide();\n            $('#blinkyThermo').hide();\n            $('#blinkyThermoCam').hide();\n            $('#blinkyPowerRelay').hide();\n            $('#blinkyStepper').hide();\n            $('#blinkyShiver').hide();\n            $('#blinkyShaker').hide();\n            $('#blinkyFever').hide();\n            $('#blinkyWind').hide();\n            $('#blinkySolarSystem').hide();\n            $('#blinkyBasic').hide();\n            $('#blinkyEnv').hide();\n            $('#blinkyCosmicInterval').hide();\n            $('#nbFreezerMon').hide();\n            modeZeroVisible = false;\n            blinkySsrBakeVisible = false;\n            blinkyRelayBakeVisible = false;\n            blinkyThermoVisible = false;\n            blinkyThermoCamVisible = false;\n            blinkyPowerRelayVisible = false;\n            blinkyStepperVisible = false;\n            blinkyShiverVisible = false;\n            blinkyShakerVisible = false;\n            blinkyFeverVisible = false;\n            blinkyWindVisible = false;\n            blinkyBasicVisible = false;\n            blinkySolarSystemVisible = false;\n            blinkyEnvVisible = false;\n            blinkyCosmicIntervalVisible = false;\n            nbFreezerMonVisible = false;\n            \n            console.log($( window ).height());\n            var scrollHeight = $( window ).height() - 250;\n            $(\"#bodyContentId\").css(\"height\", scrollHeight.toString() +'px');\n\n            switch (componentTag) \n            {\n                case 'modeZero':\n                    $('#modeZero').show();\n                    $('#modeZeroBtn').text('Close');\n                    modeZeroVisible = true;\n                    scrollBlurb('#modeZeroCard');\n                    break;\n                case 'blinkySsrBake':\n                    $('#blinkySsrBake').show();\n                    $('#blinkySsrBakeBtn').text('Close');\n                    blinkySsrBakeVisible = true;\n                    scrollBlurb('#blinkySsrBakeCard');\n                    break;\n                case 'blinkyRelayBake':\n                    $('#blinkyRelayBake').show();\n                    $('#blinkyRelayBakeBtn').text('Close');\n                    blinkyRelayBakeVisible = true;\n                    scrollBlurb('#blinkyRelayBakeCard');\n                    break;\n                 case 'blinkyThermo':\n                    $('#blinkyThermo').show();\n                    $('#blinkyThermoBtn').text('Close');\n                    blinkyThermoVisible = true;\n                    scrollBlurb('#blinkyThermoCard');\n                    break;\n                 case 'blinkyThermoCam':\n                    $('#blinkyThermoCam').show();\n                    $('#blinkyThermoCamBtn').text('Close');\n                    blinkyThermoCamVisible = true;\n                    scrollBlurb('#blinkyThermoCamCard');\n                    break;\n                 case 'blinkyPowerRelay':\n                    $('#blinkyPowerRelay').show();\n                    $('#blinkyPowerRelayBtn').text('Close');\n                    blinkyPowerRelayVisible = true;\n                    scrollBlurb('#blinkyPowerRelayCard');\n                    break;\n                 case 'blinkyStepper':\n                    $('#blinkyStepper').show();\n                    $('#blinkyStepperBtn').text('Close');\n                    blinkyStepperVisible = true;\n                    scrollBlurb('#blinkyStepperCard');\n                    break;\n                 case 'blinkyShiver':\n                    $('#blinkyShiver').show();\n                    $('#blinkyShiverBtn').text('Close');\n                    blinkyShiverVisible = true;\n                    scrollBlurb('#blinkyShiverCard');\n                    break;\n                 case 'blinkyShaker':\n                    $('#blinkyShaker').show();\n                    $('#blinkyShakerBtn').text('Close');\n                    blinkyShakerVisible = true;\n                    scrollBlurb('#blinkyShakerCard');\n                    break;\n                 case 'blinkyFever':\n                    $('#blinkyFever').show();\n                    $('#blinkyFeverBtn').text('Close');\n                    blinkyFeverVisible = true;\n                    scrollBlurb('#blinkyFeverCard');\n                    break;\n                 case 'blinkyWind':\n                    $('#blinkyWind').show();\n                    $('#blinkyWindBtn').text('Close');\n                    blinkyWindVisible = true;\n                    scrollBlurb('#blinkyWindCard');\n                    break;\n                 case 'blinkySolarSystem':\n                    $('#blinkySolarSystem').show();\n                    $('#blinkySolarSystemBtn').text('Close');\n                    blinkySolarSystemVisible = true;\n                    scrollBlurb('#blinkySolarSystemCard');\n                    break;\n                 case 'blinkyBasic':\n                    $('#blinkyBasic').show();\n                    $('#blinkyBasicBtn').text('Close');\n                    blinkyBasicVisible = true;\n                    scrollBlurb('#blinkyBasicCard');\n                    break;\n                 case 'blinkyEnv':\n                    $('#blinkyEnv').show();\n                    $('#blinkyEnvBtn').text('Close');\n                    blinkyEnvVisible = true;\n                    scrollBlurb('#blinkyEnvCard');\n                    break;\n                 case 'blinkyCosmicInterval':\n                    $('#blinkyCosmicInterval').show();\n                    $('#blinkyCosmicIntervalBtn').text('Close');\n                    blinkyCosmicIntervalVisible = true;\n                    scrollBlurb('#blinkyCosmicIntervalCard');\n                    break;\n                 case 'nbFreezerMon':\n                    $('#nbFreezerMon').show();\n                    $('#nbFreezerMonBtn').text('Close');\n                    nbFreezerMonVisible = true;\n                    scrollBlurb('#nbFreezerMonCard');\n                    break;\n                default:\n                    break;\n            }\n            \n        }\n        function scrollBlurb(poundblurbCardId)\n        {\n            setTimeout(function()\n            {\n                var scrollTo = $(poundblurbCardId); \n                var container = $('#bodyContentId'); \n\n                // Calculating new position of scrollbar \n                var position = scrollTo.offset().top  \n                        - container.offset().top  \n                        + container.scrollTop(); \n          \n                container.scrollTop(position); \n            }, 100);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function modeZero()\n        {\n            if (modeZeroVisible)\n            {\n                $('#modeZero').hide();\n                modeZeroVisible = false;\n                $('#modeZeroBtn').text('Open');\n            }\n            else\n            {\n                $('#modeZero').show();\n                modeZeroVisible = true;\n                $('#modeZeroBtn').text('Close');\n            }\n        }\n        function blinkyThermo()\n        {\n            if (blinkyThermoVisible)\n            {\n                $('#blinkyThermo').hide();\n                blinkyThermoVisible = false;\n                $('#blinkyThermoBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermo').show();\n                blinkyThermoVisible = true;\n                $('#blinkyThermoBtn').text('Close');\n            }\n        }\n        function blinkyThermoCam()\n        {\n            if (blinkyThermoCamVisible)\n            {\n                $('#blinkyThermoCam').hide();\n                blinkyThermoCamVisible = false;\n                $('#blinkyThermoCamBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermoCam').show();\n                blinkyThermoCamVisible = true;\n                $('#blinkyThermoCamBtn').text('Close');\n            }\n        }\n        function blinkySsrBake()\n        {\n            if (blinkySsrBakeVisible)\n            {\n                $('#blinkySsrBake').hide();\n                blinkySsrBakeVisible = false;\n                $('#blinkySsrBakeBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkySsrBake').show();\n                blinkySsrBakeVisible = true;\n                $('#blinkySsrBakeBtn').text('Close');\n            }\n        }\n        function blinkyRelayBake()\n        {\n            if (blinkyRelayBakeVisible)\n            {\n                $('#blinkyRelayBake').hide();\n                blinkyRelayBakeVisible = false;\n                $('#blinkyRelayBakeBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyRelayBake').show();\n                blinkyRelayBakeVisible = true;\n                $('#blinkyRelayBakeBtn').text('Close');\n            }\n        }\n        function blinkyPowerRelay()\n        {\n            if (blinkyPowerRelayVisible)\n            {\n                $('#blinkyPowerRelay').hide();\n                blinkyPowerRelayVisible = false;\n                $('#blinkyPowerRelayBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyPowerRelay').show();\n                blinkyPowerRelayVisible = true;\n                $('#blinkyPowerRelayBtn').text('Close');\n            }\n        }\n        function blinkyStepper()\n        {\n            if (blinkyStepperVisible)\n            {\n                $('#blinkyStepper').hide();\n                blinkyStepperVisible = false;\n                $('#blinkyStepperBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyStepper').show();\n                blinkyStepperVisible = true;\n                $('#blinkyStepperBtn').text('Close');\n            }\n        }\n        function blinkyShiver()\n        {\n            if (blinkyShiverVisible)\n            {\n                $('#blinkyShiver').hide();\n                blinkyShiverVisible = false;\n                $('#blinkyShiverBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyShiver').show();\n                blinkyShiverVisible = true;\n                $('#blinkyShiverBtn').text('Close');\n            }\n        }\n        function blinkyShaker()\n        {\n            if (blinkyShakerVisible)\n            {\n                $('#blinkyShaker').hide();\n                blinkyShakerVisible = false;\n                $('#blinkyShakerBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyShaker').show();\n                blinkyShakerVisible = true;\n                $('#blinkyShakerBtn').text('Close');\n            }\n        }\n        function blinkyFever()\n        {\n            if (blinkyFeverVisible)\n            {\n                $('#blinkyFever').hide();\n                blinkyFeverVisible = false;\n                $('#blinkyFeverBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyFever').show();\n                blinkyFeverVisible = true;\n                $('#blinkyFeverBtn').text('Close');\n            }\n        }\n        function blinkyWind()\n        {\n            if (blinkyWindVisible)\n            {\n                $('#blinkyWind').hide();\n                blinkyWindVisible = false;\n                $('#blinkyWindBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyWind').show();\n                blinkyWindVisible = true;\n                $('#blinkyWindBtn').text('Close');\n            }\n        }\n        function blinkySolarSystem()\n        {\n            if (blinkySolarSystemVisible)\n            {\n                $('#blinkySolarSystem').hide();\n                blinkySolarSystemVisible = false;\n                $('#blinkySolarSystemBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkySolarSystem').show();\n                blinkySolarSystemVisible = true;\n                $('#blinkySolarSystemBtn').text('Close');\n            }\n        }\n        function blinkyBasic()\n        {\n            if (blinkyBasicVisible)\n            {\n                $('#blinkyBasic').hide();\n                blinkyBasicVisible = false;\n                $('#blinkyBasicBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyBasic').show();\n                blinkyBasicVisible = true;\n                $('#blinkyBasicBtn').text('Close');\n            }\n        }\n        function blinkyEnv()\n        {\n            if (blinkyEnvVisible)\n            {\n                $('#blinkyEnv').hide();\n                blinkyEnvVisible = false;\n                $('#blinkyEnvBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyEnv').show();\n                blinkyEnvVisible = true;\n                $('#blinkyEnvBtn').text('Close');\n            }\n        }\n        function blinkyCosmicInterval()\n        {\n            if (blinkyCosmicIntervalVisible)\n            {\n                $('#blinkyCosmicInterval').hide();\n                blinkyCosmicIntervalVisible = false;\n                $('#blinkyCosmicIntervalBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyCosmicInterval').show();\n                blinkyCosmicIntervalVisible = true;\n                $('#blinkyCosmicIntervalBtn').text('Close');\n            }\n        }\n        function nbFreezerMon()\n        {\n            if (nbFreezerMonVisible)\n            {\n                $('#nbFreezerMon').hide();\n                nbFreezerMonVisible = false;\n                $('#nbFreezerMonBtn').text('Open');\n            }\n            else\n            {\n                $('#nbFreezerMon').show();\n                nbFreezerMonVisible = true;\n                $('#nbFreezerMonBtn').text('Close');\n            }\n        }\n\n",
        "output": "str",
        "x": 1000,
        "y": 1100,
        "wires": [
            [
                "251226a2.614dda"
            ]
        ]
    },
    {
        "id": "a23f19d5.f894c8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" id=\"bodyContentId\" align=\"center\" style = \"overflow-y: scroll; height:1000px; overflow-x: hidden;\">\n        <table width=\"100px\">\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermo}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermoCam}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkySsrBake}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyRelayBake}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyPowerRelay}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyStepper}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyEnv}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyCosmicInterval}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyShiver}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyShaker}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyFever}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyWind}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkySolarSystem}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyBasic}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.nbFreezerMon}}}\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 870,
        "y": 1100,
        "wires": [
            [
                "8bf5d087.fdd59"
            ]
        ]
    },
    {
        "id": "6ca560.6e2ceaa",
        "type": "template",
        "z": "d7162906.0afcd8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .btn-primary, .btn-primary:active, .btn-primary:visited \n        {\n            background-color: var(--color2) !important;\n            color : white !important;\n            font-size: 200% !important;\n        }\n        .btn-primary:hover \n        {\n            background-color: var(--color1) !important;\n            color : var(--color5) !important;\n            font-size: 200% !important;\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding-left:5px;\n          padding-right:5px;\n          padding-bottom:5px;\n\n        }\n        .card-body\n        {\n          background-color: white;\n          text-align: center;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: white;\n          font-size: 200%;\n          font-style:oblique;\n          font-weight: var(--bold-text);\n         }\n        .card-text\n        {\n          color: var(--color2);\n          font-size: 150%;\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .justify\n        {\n            text-align: justify;\n            text-justify: inter-word;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "23ca2060.71198"
            ]
        ]
    },
    {
        "id": "251226a2.614dda",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1150,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1d999967.acd457",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyBasic",
        "field": "payload.html.blinkyBasic",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyBasicCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyBasic'><span class='card-title'>Blinky Basic</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyBasicBtn\" onclick=\"blinkyBasic()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyBasic\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">The tutorial project that demonstrates Blinky-Lite features</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-basic/blinky-basic-screen.png\" height=\"350px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-basic/blinky-basic-pcb.png\" height=\"350px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-basic/blinky-basic-flow.png\" height=\"120px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-basic/blinky-basic-schem.png\" height=\"230px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 1060,
        "wires": [
            [
                "7a8a2623.4a0d08"
            ]
        ]
    },
    {
        "id": "a76f0d2e.2f961",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyPowerRelay",
        "field": "payload.html.blinkyPowerRelay",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id='blinkyPowerRelayCard'>\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyPowerRelay'><span class='card-title'>Blinky Power Relay</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyPowerRelayBtn\" onclick=\"blinkyPowerRelay()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id='blinkyPowerRelay'>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled  1200 Watt, 240 Volt relay with power meter</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-screen.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-pcb.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-flow.png\" height=\"99px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-schem.png\" height=\"193px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 640,
        "y": 700,
        "wires": [
            [
                "f4a70f26.5b9ad"
            ]
        ]
    },
    {
        "id": "f4a70f26.5b9ad",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyStepper",
        "field": "payload.html.blinkyStepper",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyStepperCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyStepper'><span class='card-title'>Blinky Stepper</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyStepperBtn\" onclick=\"blinkyStepper()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyStepper\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled 12 V, 1.8 Amps stepper motor controller with 0.05 to 1.8 degrees of resolution</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-stepper/blinky-stepper-screen.png\" height=\"297px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-stepper/blinky-stepper-pcb.png\" height=\"297px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-stepper/blinky-stepper-flow.png\" height=\"102px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-stepper/blinky-stepper-schem.png\" height=\"195px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 740,
        "wires": [
            [
                "6aa50304.6c3dac"
            ]
        ]
    },
    {
        "id": "7fe1eeb9.a745b",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyShiver",
        "field": "payload.html.blinkyShiver",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyShiverCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyShiver'><span class='card-title'>Blinky Shiver</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyShiverBtn\" onclick=\"blinkyShiver()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyShiver\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled non-invasive vibration detector with a sensitivity of 2um and a bandwidth of 250 Hz using ultrasonic technology</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shiver/blinky-shiver-screen.png\" height=\"341px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shiver/blinky-shiver-pcb.png\" height=\"341px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-shiver/blinky-shiver-flow.png\" height=\"119px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-shiver/blinky-shiver-schem.png\" height=\"222px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 860,
        "wires": [
            [
                "8dad88a6.35b498"
            ]
        ]
    },
    {
        "id": "8dad88a6.35b498",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyShaker",
        "field": "payload.html.blinkyShaker",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyShakerCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyShaker'><span class='card-title'>Blinky Shaker</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyShakerBtn\" onclick=\"blinkyShaker()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyShaker\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled test bench for the Blinky Shiver</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shaker-screen.png\" height=\"215px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shiver-spec.png\" height=\"215x\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shaker-flow.png\" height=\"215px\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 900,
        "wires": [
            [
                "6b0605e9.89274c"
            ]
        ]
    },
    {
        "id": "6b0605e9.89274c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyFever",
        "field": "payload.html.blinkyFever",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyFeverCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyFever'><span class='card-title'>Blinky Fever</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyFeverBtn\" onclick=\"blinkyFever()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyFever\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled fever detector using infra-red technology</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:1px;padding-left:1px;padding-right:1px;\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"left\">\n                                            <img src=\"/img/components/blinky-fever/dianaFlip.png\" height=\"287px\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-fever/monitor.png\" height=\"287px\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-fever/gizmo.png\" height=\"287px\"/>\n                                        </td>\n                                        <td align=\"right\">\n                                            <img src=\"/img/components/blinky-fever/androidControl.png\" height=\"287px\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 940,
        "wires": [
            [
                "72684e1d.f92fe"
            ]
        ]
    },
    {
        "id": "13ad8845.88ebf8",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-cosmic-interval mqtt",
        "links": [
            "ebb358f3.95c638"
        ],
        "x": 775,
        "y": 500,
        "wires": []
    },
    {
        "id": "b474b542.8e1f78",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-cosmic-interval/websocket",
        "server": "ffc8491b.7eba18",
        "client": "",
        "x": 1080,
        "y": 520,
        "wires": []
    },
    {
        "id": "ebb358f3.95c638",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky-cosmic-interval input socket",
        "links": [
            "13ad8845.88ebf8",
            "1e710224.de723e",
            "224d9b05.f92104",
            "bd3aa3c8.56634"
        ],
        "x": 895,
        "y": 520,
        "wires": [
            [
                "b474b542.8e1f78"
            ]
        ]
    },
    {
        "id": "e5909ac6.43bd38",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-cosmic-interval/websocket",
        "server": "ffc8491b.7eba18",
        "client": "",
        "x": 170,
        "y": 1620,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "bd3aa3c8.56634",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-cosmic-interval-archive",
        "links": [
            "ebb358f3.95c638"
        ],
        "x": 1295,
        "y": 2400,
        "wires": []
    },
    {
        "id": "165e9eb4.e1a2b1",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-cosmic-interval';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 3400,
        "wires": [
            [
                "7e17a17.43c666"
            ]
        ]
    },
    {
        "id": "1bbcdfa0.7b78b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Cosmic Interval {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 3480,
        "wires": [
            [
                "f306836d.ee96f"
            ]
        ]
    },
    {
        "id": "5e4ab0a7.f3a44",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace1Color,\n                        size: 10,\n                        symbol: 'circle'\n                    }        \n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 10,\n                        symbol: 'square'\n                    }        \n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 3440,
        "wires": [
            [
                "d96c18e8.678f58"
            ]
        ]
    },
    {
        "id": "f306836d.ee96f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Count Per Minute',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Average Interval (uS)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var nsamplesChanged = false;\n        var intervalArray = [];\n        var audioAlarm = new Audio('/audio/geiger1.ogg');\n        var audioAlarmOn = false;\n        var programStarted = false;\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $('#nsamplesButtonId').hide();\n            $('#lightningID').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                messageDialog('Info', 'Hold Still!', 'Waiting for a cosmic Event');\n                toggleSound();\n            }\n            messageDialog('Info', 'Hold Still!', 'Waiting for a cosmic Event');\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function nsamplesChange()\n        {\n            nsamplesChanged = true;\n            $('#nsamplesButtonId').show();\n\n        }\n        function nsamples()\n        {\n            $('#nsamplesButtonId').hide();\n            if (isNaN($('#nsamplesInputId').val()))\n            {\n                nsamplesChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#nsamplesInputId').val()), 'nsamples');\n            nsamplesChanged = false;\n        }\n        function toggleSound()\n        {\n            audioAlarmOn = !audioAlarmOn;\n            if(audioAlarmOn)\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'green'); \n                $('#soundButtonId').text('On'); \n            }\n            else\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'grey'); \n                $('#soundButtonId').text('Off'); \n            }\n\n        }\n",
        "output": "str",
        "x": 690,
        "y": 3400,
        "wires": [
            [
                "5e4ab0a7.f3a44"
            ]
        ]
    },
    {
        "id": "d96c18e8.678f58",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $( \"#messageDialog\" ).dialog( \"close\" );\n            if (audioAlarmOn)\n            {\n                var playPromise = audioAlarm.play();\n                if (playPromise !== undefined) \n                {\n                    playPromise.then(_ => \n                    {\n                    // Automatic playback started!\n                    // Show playing UI.\n                    }).catch(error => \n                    {\n                    // Auto-play was prevented\n                    // Show paused UI.\n                    });\n                 }\n            }\n\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            var avgIntervalReading = device.avgInterval.value;\n            var cpmReading = device.cpm.value;\n            var intervalReading = device.interval.value;\n            historyStripChart.addTracePoints(cpmReading, avgIntervalReading);\n            $('#cpmReadingId').text(cpmReading);\n            $('#avgIntervalReadingId').text(avgIntervalReading);\n            $('#intervalReadingId').text(intervalReading);\n            if (!nsamplesChanged)\n            {\n                $('#nsamplesInputId').val(device.nsamples.value);\n            }\n            intervalArray.push(0.01 * Math.round(intervalReading / 10));\n            while (intervalArray.length > 1000)\n            {\n                intervalArray.shift();\n            }\n            var layout = {title: \"Interval (S)\", xaxis: {title: \"Interval (S)\"}, yaxis: {title: \"Count\"}};\n\n//            Plotly.newPlot('intervalHistogramChart', [{x: intervalArray, type:'histogram',  autobinx: false, xbins: {end: 10,size: 0.5,start: 0} }]);\n            Plotly.newPlot('intervalHistogramChart', [{x: intervalArray, type:'histogram',  xbins: {size: 0.5,start: 0} }],layout);\n            $('#lightningID').show();\n            setTimeout(function(){$('#lightningID').hide();},500);\n         }\n",
        "output": "str",
        "x": 720,
        "y": 3480,
        "wires": [
            [
                "ede649b0.bd3738"
            ]
        ]
    },
    {
        "id": "b0dc1f35.bc474",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 3560,
        "wires": [
            [
                "d38afb84.6e9e78"
            ]
        ]
    },
    {
        "id": "2be7d685.83e37a",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 3640,
        "wires": [
            [
                "bd953167.c7526"
            ]
        ]
    },
    {
        "id": "30124357.237c9c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.histogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 3680,
        "wires": [
            [
                "ed0e957b.75f108"
            ]
        ]
    },
    {
        "id": "d4913b9e.f4b638",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3600,
        "wires": [
            [
                "ddddbe30.5d977"
            ]
        ]
    },
    {
        "id": "e122e60b.62b678",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3520,
        "wires": [
            [
                "164a9df9.856c12"
            ]
        ]
    },
    {
        "id": "ede649b0.bd3738",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['cpm','avgInterval'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 3520,
        "wires": [
            [
                "b0dc1f35.bc474"
            ]
        ]
    },
    {
        "id": "7e17a17.43c666",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "cosmicYellow.png",
        "output": "str",
        "x": 390,
        "y": 3440,
        "wires": [
            [
                "1bbcdfa0.7b78b"
            ]
        ]
    },
    {
        "id": "164a9df9.856c12",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3560,
        "wires": [
            [
                "d4913b9e.f4b638"
            ]
        ]
    },
    {
        "id": "d38afb84.6e9e78",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 3600,
        "wires": [
            [
                "2be7d685.83e37a"
            ]
        ]
    },
    {
        "id": "ddddbe30.5d977",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3640,
        "wires": [
            [
                "30124357.237c9c"
            ]
        ]
    },
    {
        "id": "bd953167.c7526",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Counts Per Minute</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='cpmReadingId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('cpm')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Avg. Interval (uS)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='avgIntervalReadingId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('avgInterval')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Interval (uS)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='intervalReadingId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('interval')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Filter Samples</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"nsamplesInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"nsamplesChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"nsamplesButtonId\" onclick=\"nsamples()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Cosmic Sound</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img id='lightningID' src=\"/img/lightning.png\" height='70px'/>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:grey;color:black' id='soundButtonId' onclick=\"toggleSound()\" >Off</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 3400,
        "wires": [
            [
                "e3488706.1d2828"
            ]
        ]
    },
    {
        "id": "e3488706.1d2828",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3440,
        "wires": [
            [
                "8ce24fa4.f2cad"
            ]
        ]
    },
    {
        "id": "8ce24fa4.f2cad",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.histogram",
        "field": "payload.html.histogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>Interval Histogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"intervalHistogramChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 3480,
        "wires": [
            [
                "e122e60b.62b678"
            ]
        ]
    },
    {
        "id": "ed0e957b.75f108",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 3680,
        "wires": []
    },
    {
        "id": "42c420dc.3538f",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-cosmic-interval",
        "url": "/blinky-cosmic-interval",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3400,
        "wires": [
            [
                "871d6685.9f41f8"
            ]
        ]
    },
    {
        "id": "871d6685.9f41f8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 3440,
        "wires": [
            [
                "18697dbc.4848d2"
            ]
        ]
    },
    {
        "id": "18697dbc.4848d2",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 160,
        "y": 3480,
        "wires": [
            [
                "165e9eb4.e1a2b1"
            ]
        ]
    },
    {
        "id": "6e011a7b.2ccbb4",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-relay-bake mqtt",
        "links": [
            "bf657e74.6ac66"
        ],
        "x": 775,
        "y": 560,
        "wires": []
    },
    {
        "id": "156ae647.a9287a",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-relay-bake/websocket",
        "server": "41e2977d.e61d58",
        "client": "",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "bf657e74.6ac66",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky-relay-bake input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "6e011a7b.2ccbb4",
            "a8b68e5d.98408"
        ],
        "x": 895,
        "y": 580,
        "wires": [
            [
                "156ae647.a9287a"
            ]
        ]
    },
    {
        "id": "a8b68e5d.98408",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-relay-bake-archive",
        "links": [
            "bf657e74.6ac66"
        ],
        "x": 1295,
        "y": 2440,
        "wires": []
    },
    {
        "id": "b59bd67a.cc43f8",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-relay-bake/websocket",
        "server": "41e2977d.e61d58",
        "client": "",
        "x": 160,
        "y": 1680,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "5a40c79.a843338",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-relay-bake';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 3780,
        "wires": [
            [
                "962cc165.21793"
            ]
        ]
    },
    {
        "id": "bd01e77c.e909a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Relay Bake {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 3860,
        "wires": [
            [
                "4ca6870c.c326b8"
            ]
        ]
    },
    {
        "id": "77a0e39e.9308dc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor() \n            {\n                this.plotStartTime = new Date().getTime();\n                this.plotLength = 600000;\n                this.htmlId = 'historyStripChart';\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : '500',\n                    width       : '',\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : 'Temp (C)',\n                        titlefont       : {color: '#0000ff'},\n                        tickfont        : {color: '#0000ff'},\n                        gridcolor       : '#9999ff',\n                        zerolinecolor   : '#9999ff',\n                        linecolor       : '#9999ff',\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : 'Relay On',\n                        titlefont       : {color: '#ff0000'},\n                        tickfont        : {color:'#ff0000'},\n                        gridcolor       : '#ff9999',\n                        zerolinecolor   : '#ff9999',\n                        linecolor       : '#ff9999',\n                        overlaying: 'y',\n                        side: 'right',\n                        range: [0,100]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Temperature',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#0000ff'}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Ramp Temperature',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#00ff00'}\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Relay On',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#ff0000'}\n                };\n                this.trace4 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Duty Factor',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#ff00ff'}\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt, trace3Pt, trace4Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                        this.trace4.x.shift();\n                        this.trace4.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                this.trace4.x.push(now);\n                this.trace4.y.push(trace4Pt);\n                Plotly.newPlot(this.htmlId, [this.trace1, this.trace2, this.trace3, this.trace4], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 3820,
        "wires": [
            [
                "aaf69b24.36cda8"
            ]
        ]
    },
    {
        "id": "4ca6870c.c326b8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        let historyStripChart = new StripChart();\n        var rampUpTimeChanged = false;\n        var rampDownTimeChanged = false;\n        var regTempChanged = false;\n        var regWindowChanged = false;\n        var changingState = false;\n        \n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $('#rampUpTimeButton').hide();\n            $('#rampDownTimeButton').hide();\n            $('#regTempButton').hide();\n            $('#regWindowButton').hide();\n            $('#temperatureButton').attr('disabled',true);\n            $('#dutyFactorButton').attr('disabled',true);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 3780,
        "wires": [
            [
                "77a0e39e.9308dc"
            ]
        ]
    },
    {
        "id": "aaf69b24.36cda8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#temperatureButton').attr('disabled',false);\n            $('#dutyFactorButton').attr('disabled',false);\n\n            historyStripChart.addTracePoints(device['temperature'].value, device['ramp-temp'].value, 10.0 * device['relay'].value, device['duty-factor'].value);\n\n            if (!rampUpTimeChanged)\n            {\n                $('#rampUpTime').val(device['ramp-up-time'].value);\n            }\n            if (!rampDownTimeChanged)\n            {\n                $('#rampDownTime').val(device['ramp-down-time'].value);\n            }\n            if (!regTempChanged)\n            {\n                $('#regTemp').val(device['reg-temp'].value);\n            }\n            if (!regWindowChanged)\n            {\n                $('#regWindow').val(device['reg-window'].value);\n            }\n            $('#temperature').text(device['temperature'].value);\n            $('#dutyFactor').text(device['duty-factor'].value);\n            $('#dutyFactor').text(device['duty-factor'].value);\n\n\n            if (!changingState)\n            {\n                switch(device['state'].value) \n                {\n                  case 0:\n                    $('#offStateButton').css(\"background-color\", \"green\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#rampDownStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 1:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"orange\");\n                    $('#rampDownStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 2:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#rampDownStateButton').css(\"background-color\", \"yellow\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 3:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#rampDownStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"magenta\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 4:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#rampDownStateButton').css(\"background-color\", \"white\");\n                    $('#regulateStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"red\");\n                    break;\n                  default:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"grey\");\n                    $('#rampUpStateButton').css(\"background-color\", \"grey\");\n                    $('#rampDownStateButton').css(\"background-color\", \"grey\");\n                    $('#regulateStateButton').css(\"background-color\", \"grey\");\n                    $('#onStateButton').css(\"background-color\", \"grey\");\n                }            \n                \n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 3860,
        "wires": [
            [
                "6b80f69e.94c058"
            ]
        ]
    },
    {
        "id": "2f5e7392.ecdafc",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 3980,
        "wires": [
            [
                "9d56a0fd.813df"
            ]
        ]
    },
    {
        "id": "b18c11e.55be1f",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.rampsettings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 4060,
        "wires": [
            [
                "c1756c26.85b8e"
            ]
        ]
    },
    {
        "id": "598724fc.29817c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.rampControl}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.state}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 4060,
        "wires": [
            [
                "42f242f8.65427c"
            ]
        ]
    },
    {
        "id": "3d27e8e0.3320d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3980,
        "wires": [
            [
                "b9d664a3.31fda8"
            ]
        ]
    },
    {
        "id": "b6bb3da4.80cc7",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3900,
        "wires": [
            [
                "75f55a24.80c724"
            ]
        ]
    },
    {
        "id": "d655f6bb.bc7648",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 3860,
        "wires": [
            [
                "b6bb3da4.80cc7"
            ]
        ]
    },
    {
        "id": "f222f725.a5f5f8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['temperature','ramp-temp','relay','duty-factor'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'Temp (C)',\n                    titlefont       : {color: '#0000ff'},\n                    tickfont        : {color: '#0000ff'},\n                    gridcolor       : '#9999ff',\n                    zerolinecolor   : '#9999ff',\n                    linecolor       : '#9999ff',\n    \n                },\n                yaxis2:\n                {\n                    title           : 'Relay On',\n                    titlefont       : {color: '#ff0000'},\n                    tickfont        : {color:'#ff0000'},\n                    gridcolor       : '#ff9999',\n                    zerolinecolor   : '#ff9999',\n                    linecolor       : '#ff9999',\n                    overlaying: 'y',\n                    side: 'right',\n                    range: [0,100]\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Temperature',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#0000ff'}\n        \n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Ramp Temperature',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#00ff00'}\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Relay On',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#ff0000'}\n            };\n            var trace4 = \n            {\n                x: [],\n                y: [],\n                name: 'Duty Factor',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#ff00ff'}\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                trace4.x[ii] = x;\n                trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2, trace3, trace4], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 3940,
        "wires": [
            [
                "2f5e7392.ecdafc"
            ]
        ]
    },
    {
        "id": "962cc165.21793",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "ovenYellow.png",
        "output": "str",
        "x": 390,
        "y": 3820,
        "wires": [
            [
                "bd01e77c.e909a8"
            ]
        ]
    },
    {
        "id": "75f55a24.80c724",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3940,
        "wires": [
            [
                "3d27e8e0.3320d8"
            ]
        ]
    },
    {
        "id": "9d56a0fd.813df",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 4020,
        "wires": [
            [
                "b18c11e.55be1f"
            ]
        ]
    },
    {
        "id": "b9d664a3.31fda8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 4020,
        "wires": [
            [
                "598724fc.29817c"
            ]
        ]
    },
    {
        "id": "6b80f69e.94c058",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.rampsettings",
        "field": "payload.script.rampsettings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Ramp Settings JavaScript\n        function rampUpTimeChange()\n        {\n            rampUpTimeChanged = true;\n            $('#rampUpTimeButton').show();\n\n        }\n        function rampDownTimeChange()\n        {\n            rampDownTimeChanged = true;\n            $('#rampDownTimeButton').show();\n\n        }\n        function regTempChange()\n        {\n            regTempChanged = true;\n            $('#regTempButton').show();\n\n        }\n        function regWindowChange()\n        {\n            regWindowChanged = true;\n            $('#regWindowButton').show();\n\n        }\n        function rampUpTime()\n        {\n            $('#rampUpTimeButton').hide();\n            if (isNaN($('#rampUpTime').val()))\n            {\n                rampUpTimeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#rampUpTime').val()), 'ramp-up-time');\n            rampUpTimeChanged = false;\n        }\n       function rampDownTime()\n        {\n            $('#rampDownTimeButton').hide();\n            if (isNaN($('#rampDownTime').val()))\n            {\n                rampDownTimeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#rampDownTime').val()), 'ramp-down-time');\n            rampDownTimeChanged = false;\n        }\n        function regTemp()\n        {\n            $('#regTempButton').hide();\n            if (isNaN($('#regTemp').val()))\n            {\n                regTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#regTemp').val()), 'reg-temp');\n            regTempChanged = false;\n        }\n        function regWindow()\n        {\n            $('#regWindowButton').hide();\n            if (isNaN($('#regWindow').val()))\n            {\n                regWindowChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#regWindow').val()), 'reg-window');\n            regWindowChanged = false;\n        }\n        function changeState(state)\n        {\n            device['state'].value = state;\n            sendSetting();\n            changingState = true;\n            $('#offStateButton').css(\"background-color\", \"grey\");\n            $('#rampUpStateButton').css(\"background-color\", \"grey\");\n            $('#rampDownStateButton').css(\"background-color\", \"grey\");\n            $('#regulateStateButton').css(\"background-color\", \"grey\");\n            $('#onStateButton').css(\"background-color\", \"grey\");\n            setTimeout(function(){ changingState = false; }, 1000);\n        }\n",
        "output": "str",
        "x": 710,
        "y": 3900,
        "wires": [
            [
                "f222f725.a5f5f8"
            ]
        ]
    },
    {
        "id": "c1756c26.85b8e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.rampControl",
        "field": "payload.html.rampControl",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Ramp Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='temperatureLabel' >Temperature (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='temperature' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"temperatureButton\" onclick=\"editDevice('temperature')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='dutyFactorLabel' >Duty Factor (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='dutyFactor' >-1</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"dutyFactorButton\" onclick=\"editDevice('duty-factor')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='rampUpTimeLabel'>Ramp Time (hrs)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"rampUpTime\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"rampUpTimeChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"rampUpTimeButton\" onclick=\"rampUpTime()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regTempLabel'>Reg. Temp. (C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"regTemp\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"regTempChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"regTempButton\" onclick=\"regTemp()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='regWindowLabel'>Reg. Window (C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"regWindow\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"regWindowChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"regWindowButton\" onclick=\"regWindow()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1030,
        "y": 3780,
        "wires": [
            [
                "c3ba94e.9091c68"
            ]
        ]
    },
    {
        "id": "c3ba94e.9091c68",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.state",
        "field": "payload.html.state",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>State</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60%><button class='btn btn-block big-text' id=\"offStateButton\" onclick=\"changeState(0)\" >Off</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"rampUpStateButton\" onclick=\"changeState(1)\">Ramp</button></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"onStateButton\" onclick=\"changeState(4)\">On</button></td>\n                                    <td></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 3820,
        "wires": [
            [
                "d655f6bb.bc7648"
            ]
        ]
    },
    {
        "id": "42f242f8.65427c",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 4060,
        "wires": []
    },
    {
        "id": "28ad22d2.27d33e",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-relay-bake",
        "url": "/blinky-relay-bake",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3780,
        "wires": [
            [
                "bff3692b.92ca28"
            ]
        ]
    },
    {
        "id": "bff3692b.92ca28",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 3820,
        "wires": [
            [
                "1bac6d1a.c92e53"
            ]
        ]
    },
    {
        "id": "1bac6d1a.c92e53",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 160,
        "y": 3860,
        "wires": [
            [
                "5a40c79.a843338"
            ]
        ]
    },
    {
        "id": "12e5e267.d874be",
        "type": "subflow:ca529822.9112f8",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "4eb98e2d.07b03",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" style=\"background-color:white;color: #547792;padding-top:10px; padding-bottom:10px;\" width=\"100%\">\n        <div class='row'>\n            <div class='col-md-2' align='left'>\n            </div>\n            <div class='col-md-8' align='center'>\n            </div>\n            <div class='col-md-2' align='right'>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 740,
        "y": 440,
        "wires": [
            [
                "12e5e267.d874be"
            ]
        ]
    },
    {
        "id": "bb7837ce.8d7338",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        .btn-primary, .btn-primary:active, .btn-primary:visited \n        {\n            background-color: var(--color2) !important;\n            color : white !important;\n            font-size: 200% !important;\n        }\n        .btn-primary:hover \n        {\n            background-color: var(--color1) !important;\n            color : var(--color5) !important;\n            font-size: 200% !important;\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding-left:5px;\n          padding-right:5px;\n          padding-bottom:5px;\n\n        }\n        .card-body\n        {\n          background-color: white;\n          text-align: center;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: white;\n          font-size: 200%;\n          font-style:oblique;\n          font-weight: var(--bold-text);\n         }\n        .card-text\n        {\n          color: var(--color2);\n          font-size: 150%;\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .justify\n        {\n            text-align: justify;\n            text-justify: inter-word;\n        }\n",
        "output": "str",
        "x": 610,
        "y": 440,
        "wires": [
            [
                "4eb98e2d.07b03"
            ]
        ]
    },
    {
        "id": "aac70d3b.5b519",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/overview",
        "url": "/overview",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1160,
        "wires": [
            [
                "bba39af5.b80438"
            ]
        ]
    },
    {
        "id": "bba39af5.b80438",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Overview",
        "output": "str",
        "x": 230,
        "y": 1160,
        "wires": [
            [
                "314dbc36.31da74"
            ]
        ]
    },
    {
        "id": "905fa702.e610f8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "d368bce5.2285e"
            ]
        ]
    },
    {
        "id": "314dbc36.31da74",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" align=\"center\">\n        <table width=\"900px\">\n            <tr style='padding-bottom: 10px;'>\n                <td align=\"center\">\n                    <img src=\"/img/infoPics/ControlBox.png\" width=\"800px\" style=\"padding-bottom:1px;\"/>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n                        <ul class=\"card-text\">\n                            <li>We bring your remote sensor data to wherever you want it.</li>\n                            <li>How do we do this? \n                                <ul>\n                                    <li>We have developed a full-stack Internet of Things control system.</li>\n                                    <li>Full stack means Top to Bottom - User to Sensor. </li>\n                                    <li><b>IoT means we can go anywhere!</b></li>\n                                </ul>\n                            </li>\n                            <li>Blinky Lite is completely cloud-based so no expensive computers and no messy cable plants.</li>\n                            <li>Blinky-Lite is a complete system! It covers everything from  sensors all the way to user web-apps.</li>\n                            <li>With Blinky-Lite, if you can blink an LED, you can blink a nuclear power plant. So if you need to get sensor data from hard to reach places quickly and easily, come talk to us. You can read more about the Blinky-Lite platform \n                                <a href='/docs/BlinkyLiteOverview.pdf' style='color:var(--color2);text-decoration: underline;'>here</a>\n                                .\n                            </li>\n                        </ul>\n                </td>\n            </tr>\n        </table>\n        <hr>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsField.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 350,
        "y": 1160,
        "wires": [
            [
                "905fa702.e610f8"
            ]
        ]
    },
    {
        "id": "d368bce5.2285e",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 650,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b998e015.6cc39",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.modeZero",
        "field": "payload.html.modeZero",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"modeZeroCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=modeZero'><span class='card-title'>MaxIV Mode 0 Beam Stablizer</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"modeZeroBtn\" onclick=\"modeZero()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"modeZero\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >First wirelessly controlled system for a particle accelerator. Increased MaxIV beam brightness by 2x. Material cost less than 150 euros and took less than 5 months from concept to operations. No system failures in over 2 years of operation.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <table  align=\"center\">\n                                                <tr>\n                                                    <td>\n                                                        <img src=\"/img/components/modeZero/modeZerod.png\" height=\"320px\" style=\"padding-right:10px;\"/>\n                                                    </td>\n                                                    <td>\n                                                        <img src=\"/img/components/modeZero/modeZeroa.png\" height=\"320px\" style=\"padding-right:1px;\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr> \n                                    <tr>\n                                        <td align=\"center\">\n                                            <table align=\"center\">\n                                                <tr>\n                                                    <td>\n                                                        <img src=\"/img/components/modeZero/modeZeroc.png\" height=\"370px\" style=\"padding-right:10px;\"/>\n                                                    </td>\n                                                    <td>\n                                                        <img src=\"/img/components/modeZero/modeZerob.png\" height=\"370px\" style=\"padding-right:1px;\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 500,
        "wires": [
            [
                "bc296cb9.92df8"
            ]
        ]
    },
    {
        "id": "be312f35.cee4",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyRelayBake",
        "field": "payload.html.blinkyRelayBake",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyRelayBakeCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyRelayBake'><span class='card-title'>Blinky Relay Bake</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyRelayBakeBtn\" onclick=\"blinkyRelayBake()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyRelayBake\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled ultra-high-vacuum bake-out system with programmable temperature ramp and 1 kW of heater power</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-relay-bake/blinky-relay-bake.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "a76f0d2e.2f961"
            ]
        ]
    },
    {
        "id": "48e0f477.ea0e4c",
        "type": "template",
        "z": "f22a539a.a67b3",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:30px;\n        }",
        "output": "str",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b7076b42.4012e8"
            ]
        ]
    },
    {
        "id": "b7076b42.4012e8",
        "type": "template",
        "z": "f22a539a.a67b3",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/core'><img src=\"/img/coreYellow.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 280,
        "y": 80,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "a3eb7ad8.27c498",
        "type": "template",
        "z": "8341090a.df9758",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "6f95e75a.75d6d8"
            ]
        ]
    },
    {
        "id": "6f95e75a.75d6d8",
        "type": "template",
        "z": "8341090a.df9758",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/control-apps'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 280,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "f1e13e6e.d9099",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-env mqtt",
        "links": [
            "ffb80136.883f8"
        ],
        "x": 775,
        "y": 620,
        "wires": []
    },
    {
        "id": "610c8a48.dfbf24",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-env/websocket",
        "server": "e1d2437b.14b8a",
        "client": "",
        "x": 1040,
        "y": 640,
        "wires": []
    },
    {
        "id": "ffb80136.883f8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky-env input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "f1e13e6e.d9099",
            "baefdf48.ffa12"
        ],
        "x": 895,
        "y": 640,
        "wires": [
            [
                "610c8a48.dfbf24"
            ]
        ]
    },
    {
        "id": "baefdf48.ffa12",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-env-archive",
        "links": [
            "ffb80136.883f8"
        ],
        "x": 1295,
        "y": 2480,
        "wires": []
    },
    {
        "id": "c1872bd0.1c1f78",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-env/websocket",
        "server": "e1d2437b.14b8a",
        "client": "",
        "x": 140,
        "y": 1740,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "12ac69c7.38c556",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-env';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 4180,
        "wires": [
            [
                "cc452bf9.6ce548"
            ]
        ]
    },
    {
        "id": "2a0bcba4.31e424",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Env {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 4260,
        "wires": [
            [
                "9da7c85b.c51158"
            ]
        ]
    },
    {
        "id": "9a1d0745.db55e8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Temp 1 (C)',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color:'red'}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Temp 2 (C)',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color:'green'}\n            \n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Temp 3 (C)',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color:'blue'}\n            \n                };\n                this.trace4 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Humidity (%)',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: 'magenta'}\n            \n                };\n                this.trace5 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Moisture (%)',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: 'cyan'}\n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt, trace3Pt, trace4Pt, trace5Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                        this.trace4.x.shift();\n                        this.trace4.y.shift();\n                        this.trace5.x.shift();\n                        this.trace5.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                this.trace4.x.push(now);\n                this.trace4.y.push(trace4Pt);\n                this.trace5.x.push(now);\n                this.trace5.y.push(trace5Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3, this.trace4, this.trace5], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 4220,
        "wires": [
            [
                "87d52901.57f698"
            ]
        ]
    },
    {
        "id": "9da7c85b.c51158",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Temperature (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Humidity & Mositure(%)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var loopDelayChanged = false;\n        \n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            $('#loopDelayButtonId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n        function loopDelayChange()\n        {\n            loopDelayChanged = true;\n            $('#loopDelayButtonId').show();\n        }\n        function loopDelay()\n        {\n            $('#loopDelayButtonId').hide();\n            if (isNaN($('#loopDelayInputId').val()))\n            {\n                loopDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#loopDelayInputId').val()), 'loopDelay');\n            loopDelayChanged = false;\n        }\n",
        "output": "str",
        "x": 690,
        "y": 4180,
        "wires": [
            [
                "9a1d0745.db55e8"
            ]
        ]
    },
    {
        "id": "87d52901.57f698",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!loopDelayChanged)$('#loopDelayInputId').val(device.loopDelay.value);\n            var temp1 = device.temperature1.value;\n            var temp2 = device.temperature2.value;\n            var temp3 = device.temperature3.value;\n            var humid = device.humidity.value;\n            var moist = device.moisture.value;\n            $('#temperature1Id').text(temp1);\n            $('#temperature2Id').text(temp2);\n            $('#temperature3Id').text(temp3);\n            $('#humidityId').text(humid);\n            $('#moistureId').text(moist);\n            historyStripChart.addTracePoints(temp1, temp2, temp3, humid, moist);\n        }\n",
        "output": "str",
        "x": 720,
        "y": 4260,
        "wires": [
            [
                "d8de08a6.7b90f8"
            ]
        ]
    },
    {
        "id": "760060d9.6f18d",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 4340,
        "wires": [
            [
                "79a375dd.57431c"
            ]
        ]
    },
    {
        "id": "300f9f84.854db",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 4420,
        "wires": [
            [
                "9695e918.a89048"
            ]
        ]
    },
    {
        "id": "9a7d19b9.4b0eb8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 4420,
        "wires": [
            [
                "60a27e8.6762d8"
            ]
        ]
    },
    {
        "id": "9508527f.5ffa6",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 4340,
        "wires": [
            [
                "63290282.a4d88c"
            ]
        ]
    },
    {
        "id": "63f3d4d9.a93d2c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 4260,
        "wires": [
            [
                "5b8e669e.cf1108"
            ]
        ]
    },
    {
        "id": "e807ae3e.10a04",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 4220,
        "wires": [
            [
                "63f3d4d9.a93d2c"
            ]
        ]
    },
    {
        "id": "d8de08a6.7b90f8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['temperature1','temperature2','temperature3','humidity','moisture'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Temp 1 (C)',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red'}\n        \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Temp 2 (C)',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'green'}\n        \n            };\n            this.trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Temp 3 (C)',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'blue'}\n        \n            };\n            this.trace4 = \n            {\n                x: [],\n                y: [],\n                name: 'Humidity (%)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'magenta'}\n        \n            };\n            this.trace5 = \n            {\n                x: [],\n                y: [],\n                name: 'Moisture (%)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'cyan'}\n        \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                trace4.x[ii] = x;\n                trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n                trace5.x[ii] = x;\n                trace5.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[4]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1, trace2, trace3, trace4, trace5], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 4300,
        "wires": [
            [
                "760060d9.6f18d"
            ]
        ]
    },
    {
        "id": "cc452bf9.6ce548",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "leafYellow.png",
        "output": "str",
        "x": 390,
        "y": 4220,
        "wires": [
            [
                "2a0bcba4.31e424"
            ]
        ]
    },
    {
        "id": "5b8e669e.cf1108",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 4300,
        "wires": [
            [
                "9508527f.5ffa6"
            ]
        ]
    },
    {
        "id": "79a375dd.57431c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 4380,
        "wires": [
            [
                "300f9f84.854db"
            ]
        ]
    },
    {
        "id": "63290282.a4d88c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 4380,
        "wires": [
            [
                "9a7d19b9.4b0eb8"
            ]
        ]
    },
    {
        "id": "9695e918.a89048",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Temperature 1 (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='temperature1Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('temperature1')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Temperature 2 (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='temperature2Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('temperature2')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Temperature 3 (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='temperature3Id' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('temperature3')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Humidity (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='humidityId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('humidity')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Moisture (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text'  id='moistureId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('moisture')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' >Loop Delay (mS)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"loopDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"loopDelayChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"loopDelayButtonId\" onclick=\"loopDelay()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 4180,
        "wires": [
            [
                "e807ae3e.10a04"
            ]
        ]
    },
    {
        "id": "60a27e8.6762d8",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1290,
        "y": 4420,
        "wires": []
    },
    {
        "id": "3c5130c1.fa945",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/blinky-env",
        "url": "/blinky-env",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 4180,
        "wires": [
            [
                "d6d55560.b16588"
            ]
        ]
    },
    {
        "id": "d6d55560.b16588",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 4220,
        "wires": [
            [
                "ce136049.60cdd"
            ]
        ]
    },
    {
        "id": "ce136049.60cdd",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "9c854ea3.68416",
        "x": 160,
        "y": 4260,
        "wires": [
            [
                "12ac69c7.38c556"
            ]
        ]
    },
    {
        "id": "6aa50304.6c3dac",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyEnv",
        "field": "payload.html.blinkyEnv",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyEnvCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyEnv'><span class='card-title'>Blinky Environment</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyEnvBtn\" onclick=\"blinkyEnv()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyEnv\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled enviroment monitor with three temperature monitors, one humidity detector, and one moisture monitor</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-env.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 780,
        "wires": [
            [
                "47def6e6.bc0118"
            ]
        ]
    },
    {
        "id": "47def6e6.bc0118",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyCosmicInterval",
        "field": "payload.html.blinkyCosmicInterval",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyCosmicIntervalCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyCosmicInterval'><span class='card-title'>Blinky Cosmic Interval</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyCosmicIntervalBtn\" onclick=\"blinkyCosmicInterval()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyCosmicInterval\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled ionizing radiation monitor based on a Geiger–Müller tube</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-cosmic-interval.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 650,
        "y": 820,
        "wires": [
            [
                "7fe1eeb9.a745b"
            ]
        ]
    },
    {
        "id": "de38cb39.638048",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "9ac12bdb.3cd258"
            ]
        ]
    },
    {
        "id": "41efb541.ee2eec",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 100,
        "wires": [
            [
                "de38cb39.638048"
            ]
        ]
    },
    {
        "id": "c7984811.67e8f8",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "ipRefWeb",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ipRefWeb",
        "payload": "IPREFWEB",
        "payloadType": "env",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "daa5f679.c0a968"
            ]
        ]
    },
    {
        "id": "daa5f679.c0a968",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save ipRefWeb",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bad679e2.d62e68",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-ssr-bake mqtt",
        "links": [
            "9ef4d388.4bcf7",
            "80c07ebe.4f177"
        ],
        "x": 775,
        "y": 680,
        "wires": []
    },
    {
        "id": "7f8586bd.a7b228",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-ssr-bake/websocket",
        "server": "78f65260.780d3c",
        "client": "",
        "x": 1060,
        "y": 700,
        "wires": []
    },
    {
        "id": "9ef4d388.4bcf7",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky-ssr-bake input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "bad679e2.d62e68",
            "ab824e1f.3ad1"
        ],
        "x": 895,
        "y": 700,
        "wires": [
            [
                "7f8586bd.a7b228"
            ]
        ]
    },
    {
        "id": "ab824e1f.3ad1",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-ssr-bake-archive",
        "links": [
            "9ef4d388.4bcf7",
            "80c07ebe.4f177"
        ],
        "x": 1295,
        "y": 2520,
        "wires": []
    },
    {
        "id": "8924fab1.780468",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-ssr-bake/websocket",
        "server": "78f65260.780d3c",
        "client": "",
        "x": 150,
        "y": 1800,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "91de34c1.fa0508",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkySsrBake",
        "field": "payload.html.blinkySsrBake",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkySsrBakeCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkySsrBake'><span class='card-title'>Blinky SSR Bake</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkySsrBakeBtn\" onclick=\"blinkySsrBake()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkySsrBake\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled ultra-high-vacuum bake-out system with programmable temperature ramp and 2500 Watts of heater power. The system uses solid state switching to give temperature regulation to within 0.1 degrees</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-ssr-bake.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 620,
        "wires": [
            [
                "be312f35.cee4"
            ]
        ]
    },
    {
        "id": "bc296cb9.92df8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermo",
        "field": "payload.html.blinkyThermo",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyThermo'><span class='card-title'>Blinky Thermo</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoBtn\" onclick=\"blinkyThermo()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermo\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wireless temperature monitor with two K-Type thermocouples(Range: -200C to 1200C, Resolution: 0.25C) and two solid state temperature monitors (Range: -55C to 125C, Resolution: 0.05C). 100 hours of operation with a 5Amp-hour battery</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "848d019.3f43f"
            ]
        ]
    },
    {
        "id": "acd4820a.8c999",
        "type": "function",
        "z": "a858ad3a.95706",
        "name": "Get Component Tag",
        "func": "msg.payload['componentTag'] = '';\nif (Object.keys(msg.payload).length < 1)\n{\n    return msg;\n}\nif (!msg.payload.hasOwnProperty(\"component\"))\n{\n    return msg;\n}\nmsg.payload.componentTag = msg.payload.component;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 500,
        "wires": [
            [
                "e7fb26ce.45c778"
            ]
        ]
    },
    {
        "id": "65caa0f7.a3423",
        "type": "http in",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam",
        "url": "/blinky-thermo-cam",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "b0e9c72a.4fb088"
            ]
        ]
    },
    {
        "id": "b0e9c72a.4fb088",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "a2ed66ef.f9e9a8"
            ]
        ]
    },
    {
        "id": "a2ed66ef.f9e9a8",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ec67d8c2.3f3c98",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "a8ffa77f.e2d058"
            ]
        ]
    },
    {
        "id": "7b4f6c11.237264",
        "type": "subflow:8341090a.df9758",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "x": 1290,
        "y": 320,
        "wires": []
    },
    {
        "id": "83e94d54.625e",
        "type": "http in",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam-archive",
        "url": "/blinky-thermo-cam-archive",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "8d9e23ad.3dc5"
            ]
        ]
    },
    {
        "id": "8d9e23ad.3dc5",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "27c74654.38981a"
            ]
        ]
    },
    {
        "id": "27c74654.38981a",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ec67d8c2.3f3c98",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "ebcf7083.40b14"
            ]
        ]
    },
    {
        "id": "ebcf7083.40b14",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-thermo-cam';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 440,
        "wires": [
            [
                "7c6fb201.923d0c"
            ]
        ]
    },
    {
        "id": "9727aab6.c8cd08",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Thermo Cam {{{payload.script.name}}} Archive",
        "output": "str",
        "x": 460,
        "y": 520,
        "wires": [
            [
                "360761de.f6b01e"
            ]
        ]
    },
    {
        "id": "7c6fb201.923d0c",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "9727aab6.c8cd08"
            ]
        ]
    },
    {
        "id": "360761de.f6b01e",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var imageArray = null;\n        var lastArchiveDate = new Date().getTime();\n        var programStarted = false;\n\n        var archiveRequestList = [];\n        var archiveList = [];\n        var plotConfig = \n        {\n            trace1Title : 'Max Pixel (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Min Pixel (C)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#imageView').show();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                sendActionMsg('getLastImage','readDatabase', restfulDevice);\n            }\n         }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'image' :\n                    if (msg.userID == userID)\n                    {\n                        $('#imageView').show();\n                        $('#snapshotTimeStamp').text(new Date(msg.payload.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }).replace(',', ''));\n                        pgm = JSON.parse(JSON.stringify(msg.payload.imageData));\n                        imageArray = pgm.imageArray;\n                        $('#sensorName').text('Sensor ' + msg.payload.name);\n                        if (msg.payload.transpose == 0)\n                        {\n                            $('#flirCanvas').attr('width', '800');\n                        }\n                        else\n                        {\n                            $('#flirCanvas').attr('width', '450');\n                        }\n                        plotImage();\n                    }\n                    break;\n                case 'getLastImage':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;\n                        if (device.imageData.value != null)\n                        {\n                            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                            pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                            imageArray = pgm.imageArray;\n                            $('#sensorName').text('Sensor ' + device.name);\n                            if (device.transpose.value == 0)\n                            {\n                                $('#flirCanvas').attr('width', '800');\n                            }\n                            else\n                            {\n                                $('#flirCanvas').attr('width', '450');\n                            }\n                            plotImage();\n                            lastArchiveDate = device.timeStamp;\n                            getArchive(8);\n\n                        }\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function processImage(msg)\n        {\n        }\n        function getImage(timeStamp)\n        {\n            var queryMsg = \n            {\n                topic : 'getImage', \n                userID : userID, \n                'restfulDevice': restfulDevice,\n                'timeStamp' : timeStamp,\n            };\n            sendActionMsg('getImage','readDatabase', queryMsg);\n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var wrapperWidth = Number($('#wrapper').attr('width'));\n            var xOffsetKluge = Math.round((wrapperWidth - canvasWidth) / 2);\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = Math.round(canvasWidth  / pgm.ncols);\n            var rectHeight = Math.round(canvasHeight / pgm.nrows);\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (xOffsetKluge + e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (xOffsetKluge + e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n       function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          var rgbCoeff = [\n              [  48.6, 349.0,    5.72, -172.0],\n              [-164.0, 705.0, -667.0 ,  379.0],\n              [ 135.0, 332.0, -976.0,   536.0]];\n          var intensityStart = [0.0, 0.3176, 0.0];\n          var power = [1.0, 0.0, 0.0, 0.0];\n          for (var ii = 1; ii < 4; ++ii) power[ii] = power[ii - 1] * intensity;\n          for (var irgb = 0; irgb < 3; ++irgb)\n          {\n              if (intensity >= intensityStart[irgb])\n              {\n                  for (var ipow = 0; ipow < 4; ++ipow)\n                  {\n                      rgb[irgb] = rgb[irgb] + rgbCoeff[irgb][ipow] * power[ipow];\n                  }\n              }\n          }\n          return rgb;\n        }\n        function getRGBRainbow(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n        }\n",
        "output": "str",
        "x": 790,
        "y": 440,
        "wires": [
            [
                "f331d94b.bd2cd8"
            ]
        ]
    },
    {
        "id": "f373ee80.ab274",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.archive}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "238e6259.7712fe"
            ]
        ]
    },
    {
        "id": "187d0bb4.cbe6d4",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 520,
        "wires": [
            [
                "b340ff33.cf6a9"
            ]
        ]
    },
    {
        "id": "b340ff33.cf6a9",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.imageView}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 560,
        "wires": [
            [
                "92815673.e76d28"
            ]
        ]
    },
    {
        "id": "92815673.e76d28",
        "type": "subflow:8341090a.df9758",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "x": 1270,
        "y": 560,
        "wires": []
    },
    {
        "id": "238e6259.7712fe",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.imageView",
        "field": "payload.html.imageView",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- imageView HTML -->\n                <div class='card' id='imageView'>\n                    <p class='card-title'>Image View</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td align=\"center\">\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='40%' align='left'>\n                                                    <span  class='card-text' id='sensorName'>Sensor xx</span>\n                                                </td>\n                                                <td width='60%' align='right'>\n                                                    <span  class='card-text' id='snapshotTimeStamp'></span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 1040,
        "y": 440,
        "wires": [
            [
                "32ad5489.8f854c"
            ]
        ]
    },
    {
        "id": "315d6482.66f2bc",
        "type": "websocket in",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam-archive/websocket",
        "server": "839103c3.87224",
        "client": "",
        "x": 190,
        "y": 960,
        "wires": [
            [
                "4d89b11e.1f982"
            ]
        ]
    },
    {
        "id": "aa05725a.410af",
        "type": "websocket out",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam-archive/websocket",
        "server": "839103c3.87224",
        "client": "",
        "x": 1790,
        "y": 960,
        "wires": []
    },
    {
        "id": "4d89b11e.1f982",
        "type": "subflow:fee416c.fb205e8",
        "z": "ec67d8c2.3f3c98",
        "x": 470,
        "y": 960,
        "wires": [
            [
                "c757d741.7589a8"
            ],
            [
                "a5997c28.605b"
            ]
        ]
    },
    {
        "id": "c757d741.7589a8",
        "type": "switch",
        "z": "ec67d8c2.3f3c98",
        "name": "Action Switch",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getImage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getLastImage",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "renew",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 680,
        "y": 960,
        "wires": [
            [
                "80aa41c3.d30e5"
            ],
            [
                "a42b1a3c.843ec8"
            ],
            [
                "38fa6289.b2a88e"
            ],
            [
                "e30e28ce.b88308"
            ],
            [
                "c5c4af8a.031d"
            ],
            [
                "ee3977a8.365b78"
            ]
        ]
    },
    {
        "id": "ee3977a8.365b78",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Renew Token",
        "func": "msg.token.expDate = new Date().getTime() + msg.token.timeoutMin * 60000;\ndelete msg.token['iat']\nmsg.payload = JSON.parse(JSON.stringify(msg.token));\ndelete msg['token'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 1080,
        "wires": [
            [
                "c5b76ea3.e0d94"
            ]
        ]
    },
    {
        "id": "c5b76ea3.e0d94",
        "type": "JsonWebToken",
        "z": "ec67d8c2.3f3c98",
        "name": "encrypt token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 1120,
        "y": 1080,
        "wires": [
            [
                "111fdc76.128134"
            ]
        ]
    },
    {
        "id": "111fdc76.128134",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Renew Cookies",
        "func": "var newMsg = \n{\n    topic : 'renew',\n    payload: \n    {\n        topic       : 'renew',\n        userID      : msg.userID,\n        role        : msg.token,\n        expDate     : msg.payload.expDate.toString(),\n        username    : msg.payload.username\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1400,
        "y": 1080,
        "wires": [
            [
                "aa05725a.410af"
            ]
        ]
    },
    {
        "id": "7c3ffc99.96fbd4",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1200,
        "y": 900,
        "wires": [
            [
                "ba2963fe.1f95a"
            ]
        ]
    },
    {
        "id": "38fa6289.b2a88e",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.device.attr.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.device.attr[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 900,
        "wires": [
            [
                "7c3ffc99.96fbd4"
            ]
        ]
    },
    {
        "id": "ba2963fe.1f95a",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.deviceType,\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {device: msg.device, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.device.attr.length; ++ij)\n    {\n        trace[ii][msg.device.attr[ij]] = records[ii][msg.device.attr[ij]];\n    }\n}\n\nreturn {\n    topic : msg.device.deviceType,\n    payload:{\n        topic           : msg.topic,\n        payload         : {device: msg.device, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1470,
        "y": 900,
        "wires": [
            [
                "aa05725a.410af"
            ]
        ]
    },
    {
        "id": "4eb61a0f.944494",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 790,
        "y": 520,
        "wires": [
            [
                "f373ee80.ab274"
            ]
        ]
    },
    {
        "id": "f331d94b.bd2cd8",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = lastArchiveDate;\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['pixelMax','pixelMin'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace2Color,\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            var myPlot = document.getElementById('archiveChart');\n            myPlot.on('plotly_click', function(data)\n            {\n//                console.log(archiveList[data.points[0].curveNumber].trace[data.points[0].pointIndex].timeStamp);\n                getImage(archiveList[data.points[0].curveNumber].trace[data.points[0].pointIndex].timeStamp); \n            });\n\n\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 790,
        "y": 480,
        "wires": [
            [
                "4eb61a0f.944494"
            ]
        ]
    },
    {
        "id": "32ad5489.8f854c",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 480,
        "wires": [
            [
                "187d0bb4.cbe6d4"
            ]
        ]
    },
    {
        "id": "3aa20620.d13dea",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1200,
        "y": 960,
        "wires": [
            [
                "e8256063.2a1f6"
            ]
        ]
    },
    {
        "id": "e30e28ce.b88308",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "parse getImage",
        "func": "if (msg.payload.topic != 'getImage') return null;\nvar projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0 \n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.restfulDevice.deviceType\n        },\n        {\n            name: msg.payload.restfulDevice.name\n        },\n        {\n            timeStamp : msg.payload.timeStamp\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 960,
        "wires": [
            [
                "3aa20620.d13dea"
            ]
        ]
    },
    {
        "id": "e8256063.2a1f6",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Parse image results",
        "func": "var imageMsg = \n{\n    topic:'image' ,\n    userID:msg.userID,\n    payload:msg.payload[0]\n}\nreturn {topic : msg.topic, payload:imageMsg};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 960,
        "wires": [
            [
                "aa05725a.410af"
            ]
        ]
    },
    {
        "id": "a5997c28.605b",
        "type": "link out",
        "z": "ec67d8c2.3f3c98",
        "name": "thermo-cam-archive-permission out",
        "links": [
            "cdb5603b.12621"
        ],
        "x": 635,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cdb5603b.12621",
        "type": "link in",
        "z": "ec67d8c2.3f3c98",
        "name": "blinky-thermo-cam-archive websocket in",
        "links": [
            "a5997c28.605b"
        ],
        "x": 1535,
        "y": 1080,
        "wires": [
            [
                "aa05725a.410af"
            ]
        ]
    },
    {
        "id": "a8ffa77f.e2d058",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-thermo-cam';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 80,
        "wires": [
            [
                "4419eb29.cc22c4"
            ]
        ]
    },
    {
        "id": "f84ce45c.f4d218",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Thermo Cam {{{payload.script.name}}}",
        "output": "str",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "2936e41d.0e767c"
            ]
        ]
    },
    {
        "id": "ed11017b.57c37",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var imageArray = null;\n        var imageDelayChanged = false;\n        var programStarted = false;\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $('#imageDelayButtonId').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                if (remoteApp)\n                {\n                    sendActionMsg('getLastImage','readDatabase', restfulDevice);\n                }\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getLastImage':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;\n                        if (device.imageData.value != null)\n                        {\n                            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                            pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                            imageArray = pgm.imageArray;\n                            $('#sensorName').text('Sensor ' + device.name);\n                            if (device.transpose.value == 0)\n                            {\n                                $('#flirCanvas').attr('width', '800');\n                            }\n                            else\n                            {\n                                $('#flirCanvas').attr('width', '450');\n                            }\n                            plotImage();\n                        }\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n",
        "output": "str",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "30abd860.09e5a8"
            ]
        ]
    },
    {
        "id": "479506a6.4a3d18",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#editValue\").val(attr.value);\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val())\n                || isNaN($('#editValue').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.value = Number($( \"#editValue\").val());\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "c1f56748.3f9a48"
            ]
        ]
    },
    {
        "id": "b1765238.328b2",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "f6e9f431.0c5c58"
            ]
        ]
    },
    {
        "id": "130dffcc.ca92",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.controls}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "7b4f6c11.237264"
            ]
        ]
    },
    {
        "id": "c39c62c4.0b9fa",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "dec3f87d.d66888"
            ]
        ]
    },
    {
        "id": "4419eb29.cc22c4",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "f84ce45c.f4d218"
            ]
        ]
    },
    {
        "id": "21ec794d.b17a66",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1080,
        "y": 200,
        "wires": [
            [
                "c39c62c4.0b9fa"
            ]
        ]
    },
    {
        "id": "c1f56748.3f9a48",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 770,
        "y": 240,
        "wires": [
            [
                "b1765238.328b2"
            ]
        ]
    },
    {
        "id": "dec3f87d.d66888",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "130dffcc.ca92"
            ]
        ]
    },
    {
        "id": "30abd860.09e5a8",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (!imageDelayChanged)$('#imageDelayInputId').val(device.imageDelay.value);\n\n            $('#triggerModeInputId').val(device.triggerMode.value);\n            if (device.triggerMode.value == 0)\n            {\n                $('#manualTrigger').show();\n            }\n            else\n            {\n                $('#manualTrigger').hide();\n            }\n            $('#transposeInputId').val(device.transpose.value);\n            $('#scaleModeInputId').val(device.scaleMode.value);\n            if (device.resMode.value == 1)\n            {\n                $('#chipResolutionId').text('80x60');\n            }\n            else\n            {\n                $('#chipResolutionId').text('160x120');\n            }\n            \n            $('#sensorName').text('Sensor ' + device.name);\n            $('#pixelMinId').text(device.pixelMin.value);\n            $('#pixelMaxId').text(device.pixelMax.value);\n            if (device.archiveData.value  == 1)\n            {\n                historyStripChart.addTracePoints(device.pixelMax.value, device.pixelMin.value);\n                $('#manualTriggerButton').text('Take Image');\n                $('#snapshotTimeStamp').text(new Date().toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                imageArray = pgm.imageArray;\n                if (device.transpose.value == 0)\n                {\n                    $('#flirCanvas').attr('width', '800');\n                }\n                else\n                {\n                    $('#flirCanvas').attr('width', '450');\n                }\n                plotImage();\n                var image1dArray = [];\n                var ipixel = 0;\n                var plow = (pgm.minval - 27315) / 100;\n                var phigh = (pgm.maxval - 27315) / 100;\n            }\n\n            var buttonColor = 'green';\n            var buttonTextColor = 'black';\n            var buttonText = \"Off\";\n            if (device.flipHorizontal.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipHorizontalId').css('color', buttonTextColor); \n            $('#flipHorizontalId').css('background-color', buttonColor); \n            $('#flipHorizontalId').text(buttonText); \n\n            buttonColor = 'green';\n            buttonTextColor = 'black';\n            buttonText = \"Off\";\n            if (device.flipVertical.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipVerticalId').css('color', buttonTextColor); \n            $('#flipVerticalId').css('background-color', buttonColor); \n            $('#flipVerticalId').text(buttonText); \n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var wrapperWidth = Number($('#wrapper').attr('width'));\n            var xOffsetKluge = Math.round((wrapperWidth - canvasWidth) / 2);\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = Math.round(canvasWidth  / pgm.ncols);\n            var rectHeight = Math.round(canvasHeight / pgm.nrows);\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (xOffsetKluge + e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (xOffsetKluge + e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n/*\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n*/\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          var rgbCoeff = [\n              [  48.6, 349.0,    5.72, -172.0],\n              [-164.0, 705.0, -667.0 ,  379.0],\n              [ 135.0, 332.0, -976.0,   536.0]];\n          var intensityStart = [0.0, 0.3176, 0.0];\n          var power = [1.0, 0.0, 0.0, 0.0];\n          for (var ii = 1; ii < 4; ++ii) power[ii] = power[ii - 1] * intensity;\n          for (var irgb = 0; irgb < 3; ++irgb)\n          {\n              if (intensity >= intensityStart[irgb])\n              {\n                  for (var ipow = 0; ipow < 4; ++ipow)\n                  {\n                      rgb[irgb] = rgb[irgb] + rgbCoeff[irgb][ipow] * power[ipow];\n                  }\n              }\n          }\n          return rgb;\n        }\n        function getRGBRainbow(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n            $('#pixelMaxBarPlot').hide();\n        }\n        function flipHorizontal()\n        {\n            if (device.flipHorizontal.value > 0)\n            {\n                device.flipHorizontal.value = 0;\n            }\n            else\n            {\n                device.flipHorizontal.value = 1;\n                \n            }\n            $('#flipHorizontalId').css('color', 'black'); \n            $('#flipHorizontalId').css('background-color', 'grey'); \n            $('#flipHorizontalId').text('?'); \n            sendSetting();\n        }\n        function flipVertical()\n        {\n            if (device.flipVertical.value > 0)\n            {\n                device.flipVertical.value = 0;\n            }\n            else\n            {\n                device.flipVertical.value = 1;\n                \n            }\n            $('#flipVerticalId').css('color', 'black'); \n            $('#flipVerticalId').css('background-color', 'grey'); \n            $('#flipVerticalId').text('?'); \n            sendSetting();\n        }\n        function imageDelayChange()\n        {\n            imageDelayChanged = true;\n            $('#imageDelayButtonId').show();\n        }\n        function imageDelay()\n        {\n            $('#imageDelayButtonId').hide();\n            if (isNaN($('#imageDelayInputId').val()))\n            {\n                imageDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#imageDelayInputId').val()), 'imageDelay');\n            imageDelayChanged = false;\n        }\n        function triggerMode()\n        {\n            if (isNaN($('#triggerModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#triggerModeInputId').val()), 'triggerMode');\n        }\n        function scaleMode()\n        {\n            if (isNaN($('#scaleModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#scaleModeInputId').val()), 'scaleMode');\n        }\n        function manualTrigger()\n        {\n            if (device.manualTrigger.value == 0)\n            {\n                setScalarValue(1, 'manualTrigger');\n                $('#manualTriggerButton').text('ABORT');\n            }\n            else\n            {\n                setScalarValue(0, 'manualTrigger');\n                $('#manualTriggerButton').text('Take Image');\n            }\n        }\n        function transpose()\n        {\n            if (isNaN($('#transposeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#transposeInputId').val()), 'transpose');\n        }\n",
        "output": "str",
        "x": 800,
        "y": 160,
        "wires": [
            [
                "479506a6.4a3d18"
            ]
        ]
    },
    {
        "id": "f6e9f431.0c5c58",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Temperature</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td align=\"center\">\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;' id='manualTrigger'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='20%' align='left'> </td>\n                                                <td width='60%' align='center'>\n                                                    <button class='btn btn-block card-button big-text' id=\"manualTriggerButton\" onclick=\"manualTrigger()\" >Take Image</button>\n                                                </td>\n                                                <td width='20%' align='left'> </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='40%' align='left'>\n                                                    <span  class='card-text' id='sensorName'>Sensor xx</span>\n                                                </td>\n                                                <td width='60%' align='right'>\n                                                    <span  class='card-text' id='snapshotTimeStamp'></span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "9e7f86b0.dd13f8"
            ]
        ]
    },
    {
        "id": "9e7f86b0.dd13f8",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.controls",
        "field": "payload.html.controls",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Horizontal</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipHorizontalId' onclick=\"flipHorizontal()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Vertical</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipVerticalId' onclick=\"flipVertical()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Image Delay (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"imageDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"imageDelayChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"imageDelayButtonId\" onclick=\"imageDelay()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Display Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"transposeInputId\" onchange=\"transpose()\">\n                                                        <option value=\"0\">Landscape</option>\n                                                        <option value=\"1\">Portrait</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Trigger Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"triggerModeInputId\" onchange=\"triggerMode()\" >\n                                                        <option value=\"0\">Manual</option>\n                                                        <option value=\"1\">Periodic</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Scale Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"scaleModeInputId\" onchange=\"scaleMode()\" >\n                                                        <option value=\"0\">Manual</option>\n                                                        <option value=\"1\">Auto</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Min Pixel (C)</span>\n                                                </td>\n                                                <td width='20%' align='center'>\n                                                    <span class='card-text'  id='pixelMinId' >-100</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' onclick=\"editDevice('pixelMin')\" >Edit</button>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Max Pixel (C)</span>\n                                                </td>\n                                                <td width='20%' align='center'>\n                                                    <span class='card-text'  id='pixelMaxId' >-100</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' onclick=\"editDevice('pixelMax')\" >Edit</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Chip Resolution</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"chipResolutionId\" >80x60</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Value</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"editValue\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "b952a7a3.d06fe8"
            ]
        ]
    },
    {
        "id": "b952a7a3.d06fe8",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "21ec794d.b17a66"
            ]
        ]
    },
    {
        "id": "2936e41d.0e767c",
        "type": "template",
        "z": "ec67d8c2.3f3c98",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Max Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'red',\n                        size: 10,\n                        symbol: 'circle'\n                    }\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Min Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'green',\n                        size: 10,\n                        symbol: 'square'\n                    }\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n\n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "ed11017b.57c37"
            ]
        ]
    },
    {
        "id": "848d019.3f43f",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermoCam",
        "field": "payload.html.blinkyThermoCam",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCamCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyThermoCam'><span class='card-title'>Blinky Thermo Cam</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoCamBtn\" onclick=\"blinkyThermoCam()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermoCam\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">An infrared camera with cloud archiving capability and time-lapse features. Also equiped with its own wireless server for isolated operation</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo-cam.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 650,
        "y": 580,
        "wires": [
            [
                "91de34c1.fa0508"
            ]
        ]
    },
    {
        "id": "4a7ec092.411da",
        "type": "websocket in",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam/websocket",
        "server": "40f038e6.5f0818",
        "client": "",
        "x": 160,
        "y": 1020,
        "wires": [
            [
                "4d89b11e.1f982"
            ]
        ]
    },
    {
        "id": "c5c4af8a.031d",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "getLastImage",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0 \n    } \n};\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.deviceType\n        },\n        {\n            name: msg.payload.name\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 1020,
        "wires": [
            [
                "3bd8b507.46762a"
            ]
        ]
    },
    {
        "id": "3a28e7a2.81b978",
        "type": "websocket out",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam/websocket",
        "server": "40f038e6.5f0818",
        "client": "",
        "x": 1770,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3bd8b507.46762a",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 1180,
        "y": 1020,
        "wires": [
            [
                "27e599eb.a81766"
            ]
        ]
    },
    {
        "id": "27e599eb.a81766",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "parse getLastImage",
        "func": "return {topic : msg.topic, payload:\n{\n    topic:msg.topic ,\n    userID:msg.userID,\n    payload:msg.payload}\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 1020,
        "wires": [
            [
                "3a28e7a2.81b978",
                "aa05725a.410af"
            ]
        ]
    },
    {
        "id": "ba585b6e.7fbaa8",
        "type": "mqtt out",
        "z": "ec67d8c2.3f3c98",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1080,
        "y": 820,
        "wires": []
    },
    {
        "id": "7a072fe5.f88b9",
        "type": "subflow:e13648d6.d698c8",
        "z": "ec67d8c2.3f3c98",
        "x": 1310,
        "y": 760,
        "wires": []
    },
    {
        "id": "5b969f38.37807",
        "type": "gzip",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "3a953236.ce8f3e"
            ]
        ]
    },
    {
        "id": "3a953236.ce8f3e",
        "type": "json",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 760,
        "wires": [
            [
                "7a072fe5.f88b9"
            ]
        ]
    },
    {
        "id": "80aa41c3.d30e5",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 780,
        "wires": [
            [
                "ba585b6e.7fbaa8",
                "5b969f38.37807"
            ]
        ]
    },
    {
        "id": "a42b1a3c.843ec8",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Prep MQTT",
        "func": "var newMsg = msg.payload;\nnewMsg.userID = msg.userID\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 840,
        "wires": [
            [
                "ba585b6e.7fbaa8"
            ]
        ]
    },
    {
        "id": "35181b40.f4b854",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "MQTT Subscribe Readings",
        "links": [
            "d57148fa.5bf7b8"
        ],
        "x": 315,
        "y": 400,
        "wires": []
    },
    {
        "id": "d57148fa.5bf7b8",
        "type": "link in",
        "z": "ec67d8c2.3f3c98",
        "name": "Cam Web Apps MQTT Readings In",
        "links": [
            "35181b40.f4b854"
        ],
        "x": 85,
        "y": 1260,
        "wires": [
            [
                "ad3cb7fa.59db58"
            ]
        ]
    },
    {
        "id": "7abde9ff.1c9608",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "faab8c77.1766b"
            ]
        ]
    },
    {
        "id": "faab8c77.1766b",
        "type": "websocket out",
        "z": "ec67d8c2.3f3c98",
        "name": "/blinky-thermo-cam/websocket",
        "server": "40f038e6.5f0818",
        "client": "",
        "x": 770,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ced7c8c1.d693f8",
        "type": "gzip",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "946061e7.e73d1"
            ]
        ]
    },
    {
        "id": "946061e7.e73d1",
        "type": "json",
        "z": "ec67d8c2.3f3c98",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 290,
        "y": 1360,
        "wires": [
            [
                "c5416540.288158"
            ]
        ]
    },
    {
        "id": "c5416540.288158",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, mqttDevice : device, payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 1360,
        "wires": [
            [
                "fafeb157.c43ba"
            ]
        ]
    },
    {
        "id": "fafeb157.c43ba",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "parse topic",
        "func": "return {\n    topic   :msg.payload.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1360,
        "wires": [
            [
                "ebd143a8.f13f"
            ]
        ]
    },
    {
        "id": "ebd143a8.f13f",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 860,
        "y": 1360,
        "wires": [
            [
                "c86093b2.d6733"
            ]
        ]
    },
    {
        "id": "c86093b2.d6733",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Check if Device Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 1360,
        "wires": [
            [
                "9f488080.9d1d6"
            ]
        ]
    },
    {
        "id": "9f488080.9d1d6",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "blinky-thermo-cam",
        "func": "if (msg.device.archiveData.value != 1) return null;\nmsg.device.lastArchive = msg.payload.lastArchive;\nmsg.device.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.device);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.device[keys[ii]];\n\nvar archiveMsg = null;\nmsg.payload.lastArchive  = msg.payload.timeStamp;\nmsg.device.lastArchive = msg.payload.lastArchive;\nvar archiveDevice = JSON.parse(JSON.stringify(msg.device));\ndelete archiveDevice.arcPeriod;\ndelete archiveDevice.lastArchive;\nkeys = Object.keys(archiveDevice);\nfor (var ii = 0; ii < keys.length; ++ii)\n{\n    if (archiveDevice[keys[ii]].hasOwnProperty('type'))\n    {\n        \n        archiveDevice[keys[ii]] = JSON.parse(JSON.stringify(msg.device[keys[ii]].value));\n    }\n}\narchiveMsg = {topic:'archiveData',payload: archiveDevice};\nvar updateDeviceMsg = \n{\n    topic:'updateDevice',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn [updateDeviceMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1330,
        "y": 1360,
        "wires": [
            [
                "404e4d24.8cce14"
            ],
            [
                "ca2c2a9f.1f6738"
            ]
        ]
    },
    {
        "id": "fec4a75b.95ea48",
        "type": "switch",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blinky-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-stepper",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-power-relay",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-shiver",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-shaker",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-thermo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "solar-regulator",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-cosmic-interval",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-relay-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-env",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-ssr-bake",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-wind",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-DS18B20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blinky-turnstile",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nb-freezer-mon",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "ee4c177c.2435b8"
            ],
            [
                "7005b751.8e0cf8"
            ],
            [
                "7005b751.8e0cf8"
            ]
        ]
    },
    {
        "id": "ad3cb7fa.59db58",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Filter blinky-thermo-cam",
        "func": "if (msg.topic.split('/')[1] != 'blinky-thermo-cam') return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 1260,
        "wires": [
            [
                "7abde9ff.1c9608",
                "ced7c8c1.d693f8"
            ]
        ]
    },
    {
        "id": "404e4d24.8cce14",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "devices",
        "operation": "update",
        "x": 1620,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "ca2c2a9f.1f6738",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1630,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "d5ebd569.f06318",
        "type": "inject",
        "z": "ec67d8c2.3f3c98",
        "name": "Prune every 2 hours",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "240b25f5.bdaa0a"
            ]
        ]
    },
    {
        "id": "240b25f5.bdaa0a",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 430,
        "y": 1500,
        "wires": [
            [
                "f97be279.34dee"
            ]
        ]
    },
    {
        "id": "e1e78820.2c18f8",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 1020,
        "y": 1500,
        "wires": [
            [
                "91c6fd13.236f7"
            ]
        ]
    },
    {
        "id": "f97be279.34dee",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 1500,
        "wires": [
            [
                "e1e78820.2c18f8"
            ]
        ]
    },
    {
        "id": "91c6fd13.236f7",
        "type": "function",
        "z": "ec67d8c2.3f3c98",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var idevice = 0; idevice < numDevices; ++idevice)\n{\n    timeStampList[idevice] = msg.payload[idevice].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 1560,
        "wires": [
            [
                "32d106b5.a58a3a"
            ]
        ]
    },
    {
        "id": "32d106b5.a58a3a",
        "type": "mongodb3 in",
        "z": "ec67d8c2.3f3c98",
        "service": "_ext_",
        "configNode": "e2cece33.d4cad",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 1020,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "cffafdc2.0fd86",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-ssr-bake",
        "url": "/blinky-ssr-bake",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "43858e55.8ae79"
            ]
        ]
    },
    {
        "id": "43858e55.8ae79",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "6942f5cb.123dec"
            ]
        ]
    },
    {
        "id": "6942f5cb.123dec",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "3f21e1b7.b5c19e"
            ]
        ]
    },
    {
        "id": "9df77f6e.c22b9",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "7005b751.8e0cf8",
        "type": "switch",
        "z": "e17f7487.2a78e8",
        "name": "Check archiveData",
        "property": "payload.archiveData.value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "ee4c177c.2435b8"
            ]
        ]
    },
    {
        "id": "eae21d4c.75719",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/nb-freezer-mon/websocket",
        "server": "d61dce7c.c084a",
        "client": "",
        "x": 1060,
        "y": 760,
        "wires": []
    },
    {
        "id": "8c18e9cd.f40f08",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "nb-freezer-mon input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "95daa5b.a032558",
            "9c753d.85c14ac"
        ],
        "x": 895,
        "y": 760,
        "wires": [
            [
                "eae21d4c.75719"
            ]
        ]
    },
    {
        "id": "95daa5b.a032558",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "nb-freezer-mon mqtt",
        "links": [
            "8c18e9cd.f40f08"
        ],
        "x": 775,
        "y": 760,
        "wires": []
    },
    {
        "id": "9c753d.85c14ac",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "nb-freezer-mon-archive",
        "links": [
            "8c18e9cd.f40f08"
        ],
        "x": 1295,
        "y": 2560,
        "wires": []
    },
    {
        "id": "15c89f9b.d3839",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/nb-freezer-mon/websocket",
        "server": "d61dce7c.c084a",
        "client": "",
        "x": 150,
        "y": 1860,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "5dd3953a.394b0c",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/nb-freezer-mon",
        "url": "/nb-freezer-mon",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "938c8b71.011748"
            ]
        ]
    },
    {
        "id": "92324861.b31808",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'nb-freezer-mon';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "157890f8.7c825f"
            ]
        ]
    },
    {
        "id": "a0ddbade.d722e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "NB Freezer Monitor {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "cd6a41ff.3de9f"
            ]
        ]
    },
    {
        "id": "cd6a41ff.3de9f",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1000,
        "wires": [
            [
                "89c35dc9.5f5ca"
            ]
        ]
    },
    {
        "id": "89c35dc9.5f5ca",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n\n            if(device.freezerState.value == 0) $(\"#freezerStateId\").attr(\"src\",\"/img/yellowLight.png\");\n            if(device.freezerState.value == 1) $(\"#freezerStateId\").attr(\"src\",\"/img/greenLight.png\");\n            if(device.freezerState.value == 2) $(\"#freezerStateId\").attr(\"src\",\"/img/redLight.png\");\n\n            if(device.powerState.value == 0) $(\"#powerStateId\").attr(\"src\",\"/img/yellowLight.png\");\n            if(device.powerState.value == 1) $(\"#powerStateId\").attr(\"src\",\"/img/greenLight.png\");\n            if(device.powerState.value == 2) $(\"#powerStateId\").attr(\"src\",\"/img/redLight.png\");\n        }\n",
        "output": "str",
        "x": 720,
        "y": 1040,
        "wires": [
            [
                "5655da54.483754"
            ]
        ]
    },
    {
        "id": "96787fa6.0c0b4",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 1120,
        "wires": [
            [
                "b7d8a5b8.ea8448"
            ]
        ]
    },
    {
        "id": "75ead6d5.2e0ba8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 1200,
        "wires": [
            [
                "1ffdbc86.4dce23"
            ]
        ]
    },
    {
        "id": "2c06919f.fc8bde",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 1200,
        "wires": [
            [
                "fc4586b9.aaaa98"
            ]
        ]
    },
    {
        "id": "714de651.d1cdd8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1120,
        "wires": [
            [
                "9fc9a8ae.20c4d8"
            ]
        ]
    },
    {
        "id": "1ffdbc86.4dce23",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Freezer State</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height='70px' id='freezerStateId' />\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('freezerState')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Power State</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/yellowLight.png' height='70px' id='powerStateId' />\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('powerState')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "e0530b90.a3d248"
            ]
        ]
    },
    {
        "id": "157890f8.7c825f",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basicYellow.png",
        "output": "str",
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "a0ddbade.d722e8"
            ]
        ]
    },
    {
        "id": "7ef12ee9.691e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1080,
        "wires": [
            [
                "714de651.d1cdd8"
            ]
        ]
    },
    {
        "id": "b7d8a5b8.ea8448",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 1160,
        "wires": [
            [
                "75ead6d5.2e0ba8"
            ]
        ]
    },
    {
        "id": "9fc9a8ae.20c4d8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "2c06919f.fc8bde"
            ]
        ]
    },
    {
        "id": "e0530b90.a3d248",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 1040,
        "wires": [
            [
                "7ef12ee9.691e8"
            ]
        ]
    },
    {
        "id": "5655da54.483754",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['freezerState','powerState'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'State',\n                    titlefont       : {color: '#557a95'},\n                    tickfont        : {color: '#557a95'},\n                    gridcolor       : '#beceda',\n                    zerolinecolor   : '#beceda',\n                    linecolor       : '#beceda',\n                    range           :[-1,3]\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Freezer',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: '#557a95',\n                    size: 10,\n                    symbol: 'circle'\n                }        \n    \n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Power',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: '#f2a31f',\n                    size: 10,\n                    symbol: 'square'\n                }        \n         \n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] + 0.05 ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]] - 0.00 ;\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 1080,
        "wires": [
            [
                "96787fa6.0c0b4"
            ]
        ]
    },
    {
        "id": "938c8b71.011748",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "4ffa071b.a30bd8"
            ]
        ]
    },
    {
        "id": "4ffa071b.a30bd8",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 1080,
        "wires": [
            [
                "92324861.b31808"
            ]
        ]
    },
    {
        "id": "fc4586b9.aaaa98",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "48c06b92.646de4",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/blinky-thermal-suite",
        "url": "/blinky-thermal-suite",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1380,
        "wires": [
            [
                "10ef2264.684eee"
            ]
        ]
    },
    {
        "id": "10ef2264.684eee",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Thermal Suite",
        "output": "str",
        "x": 450,
        "y": 1380,
        "wires": [
            [
                "de071160.f05ae"
            ]
        ]
    },
    {
        "id": "b77331df.01354",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n\n        var blinkyThermoVisible = false;\n        var blinkyThermoCamVisible = false;\n        var blinkySsrBakeVisible = false;\n        var blinkyPowerRelayVisible = false;\n        var blinkyEnvVisible = false;\n        var nbFreezerMonVisible = false;\n\n        function onDocumentReady()\n        {\n            $('#blinkySsrBake').hide();\n            $('#blinkyThermo').hide();\n            $('#blinkyThermoCam').hide();\n            $('#blinkyPowerRelay').hide();\n            $('#blinkyEnv').hide();\n            $('#nbFreezerMon').hide();\n            blinkySsrBakeVisible = false;\n            blinkyThermoVisible = false;\n            blinkyThermoCamVisible = false;\n            blinkyPowerRelayVisible = false;\n            blinkyEnvVisible = false;\n            nbFreezerMonVisible = false;\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function blinkyThermo()\n        {\n            if (blinkyThermoVisible)\n            {\n                $('#blinkyThermo').hide();\n                blinkyThermoVisible = false;\n                $('#blinkyThermoBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermo').show();\n                blinkyThermoVisible = true;\n                $('#blinkyThermoBtn').text('Close');\n            }\n        }\n        function blinkyThermoCam()\n        {\n            if (blinkyThermoCamVisible)\n            {\n                $('#blinkyThermoCam').hide();\n                blinkyThermoCamVisible = false;\n                $('#blinkyThermoCamBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermoCam').show();\n                blinkyThermoCamVisible = true;\n                $('#blinkyThermoCamBtn').text('Close');\n            }\n        }\n        function blinkySsrBake()\n        {\n            if (blinkySsrBakeVisible)\n            {\n                $('#blinkySsrBake').hide();\n                blinkySsrBakeVisible = false;\n                $('#blinkySsrBakeBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkySsrBake').show();\n                blinkySsrBakeVisible = true;\n                $('#blinkySsrBakeBtn').text('Close');\n            }\n        }\n        function blinkyPowerRelay()\n        {\n            if (blinkyPowerRelayVisible)\n            {\n                $('#blinkyPowerRelay').hide();\n                blinkyPowerRelayVisible = false;\n                $('#blinkyPowerRelayBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyPowerRelay').show();\n                blinkyPowerRelayVisible = true;\n                $('#blinkyPowerRelayBtn').text('Close');\n            }\n        }\n        function blinkyEnv()\n        {\n            if (blinkyEnvVisible)\n            {\n                $('#blinkyEnv').hide();\n                blinkyEnvVisible = false;\n                $('#blinkyEnvBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyEnv').show();\n                blinkyEnvVisible = true;\n                $('#blinkyEnvBtn').text('Close');\n            }\n        }\n        function nbFreezerMon()\n        {\n            if (nbFreezerMonVisible)\n            {\n                $('#nbFreezerMon').hide();\n                nbFreezerMonVisible = false;\n                $('#nbFreezerMonBtn').text('Open');\n            }\n            else\n            {\n                $('#nbFreezerMon').show();\n                nbFreezerMonVisible = true;\n                $('#nbFreezerMonBtn').text('Close');\n            }\n        }\n\n",
        "output": "str",
        "x": 980,
        "y": 1580,
        "wires": [
            [
                "7cc91c00.cc8964"
            ]
        ]
    },
    {
        "id": "cb9ebad8.3a5648",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" id=\"bodyContentId\" align=\"center\" >\n        <table width=\"100px\">\n            <tr style='padding-bottom: 10px;'>\n                <td  align=\"center\">\n                    <img src=\"/img/components/blinky-thermo-suite.png\" width=\"900px\" style='padding-bottom: 20px;'/>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermo}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkySsrBake}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyEnv}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermoCam}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyPowerRelay}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.nbFreezerMon}}}\n                    <hr>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "b77331df.01354"
            ]
        ]
    },
    {
        "id": "7cc91c00.cc8964",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1130,
        "y": 1580,
        "wires": []
    },
    {
        "id": "591cb92e.100cf8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyPowerRelay",
        "field": "payload.html.blinkyPowerRelay",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id='blinkyPowerRelayCard'>\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Power Relay</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyPowerRelayBtn\" onclick=\"blinkyPowerRelay()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id='blinkyPowerRelay'>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled  1200 Watt, 240 Volt relay with power meter</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-screen.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-pcb.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-flow.png\" height=\"99px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-schem.png\" height=\"193px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 1500,
        "wires": [
            [
                "7b9ecdb6.18a094"
            ]
        ]
    },
    {
        "id": "7b9ecdb6.18a094",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyEnv",
        "field": "payload.html.blinkyEnv",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyEnvCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Environment</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyEnvBtn\" onclick=\"blinkyEnv()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyEnv\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled enviroment monitor with three temperature monitors, one humidity detector, and one moisture monitor</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-env.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 600,
        "y": 1540,
        "wires": [
            [
                "eb50f49f.209c78"
            ]
        ]
    },
    {
        "id": "bbf9822c.411e8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkySsrBake",
        "field": "payload.html.blinkySsrBake",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkySsrBakeCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky SSR Bake</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkySsrBakeBtn\" onclick=\"blinkySsrBake()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkySsrBake\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled ultra-high-vacuum bake-out system with programmable temperature ramp and 2500 Watts of heater power. The system uses solid state switching to give temperature regulation to within 0.1 degrees</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-ssr-bake.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1460,
        "wires": [
            [
                "591cb92e.100cf8"
            ]
        ]
    },
    {
        "id": "de071160.f05ae",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermo",
        "field": "payload.html.blinkyThermo",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Thermo</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoBtn\" onclick=\"blinkyThermo()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermo\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wireless temperature monitor with two K-Type thermocouples(Range: -200C to 1200C, Resolution: 0.25C) and two solid state temperature monitors (Range: -55C to 125C, Resolution: 0.05C). 100 hours of operation with a 5Amp-hour battery</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1380,
        "wires": [
            [
                "fe171121.ee3a5"
            ]
        ]
    },
    {
        "id": "fe171121.ee3a5",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermoCam",
        "field": "payload.html.blinkyThermoCam",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCamCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Thermo Cam</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoCamBtn\" onclick=\"blinkyThermoCam()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermoCam\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">An infrared camera with cloud archiving capability and time-lapse features. Also equiped with its own wireless server for isolated operation</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo-cam.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 1420,
        "wires": [
            [
                "bbf9822c.411e8"
            ]
        ]
    },
    {
        "id": "7a8a2623.4a0d08",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.nbFreezerMon",
        "field": "payload.html.nbFreezerMon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"nbFreezerMonCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=nbFreezerMon'><span class='card-title'>NB Freezer Monitor</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"nbFreezerMonBtn\" onclick=\"nbFreezerMon()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"nbFreezerMon\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Remote Failure Monitor for New Brunswick HEF and G Freezers. Sends SMS alarms if a freezer temperature alarm, freezer power outage, or site power outage is detected. Alarm system is UPS powered and communicates over 4G providing continuous monitoring even during a complete site-wide power outage.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/nb-freezer-mon.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "a23f19d5.f894c8"
            ]
        ]
    },
    {
        "id": "eb50f49f.209c78",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.nbFreezerMon",
        "field": "payload.html.nbFreezerMon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"nbFreezerMonCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>NB Freezer Monitor</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"nbFreezerMonBtn\" onclick=\"nbFreezerMon()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"nbFreezerMon\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Remote Failure Monitor for New Brunswick HEF and G Freezers. Sends SMS alarms if a freezer temperature alarm, freezer power outage, or site power outage is detected. Alarm system is UPS powered and communicates over 4G providing continuous monitoring even during a complete site-wide power outage.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/nb-freezer-mon.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1580,
        "wires": [
            [
                "cb9ebad8.3a5648"
            ]
        ]
    },
    {
        "id": "3d5b02e.d3414fe",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-wind/websocket",
        "server": "c1211ec2.5887d",
        "client": "",
        "x": 1040,
        "y": 820,
        "wires": []
    },
    {
        "id": "435b9182.cc3ac",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky wind input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "304b3835.9b6918",
            "6d200160.afc65"
        ],
        "x": 895,
        "y": 820,
        "wires": [
            [
                "3d5b02e.d3414fe"
            ]
        ]
    },
    {
        "id": "304b3835.9b6918",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-wind mqtt",
        "links": [
            "435b9182.cc3ac",
            "4c1a483.bd61eb8",
            "1a07dfbc.75c78",
            "b5c8eac4.7c3928",
            "cdf75a81.2fb1a8",
            "f42dd5f2.45fce8",
            "f5fe39ed.3730c8"
        ],
        "x": 775,
        "y": 820,
        "wires": []
    },
    {
        "id": "6d200160.afc65",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-wind-archive",
        "links": [
            "435b9182.cc3ac",
            "4c1a483.bd61eb8",
            "1a07dfbc.75c78",
            "b5c8eac4.7c3928",
            "cdf75a81.2fb1a8",
            "f42dd5f2.45fce8",
            "f5fe39ed.3730c8"
        ],
        "x": 1295,
        "y": 2600,
        "wires": []
    },
    {
        "id": "35a68632.eb7a7a",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-wind/websocket",
        "server": "c1211ec2.5887d",
        "client": "",
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "732e88e1.e94a48",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-wind';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "a44ee69e.63d478"
            ]
        ]
    },
    {
        "id": "98640a4b.e76978",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Wind {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 1440,
        "wires": [
            [
                "2f3fee61.d28812"
            ]
        ]
    },
    {
        "id": "a44ee69e.63d478",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "windYellow.png",
        "output": "str",
        "x": 390,
        "y": 1400,
        "wires": [
            [
                "98640a4b.e76978"
            ]
        ]
    },
    {
        "id": "2f3fee61.d28812",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Speed (m/S)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Temp. (C)',\n            trace2Color : '#f2a31f',\n            trace2GridColor : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n",
        "output": "str",
        "x": 710,
        "y": 1360,
        "wires": [
            [
                "52bedb42.02ae24"
            ]
        ]
    },
    {
        "id": "4b374fc0.a6da2",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 720,
        "y": 1560,
        "wires": [
            [
                "5bc90a6b.dab404"
            ]
        ]
    },
    {
        "id": "2b06249e.f2687c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.horzbarWidget}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 700,
        "y": 1640,
        "wires": [
            [
                "b895074f.0e8218"
            ]
        ]
    },
    {
        "id": "359d6cac.22d1c4",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.temperatureBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.windSpeedGauge}}}\n            </div>\n        </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 1640,
        "wires": [
            [
                "e3ade4.6b38622"
            ]
        ]
    },
    {
        "id": "b98af74e.69d578",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1560,
        "wires": [
            [
                "e7a77ed7.85e4a"
            ]
        ]
    },
    {
        "id": "d7d8f4b7.c679e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 1520,
        "wires": [
            [
                "b98af74e.69d578"
            ]
        ]
    },
    {
        "id": "5bc90a6b.dab404",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 710,
        "y": 1600,
        "wires": [
            [
                "2b06249e.f2687c"
            ]
        ]
    },
    {
        "id": "e7a77ed7.85e4a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 1600,
        "wires": [
            [
                "359d6cac.22d1c4"
            ]
        ]
    },
    {
        "id": "d9c5439.0b2c2c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#windSpeed').text(getDirectionText(device.windDirection1.value) + ': '  + device.windSpeed.value.toFixed(1) + ' m/S');\n            $('#windSpeed1').text(getDirectionText(device.windDirection1.value) + ': '  + device.windSpeed1.value.toFixed(1) + ' m/S');\n            $('#windSpeed2').text(getDirectionText(device.windDirection2.value) + ': '  + device.windSpeed2.value.toFixed(1) + ' m/S');\n            $('#gusts').text(getDirectionText(device.windDirection2.value) + ': '  + device.gusts.value.toFixed(1) + ' m/S');\n            $('#temperature').text(device.temperature.value.toFixed(1) + ' C');\n            $('#battery').text(device.vbat.value + ' V');\n            $('#lora').text(device.lora.value + ' dBm');\n            var wd = device.windDirection1.value;\n\n            var windSpeedGaugeConfig = \n                {\n                    lolo            : device.windSpeed.alarm.limits.lolo, \n                    low             : device.windSpeed.alarm.limits.low, \n                    high            : device.windSpeed.alarm.limits.high, \n                    hihi            : device.windSpeed.alarm.limits.hihi, \n                    value           : device.windSpeed.value.toFixed(1), \n                    unit            : device.windSpeed.unit, \n                    textsize        : 38,\n                    label           : getDirectionText(device.windDirection1.value), \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'windSpeedGaugePlot'\n                };\n            setGaugeWidget(windSpeedGaugeConfig);\n            var temperatureBarConfig = \n                {\n                    lolo            : device.temperature.alarm.limits.lolo, \n                    low             : device.temperature.alarm.limits.low, \n                    high            : device.temperature.alarm.limits.high, \n                    hihi            : device.temperature.alarm.limits.hihi, \n                    value           : device.temperature.value.toFixed(1), \n                    unit            : device.temperature.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#0000ff', \n                    mediumColor     : '#00ff00',\n                    highColor       : 'ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'temperatureBarPlot'\n                };\n            setHorzBarWidget(temperatureBarConfig);\n        }\n        function getDirectionText(wd)\n        {\n            var dirText = '';           \n            if ((  0.0 <= wd) && (wd <=  22.5)) dirText = 'N ';\n            if (( 22.5 <  wd) && (wd <=  67.5)) dirText = 'NE';\n            if (( 67.5 <  wd) && (wd <= 112.5)) dirText = 'E ';\n            if ((112.5 <  wd) && (wd <= 157.5)) dirText = 'SE';\n            if ((157.5 <  wd) && (wd <= 202.5)) dirText = 'S ';\n            if ((202.5 <  wd) && (wd <= 247.5)) dirText = 'SW';\n            if ((247.5 <  wd) && (wd <= 292.5)) dirText = 'W ';\n            if ((292.5 <  wd) && (wd <= 337.5)) dirText = 'NW';\n            if ((337.5 <  wd) && (wd <= 360.0)) dirText = 'N ';\n            return dirText;\n        }\n",
        "output": "str",
        "x": 740,
        "y": 1480,
        "wires": [
            [
                "47bb7096.61dc7"
            ]
        ]
    },
    {
        "id": "47bb7096.61dc7",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['windSpeed','windDirection1','windSpeed2','windDirection2','temperature'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right',\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                text: [],\n                textposition: 'left',\n                name: 'Speed',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace1Color, dash: 'dot'},\n                visible: true\n\n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                text: [],\n                textposition: 'left',\n                name: '10min Avg',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace1Color,width:3},\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Temp. (C)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color:  plotConfig.trace2Color,width:3},\n                visible: true\n\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace1.text[ii] = getDirectionText(archiveList[0].trace[ii][archiveList[0].device.attr[1]]) ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]] ;\n                trace2.text[ii] = getDirectionText(archiveList[0].trace[ii][archiveList[0].device.attr[3]]) ;\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[4]];\n            }\n            Plotly.newPlot('archiveChart', [trace1, trace2, trace3], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 710,
        "y": 1520,
        "wires": [
            [
                "4b374fc0.a6da2"
            ]
        ]
    },
    {
        "id": "b6eeabf9.dc65f8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1480,
        "wires": [
            [
                "d7d8f4b7.c679e8"
            ]
        ]
    },
    {
        "id": "e3ade4.6b38622",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1270,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6b4b9e60.0a68c",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-wind",
        "url": "/blinky-wind",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1360,
        "wires": [
            [
                "ff6be42.5001d18"
            ]
        ]
    },
    {
        "id": "ff6be42.5001d18",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 1400,
        "wires": [
            [
                "f42cb321.2f161"
            ]
        ]
    },
    {
        "id": "f42cb321.2f161",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 1440,
        "wires": [
            [
                "732e88e1.e94a48"
            ]
        ]
    },
    {
        "id": "52bedb42.02ae24",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = 'black'\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.textsize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.textsize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 730,
        "y": 1400,
        "wires": [
            [
                "505657ae.c39b88"
            ]
        ]
    },
    {
        "id": "b895074f.0e8218",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.windSpeedGauge",
        "field": "payload.html.windSpeedGauge",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Wind Speed</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"windSpeedButton\" onclick=\"editDevice('windSpeed2')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"windSpeedGaugePlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "bc0cfe81.654c6"
            ]
        ]
    },
    {
        "id": "505657ae.c39b88",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            valueColor = 'black';\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 740,
        "y": 1440,
        "wires": [
            [
                "d9c5439.0b2c2c"
            ]
        ]
    },
    {
        "id": "bc0cfe81.654c6",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.temperatureBar",
        "field": "payload.html.temperatureBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Temperature</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"temperatureButton\" onclick=\"editDevice('temperature')\" >Edit</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"temperatureBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "958816c5.19b398"
            ]
        ]
    },
    {
        "id": "958816c5.19b398",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='temperatureLabel' >Temperature</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='temperature' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"temperatureButton\" onclick=\"editDevice('temperature')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeedLabel' >Wind Speed</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"windSpeedButton\" onclick=\"editDevice('windSpeed')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeed1Label' >Wind Speed (2 min)</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed1' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"windSpeed1Button\" onclick=\"editDevice('windSpeed1')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeed2Label' >Wind Speed (10 min)</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed2' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"windSpeed2Button\" onclick=\"editDevice('windSpeed2')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='gustsLabel' >Gusts</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='gusts' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"gustsButton\" onclick=\"editDevice('gusts')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='batteryLabel' >Battery</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='battery' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"windSpeed2Button\" onclick=\"editDevice('vbat')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='loraLabel' >LoRa</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='lora' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                        <button class='btn btn-block card-button big-text' id=\"loraButton\" onclick=\"editDevice('lora')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1040,
        "y": 1440,
        "wires": [
            [
                "b6eeabf9.dc65f8"
            ]
        ]
    },
    {
        "id": "f3a188d1.6d9cd8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyWind",
        "field": "payload.html.blinkyWind",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyWindCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkyWind'><span class='card-title'>Blinky Wind</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyWindBtn\" onclick=\"blinkyWind()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyWind\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >An component of the Blinky-Lite system for rapid prototyping. Blinky Wind includes an interval counter for measuring wind speed, analog digital acquistion for wind direction, an an integrated subsystem DS18B20 for temperature measurement all placed in a hermitcally sealed enclosure for outdoor use.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-wind.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 1020,
        "wires": [
            [
                "1d999967.acd457"
            ]
        ]
    },
    {
        "id": "72684e1d.f92fe",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkySolarSystem",
        "field": "payload.html.blinkySolarSystem",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkySolarSystemCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><a href='/components?component=blinkySolarSystem'><span class='card-title'>Blinky Solar System</span></a></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkySolarSystemBtn\" onclick=\"blinkySolarSystem()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkySolarSystem\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Blinky Solar System is a distributed configuration controlling an 8kW home thermal solar system. Temperature differences between the remote solar panels and the basement water tanks triggers a water pump to circulate water through the panels to heat the house.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-solar-system.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 650,
        "y": 980,
        "wires": [
            [
                "f3a188d1.6d9cd8"
            ]
        ]
    },
    {
        "id": "a3294720.d3e8c8",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-DS18B20/websocket",
        "server": "fc576385.12f95",
        "client": "",
        "x": 1060,
        "y": 880,
        "wires": []
    },
    {
        "id": "8d0f331.1da14d",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky DS18B20 input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "a988b405.392318",
            "62fb9e33.02bff"
        ],
        "x": 895,
        "y": 880,
        "wires": [
            [
                "a3294720.d3e8c8"
            ]
        ]
    },
    {
        "id": "a988b405.392318",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-DS18B20 mqtt",
        "links": [
            "8d0f331.1da14d",
            "4c1a483.bd61eb8",
            "3f5e997d.8aa756",
            "416a2a7a.685b94",
            "6b2597a0.5798c8",
            "8643a67.20cf058",
            "f42dd5f2.45fce8",
            "f5fe39ed.3730c8"
        ],
        "x": 775,
        "y": 880,
        "wires": []
    },
    {
        "id": "2569df2b.b3dbf",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-DS18B20/websocket",
        "server": "fc576385.12f95",
        "client": "",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "62fb9e33.02bff",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-DS18B20-archive",
        "links": [
            "4c1a483.bd61eb8",
            "8d0f331.1da14d",
            "3f5e997d.8aa756",
            "6b2597a0.5798c8",
            "8643a67.20cf058",
            "f42dd5f2.45fce8",
            "f5fe39ed.3730c8"
        ],
        "x": 1295,
        "y": 2640,
        "wires": []
    },
    {
        "id": "a5d816c3.2759d8",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-DS18B20';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 2180,
        "wires": [
            [
                "e98ad3e0.249df"
            ]
        ]
    },
    {
        "id": "48d303b6.d8084c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky DS18B20 {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 2260,
        "wires": [
            [
                "f54f14f.dc7c9e8"
            ]
        ]
    },
    {
        "id": "e0f24e1c.1169a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 740,
        "y": 2220,
        "wires": [
            [
                "e5bdc4d6.98da58"
            ]
        ]
    },
    {
        "id": "f54f14f.dc7c9e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Temp-A (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Temp-B (C)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'temperatureStripChart'\n        };\n        let temperatureStripChart = new StripChart(plotConfig);\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n",
        "output": "str",
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "e0f24e1c.1169a"
            ]
        ]
    },
    {
        "id": "950b72f5.c6697",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 720,
        "y": 2340,
        "wires": [
            [
                "2de9d253.06695e"
            ]
        ]
    },
    {
        "id": "92999e11.fa07a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 700,
        "y": 2420,
        "wires": [
            [
                "a48451a8.d4bb6"
            ]
        ]
    },
    {
        "id": "2afaf45b.a53bac",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 2420,
        "wires": [
            [
                "7046d901.e55a88"
            ]
        ]
    },
    {
        "id": "33773f16.f49b8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2340,
        "wires": [
            [
                "3ad17ff5.48fd9"
            ]
        ]
    },
    {
        "id": "e98ad3e0.249df",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 390,
        "y": 2220,
        "wires": [
            [
                "48d303b6.d8084c"
            ]
        ]
    },
    {
        "id": "ed792a6f.1bde88",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 2300,
        "wires": [
            [
                "33773f16.f49b8"
            ]
        ]
    },
    {
        "id": "2de9d253.06695e",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 710,
        "y": 2380,
        "wires": [
            [
                "92999e11.fa07a"
            ]
        ]
    },
    {
        "id": "3ad17ff5.48fd9",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 2380,
        "wires": [
            [
                "2afaf45b.a53bac"
            ]
        ]
    },
    {
        "id": "2a069e05.c44ae2",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"temperatureStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2220,
        "wires": [
            [
                "69bd314a.0d7d6"
            ]
        ]
    },
    {
        "id": "a48451a8.d4bb6",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Temperature A</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='tempAId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('tempA')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Temperature B</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='tempBId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('tempB')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1040,
        "y": 2180,
        "wires": [
            [
                "2a069e05.c44ae2"
            ]
        ]
    },
    {
        "id": "e5bdc4d6.98da58",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            var tempA = device.tempA.value;\n            var tempB = device.tempB.value;\n            temperatureStripChart.addTracePoints(tempA, tempB);\n            $('#tempAId').text(tempA);\n            $('#tempBId').text(tempB);\n        }\n",
        "output": "str",
        "x": 740,
        "y": 2260,
        "wires": [
            [
                "4e088d42.5d8f44"
            ]
        ]
    },
    {
        "id": "4e088d42.5d8f44",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['tempA','tempB'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines'\n\n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines'\n\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 710,
        "y": 2300,
        "wires": [
            [
                "950b72f5.c6697"
            ]
        ]
    },
    {
        "id": "69bd314a.0d7d6",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2260,
        "wires": [
            [
                "ed792a6f.1bde88"
            ]
        ]
    },
    {
        "id": "7046d901.e55a88",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1290,
        "y": 2420,
        "wires": []
    },
    {
        "id": "db9d883c.ac8388",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-DS18B20",
        "url": "/blinky-DS18B20",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2180,
        "wires": [
            [
                "c60ceb50.56e168"
            ]
        ]
    },
    {
        "id": "c60ceb50.56e168",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 2220,
        "wires": [
            [
                "5c23231.a0fd0dc"
            ]
        ]
    },
    {
        "id": "5c23231.a0fd0dc",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 2260,
        "wires": [
            [
                "a5d816c3.2759d8"
            ]
        ]
    },
    {
        "id": "3be76d54.182da2",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-turnstile/websocket",
        "server": "417794ff.011e5c",
        "client": "",
        "x": 1050,
        "y": 940,
        "wires": []
    },
    {
        "id": "b7a01bb7.010988",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky turnstile input socket",
        "links": [
            "1c641721.29eb79",
            "1e710224.de723e",
            "224d9b05.f92104",
            "9b3bde89.b6f61",
            "a91cdcd0.61dc6"
        ],
        "x": 895,
        "y": 940,
        "wires": [
            [
                "3be76d54.182da2"
            ]
        ]
    },
    {
        "id": "1c641721.29eb79",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-turnstile mqtt",
        "links": [
            "4c1a483.bd61eb8",
            "b7a01bb7.010988",
            "8f53ee48.a6ce7",
            "416a2a7a.685b94",
            "8643a67.20cf058"
        ],
        "x": 775,
        "y": 940,
        "wires": []
    },
    {
        "id": "9b3bde89.b6f61",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-turnstile-archive",
        "links": [
            "4c1a483.bd61eb8",
            "b7a01bb7.010988",
            "8f53ee48.a6ce7",
            "416a2a7a.685b94",
            "8643a67.20cf058"
        ],
        "x": 1295,
        "y": 2680,
        "wires": []
    },
    {
        "id": "564c3db7.9dbbe4",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-turnstile/websocket",
        "server": "417794ff.011e5c",
        "client": "",
        "x": 150,
        "y": 2040,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "43f8cd9a.28a164",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-turnstile';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 2520,
        "wires": [
            [
                "dcd71daf.9206f"
            ]
        ]
    },
    {
        "id": "508f3d6a.e25124",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Turnstile {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 2600,
        "wires": [
            [
                "62ee14c0.02191c"
            ]
        ]
    },
    {
        "id": "6dd3b4fd.dac78c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n                        rangemode       : 'nonnegative',\n                        autorange       : true\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n                        rangemode       : 'nonnegative',\n                        autorange       : true\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n\n                };\n            }\n            addTracePoints(trace1Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 740,
        "y": 2560,
        "wires": [
            [
                "8b509e64.8778a"
            ]
        ]
    },
    {
        "id": "62ee14c0.02191c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Number of Turns',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Number of Turns',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'turnstileStripChart'\n        };\n        let turnstileStripChart = new StripChart(plotConfig);\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n",
        "output": "str",
        "x": 710,
        "y": 2520,
        "wires": [
            [
                "6dd3b4fd.dac78c"
            ]
        ]
    },
    {
        "id": "30229a7f.0e58d6",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 720,
        "y": 2680,
        "wires": [
            [
                "b499ac6b.e99c9"
            ]
        ]
    },
    {
        "id": "53036004.4c8bf",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 700,
        "y": 2760,
        "wires": [
            [
                "9395cf88.2b44b"
            ]
        ]
    },
    {
        "id": "a632638a.811e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 2760,
        "wires": [
            [
                "5daad618.7dfe78"
            ]
        ]
    },
    {
        "id": "ad5214b1.1988f8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2680,
        "wires": [
            [
                "7a86e327.c31c7c"
            ]
        ]
    },
    {
        "id": "dcd71daf.9206f",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "turnstileYellow.png",
        "output": "str",
        "x": 390,
        "y": 2560,
        "wires": [
            [
                "508f3d6a.e25124"
            ]
        ]
    },
    {
        "id": "5d81ea58.ac3574",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 2640,
        "wires": [
            [
                "ad5214b1.1988f8"
            ]
        ]
    },
    {
        "id": "b499ac6b.e99c9",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 710,
        "y": 2720,
        "wires": [
            [
                "53036004.4c8bf"
            ]
        ]
    },
    {
        "id": "7a86e327.c31c7c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 2720,
        "wires": [
            [
                "a632638a.811e8"
            ]
        ]
    },
    {
        "id": "2acc69ca.7bb6b6",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"turnstileStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2560,
        "wires": [
            [
                "bee80925.047498"
            ]
        ]
    },
    {
        "id": "9395cf88.2b44b",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Position</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='positionId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('position')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Number of Turns</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='numTurnsId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('numTurns')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60%><button class='btn btn-block big-text' style=\"background-color:var(--color1); color:var(--color5);\" id=\"resetTurnsButton\" onclick=\"resetTurns()\" >Reset Counter</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 1040,
        "y": 2520,
        "wires": [
            [
                "2acc69ca.7bb6b6"
            ]
        ]
    },
    {
        "id": "8b509e64.8778a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            turnstileStripChart.addTracePoints(device.numTurns.value);\n            $('#positionId').text(device.position.value);\n            $('#numTurnsId').text(device.numTurns.value);\n        }\n        function resetTurns()\n        {\n            device.resetTurns.value = 1;\n            sendSetting();\n            $('#resetTurnsButton').css(\"background-color\", \"var(--color5)\");\n            $('#resetTurnsButton').css(\"color\", \"var(--color1)\");\n            setTimeout(function()\n            { \n                $('#resetTurnsButton').css(\"background-color\", \"var(--color1)\");\n                $('#resetTurnsButton').css(\"color\", \"var(--color5)\");\n            }, 1000);\n        }\n",
        "output": "str",
        "x": 740,
        "y": 2600,
        "wires": [
            [
                "a7d92f7e.910c8"
            ]
        ]
    },
    {
        "id": "a7d92f7e.910c8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['numTurns'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right'\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            this.trace1 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace1Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'markers',\n                marker: {\n                    color: this.plotConfig.trace1Color,\n                    size: 10,\n                    symbol: 'circle'\n                }        \n\n            };\n            this.trace2 = \n            {\n                x: [],\n                y: [],\n                name: plotConfig.trace2Title,\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines'\n\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n            }\n\n\n            Plotly.newPlot('archiveChart', [trace1], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 710,
        "y": 2640,
        "wires": [
            [
                "30229a7f.0e58d6"
            ]
        ]
    },
    {
        "id": "bee80925.047498",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 2600,
        "wires": [
            [
                "5d81ea58.ac3574"
            ]
        ]
    },
    {
        "id": "5daad618.7dfe78",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1310,
        "y": 2760,
        "wires": []
    },
    {
        "id": "9e168294.ee2aa",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-turnstile",
        "url": "/blinky-turnstile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2520,
        "wires": [
            [
                "31f9c64c.f8a85a"
            ]
        ]
    },
    {
        "id": "31f9c64c.f8a85a",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 2560,
        "wires": [
            [
                "f0ad12be.93562"
            ]
        ]
    },
    {
        "id": "f0ad12be.93562",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 2600,
        "wires": [
            [
                "43f8cd9a.28a164"
            ]
        ]
    },
    {
        "id": "8f7b8592.335628",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/people",
        "url": "/people",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1220,
        "wires": [
            [
                "cbcc05f5.6652d8"
            ]
        ]
    },
    {
        "id": "cbcc05f5.6652d8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "People",
        "output": "str",
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "5067c5d2.7acc5c"
            ]
        ]
    },
    {
        "id": "734e0670.7ffab8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        var hullaVisible = false;\n        var mcginnisVisible = false;\n\n        function onDocumentReady()\n        {\n            $('#hullaCardBody').hide();\n            $('#mcginnisCardBody').hide();\n            hullaVisible = false;\n            mcginnisVisible = false;\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function hulla()\n        {\n            if (hullaVisible)\n            {\n                $('#hullaCardBody').hide();\n                hullaVisible = false;\n                $('#hullaBtn').text('More...');\n            }\n            else\n            {\n                $('#hullaCardBody').show();\n                hullaVisible = true;\n                $('#hullaBtn').text('Close');\n            }\n        }\n        function mcginnis()\n        {\n            if (mcginnisVisible)\n            {\n                $('#mcginnisCardBody').hide();\n                mcginnisVisible = false;\n                $('#mcginnisBtn').text('More...');\n            }\n            else\n            {\n                $('#mcginnisCardBody').show();\n                mcginnisVisible = true;\n                $('#mcginnisBtn').text('Close');\n            }\n        }\n\n",
        "output": "str",
        "x": 480,
        "y": 1220,
        "wires": [
            [
                "82289b42.806a58"
            ]
        ]
    },
    {
        "id": "5067c5d2.7acc5c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" align=\"center\">\n        <table width=\"100px\">\n            <tr style='padding-bottom: 10px;'>\n                <td>\n                    <div class='card' >\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky-Lite Monitoring and Controls</span></td>\n                                <td  width='100px'></td>\n                            </tr>\n                        </table>\n                        <div class='card-body'>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                    <p class=\"card-text\" >We are spin-off from MaxIV and the European Spallation Source accelerator laboratories in Lund, Sweden.</p>\n                                    <ul class=\"card-text\">\n                                        <li>We have over forty years of combined experience working at big science facilities.</li>\n                                        <li>Our expertise covers a wide spectrum of fields from electronics design, RF engineering, renewable energy, ultra-high vacuum technology to software programming, cloud computing, machine learning, and web application design.</li>\n                                    </ul>                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div class='card' id=\"hullaCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='400px' align='left'><span class='card-title'>Georg Hulla Ph.D</span></td>\n                                <td  width='400px' align='left'><span class='card-text' style=\"color:white\">georg.hulla@bl-mc.se</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"hullaBtn\" onclick=\"hulla()\">More...</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"hullaCardBody\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                <table width='850px'>\n                                    <tr>\n                                        <td  width='250px'><img src=\"/img/founders/hulla.jpg\" width=\"250px\"/></td>\n                                        <td  width='600px' align='left' style='padding-left: 20px;'>\n                                            <span class=\"card-text\">Georg Hulla is one of the Co-founders of BL Monitor & Control AB and currently works at ESS in Lund.</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                </div>\n                            </div>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                    <ul class=\"card-text\" >\n                                        <li>He has obtained his PhD in applied physics from the Vienna University of Technology for work related to dynamic vacuum effects in the LHC (CERN) in 2008.</li>\n                                        <li>Between 2009-2013 he was responsible for the design, procurement, installation and testing of the vacuum system of MedAustron, a hadron therapy center built in Austria in collaboration with CERN.</li>\n                                        <li>In 2013 he started at ESS as vacuum systems engineer and was later responsible for in-kind coordination of NCL systems from Italy, France and Spain.</li>\n                                        <li>Between 2017-2019 he did an executive Master in Business Administration at the EFL Business School in Lund/Sweden.</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <div class='card' id=\"mcginnisCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='400px' align='left'><span class='card-title'>David McGinnis Ph.D</span></td>\n                                <td  width='400px' align='left'><span class='card-text' style=\"color:white\">david.mcginnis@bl-mc.se</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"mcginnisBtn\" onclick=\"mcginnis()\">More...</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"mcginnisCardBody\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                <table width='850px'>\n                                    <tr>\n                                        <td  width='250px'><img src=\"/img/founders/mcginnis2.png\" width=\"250px\"/></td>\n                                        <td  width='600px' align='left' style='padding-left: 20px;'>\n                                            <span class=\"card-text\" >David McGinnis is one of the Co-founders of BL Monitor & Control AB and currently works at MaxIV in Lund.</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                </div>\n                            </div>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                    <ul class=\"card-text\" >\n                                        <li>He has obtained his PhD in electrical engineering from the University of Wisconsin-Madison for work in superconducting millimeter-wave devices.</li>\n                                        <li>Between 1988-2011 he worked at Fermi National Laboratory specializing in the stochastic cooling of anti-protons. He was made a fellow in the American Physical Society for his contributions to the field of particle accelerators</li>\n                                        <li>From 2011-2018 he worked at ESS as the RF group leader and chief engineer for the ESS Linac.</li>\n                                        <li>In 2018 he started work at Max IV laboratory as the RF group leader. He developed the Mode-0 beam stabilization system based on the Blinky-Lite control platform which led to the doubling of the MaxIV beam intensity.</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsField.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "734e0670.7ffab8"
            ]
        ]
    },
    {
        "id": "82289b42.806a58",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 650,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c7eaf271.e8dc7",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/blinky-medical-suite",
        "url": "/blinky-medical-suite",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "8e4a650b.cc1a98"
            ]
        ]
    },
    {
        "id": "8e4a650b.cc1a98",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Medical Suite",
        "output": "str",
        "x": 450,
        "y": 1660,
        "wires": [
            [
                "a86b5d13.a9d13"
            ]
        ]
    },
    {
        "id": "62244c57.a7db64",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n\n        var blinkyFeverVisible = false;\n        var blinkyShiverVisible = false;\n        var blinkyShakerVisible = false;\n        var blinkyThermoVisible = false;\n        var blinkyThermoCamVisible = false;\n        var nbFreezerMonVisible = false;\n\n        function onDocumentReady()\n        {\n            $('#blinkyFever').hide();\n            $('#blinkyShiver').hide();\n            $('#blinkyShaker').hide();\n            $('#blinkyThermo').hide();\n            $('#blinkyThermoCam').hide();\n            $('#nbFreezerMon').hide();\n            blinkyFeverVisible = false;\n            blinkyShiverVisible = false;\n            blinkyShakerVisible = false;\n            blinkyThermoVisible = false;\n            blinkyThermoCamVisible = false;\n            nbFreezerMonVisible = false;\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function blinkyFever()\n        {\n            if (blinkyFeverVisible)\n            {\n                $('#blinkyFever').hide();\n                blinkyFeverVisible = false;\n                $('#blinkyFeverBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyFever').show();\n                blinkyFeverVisible = true;\n                $('#blinkyFeverBtn').text('Close');\n            }\n        }\n        function blinkyShiver()\n        {\n            if (blinkyShiverVisible)\n            {\n                $('#blinkyShiver').hide();\n                blinkyShiverVisible = false;\n                $('#blinkyShiverBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyShiver').show();\n                blinkyShiverVisible = true;\n                $('#blinkyShiverBtn').text('Close');\n            }\n        }\n        function blinkyShaker()\n        {\n            if (blinkyShakerVisible)\n            {\n                $('#blinkyShaker').hide();\n                blinkyShakerVisible = false;\n                $('#blinkyShakerBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyShaker').show();\n                blinkyShakerVisible = true;\n                $('#blinkyShakerBtn').text('Close');\n            }\n        }\n        function blinkyThermo()\n        {\n            if (blinkyThermoVisible)\n            {\n                $('#blinkyThermo').hide();\n                blinkyThermoVisible = false;\n                $('#blinkyThermoBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermo').show();\n                blinkyThermoVisible = true;\n                $('#blinkyThermoBtn').text('Close');\n            }\n        }\n        function blinkyThermoCam()\n        {\n            if (blinkyThermoCamVisible)\n            {\n                $('#blinkyThermoCam').hide();\n                blinkyThermoCamVisible = false;\n                $('#blinkyThermoCamBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermoCam').show();\n                blinkyThermoCamVisible = true;\n                $('#blinkyThermoCamBtn').text('Close');\n            }\n        }\n        function nbFreezerMon()\n        {\n            if (nbFreezerMonVisible)\n            {\n                $('#nbFreezerMon').hide();\n                nbFreezerMonVisible = false;\n                $('#nbFreezerMonBtn').text('Open');\n            }\n            else\n            {\n                $('#nbFreezerMon').show();\n                nbFreezerMonVisible = true;\n                $('#nbFreezerMonBtn').text('Close');\n            }\n        }\n\n",
        "output": "str",
        "x": 980,
        "y": 1860,
        "wires": [
            [
                "b8dbcf31.afcc6"
            ]
        ]
    },
    {
        "id": "424bc75d.08e488",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" id=\"bodyContentId\" align=\"center\" >\n        <table width=\"100px\">\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyFever}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyShiver}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyShaker}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.nbFreezerMon}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermo}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermoCam}}}\n                    <hr>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 1860,
        "wires": [
            [
                "62244c57.a7db64"
            ]
        ]
    },
    {
        "id": "b8dbcf31.afcc6",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1130,
        "y": 1860,
        "wires": []
    },
    {
        "id": "506f03f8.1b42bc",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermo",
        "field": "payload.html.blinkyThermo",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Thermo</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoBtn\" onclick=\"blinkyThermo()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermo\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wireless temperature monitor with two K-Type thermocouples(Range: -200C to 1200C, Resolution: 0.25C) and two solid state temperature monitors (Range: -55C to 125C, Resolution: 0.05C). 100 hours of operation with a 5Amp-hour battery</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1780,
        "wires": [
            [
                "261c719.c9e4c8e"
            ]
        ]
    },
    {
        "id": "261c719.c9e4c8e",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermoCam",
        "field": "payload.html.blinkyThermoCam",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCamCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Thermo Cam</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoCamBtn\" onclick=\"blinkyThermoCam()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermoCam\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">An infrared camera with cloud archiving capability and time-lapse features. Also equiped with its own wireless server for isolated operation</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo-cam.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 1820,
        "wires": [
            [
                "98154b8.15f15b8"
            ]
        ]
    },
    {
        "id": "98154b8.15f15b8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.nbFreezerMon",
        "field": "payload.html.nbFreezerMon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"nbFreezerMonCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>NB Freezer Monitor</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"nbFreezerMonBtn\" onclick=\"nbFreezerMon()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"nbFreezerMon\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Remote Failure Monitor for New Brunswick HEF and G Freezers. Sends SMS alarms if a freezer temperature alarm, freezer power outage, or site power outage is detected. Alarm system is UPS powered and communicates over 4G providing continuous monitoring even during a complete site-wide power outage.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/nb-freezer-mon.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1860,
        "wires": [
            [
                "424bc75d.08e488"
            ]
        ]
    },
    {
        "id": "a86b5d13.a9d13",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyShiver",
        "field": "payload.html.blinkyShiver",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyShiverCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Shiver</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyShiverBtn\" onclick=\"blinkyShiver()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyShiver\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled non-invasive vibration detector with a sensitivity of 2um and a bandwidth of 250 Hz using ultrasonic technology</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shiver/blinky-shiver-screen.png\" height=\"341px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shiver/blinky-shiver-pcb.png\" height=\"341px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-shiver/blinky-shiver-flow.png\" height=\"119px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-shiver/blinky-shiver-schem.png\" height=\"222px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1660,
        "wires": [
            [
                "c9b63a5b.de0708"
            ]
        ]
    },
    {
        "id": "c9b63a5b.de0708",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyShaker",
        "field": "payload.html.blinkyShaker",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyShakerCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Shaker</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyShakerBtn\" onclick=\"blinkyShaker()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyShaker\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled test bench for the Blinky Shiver</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shaker-screen.png\" height=\"215px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shiver-spec.png\" height=\"215x\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-shaker/blinky-shaker-flow.png\" height=\"215px\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 1700,
        "wires": [
            [
                "fc1c753b.8628d8"
            ]
        ]
    },
    {
        "id": "fc1c753b.8628d8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyFever",
        "field": "payload.html.blinkyFever",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyFeverCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Fever</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyFeverBtn\" onclick=\"blinkyFever()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyFever\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled fever detector using infra-red technology</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:1px;padding-left:1px;padding-right:1px;\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"left\">\n                                            <img src=\"/img/components/blinky-fever/dianaFlip.png\" height=\"287px\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-fever/monitor.png\" height=\"287px\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-fever/gizmo.png\" height=\"287px\"/>\n                                        </td>\n                                        <td align=\"right\">\n                                            <img src=\"/img/components/blinky-fever/androidControl.png\" height=\"287px\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 600,
        "y": 1740,
        "wires": [
            [
                "506f03f8.1b42bc"
            ]
        ]
    },
    {
        "id": "4e48e4bd.02ccfc",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/blinky-env-suite",
        "url": "/blinky-env-suite",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1940,
        "wires": [
            [
                "92fd1e6.e8673e"
            ]
        ]
    },
    {
        "id": "92fd1e6.e8673e",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Environment Suite",
        "output": "str",
        "x": 450,
        "y": 1940,
        "wires": [
            [
                "63340e51.d61d9"
            ]
        ]
    },
    {
        "id": "9d5757b4.c32b58",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n\n        var blinkySolarSystemVisible = false;\n        var blinkyWindVisible = false;\n        var blinkyCosmicIntervalVisible = false;\n        var blinkyPowerRelayVisible = false;\n        var blinkyEnvVisible = false;\n        var blinkyThermoVisible = false;\n        var blinkyStepperVisible = false;\n\n        function onDocumentReady()\n        {\n            $('#blinkySolarSystem').hide();\n            $('#blinkyWind').hide();\n            $('#blinkyCosmicInterval').hide();\n            $('#blinkyPowerRelay').hide();\n            $('#blinkyEnv').hide();\n            $('#blinkyThermo').hide();\n            $('#blinkyStepper').hide();\n            blinkySolarSystemVisible = false;\n            blinkyWindVisible = false;\n            blinkyCosmicIntervalVisible = false;\n            blinkyPowerRelayVisible = false;\n            blinkyEnvVisible = false;\n            blinkyThermoVisible = false;\n            blinkyStepperVisible = false;\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function blinkySolarSystem()\n        {\n            if (blinkySolarSystemVisible)\n            {\n                $('#blinkySolarSystem').hide();\n                blinkySolarSystemVisible = false;\n                $('#blinkySolarSystemBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkySolarSystem').show();\n                blinkySolarSystemVisible = true;\n                $('#blinkySolarSystemBtn').text('Close');\n            }\n        }\n        function blinkyWind()\n        {\n            if (blinkyWindVisible)\n            {\n                $('#blinkyWind').hide();\n                blinkyWindVisible = false;\n                $('#blinkyWindBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyWind').show();\n                blinkyWindVisible = true;\n                $('#blinkyWindBtn').text('Close');\n            }\n        }\n        function blinkyCosmicInterval()\n        {\n            if (blinkyCosmicIntervalVisible)\n            {\n                $('#blinkyCosmicInterval').hide();\n                blinkyCosmicIntervalVisible = false;\n                $('#blinkyCosmicIntervalBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyCosmicInterval').show();\n                blinkyCosmicIntervalVisible = true;\n                $('#blinkyCosmicIntervalBtn').text('Close');\n            }\n        }\n        function blinkyPowerRelay()\n        {\n            if (blinkyPowerRelayVisible)\n            {\n                $('#blinkyPowerRelay').hide();\n                blinkyPowerRelayVisible = false;\n                $('#blinkyPowerRelayBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyPowerRelay').show();\n                blinkyPowerRelayVisible = true;\n                $('#blinkyPowerRelayBtn').text('Close');\n            }\n        }\n        function blinkyEnv()\n        {\n            if (blinkyEnvVisible)\n            {\n                $('#blinkyEnv').hide();\n                blinkyEnvVisible = false;\n                $('#blinkyEnvBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyEnv').show();\n                blinkyEnvVisible = true;\n                $('#blinkyEnvBtn').text('Close');\n            }\n        }\n        function blinkyThermo()\n        {\n            if (blinkyThermoVisible)\n            {\n                $('#blinkyThermo').hide();\n                blinkyThermoVisible = false;\n                $('#blinkyThermoBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyThermo').show();\n                blinkyThermoVisible = true;\n                $('#blinkyThermoBtn').text('Close');\n            }\n        }\n        function blinkyStepper()\n        {\n            if (blinkyStepperVisible)\n            {\n                $('#blinkyStepper').hide();\n                blinkyStepperVisible = false;\n                $('#blinkyStepperBtn').text('Open');\n            }\n            else\n            {\n                $('#blinkyStepper').show();\n                blinkyStepperVisible = true;\n                $('#blinkyStepperBtn').text('Close');\n            }\n        }\n\n",
        "output": "str",
        "x": 980,
        "y": 2180,
        "wires": [
            [
                "72daa033.9a1f"
            ]
        ]
    },
    {
        "id": "f60bbec4.f0d95",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" id=\"bodyContentId\" align=\"center\" >\n        <table width=\"100px\">\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkySolarSystem}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyWind}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyCosmicInterval}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyEnv}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyPowerRelay}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyThermo}}}\n                    <hr>\n                </td>\n            </tr>\n            <tr style='padding-bottom: 10px;'>\n                <td>\n{{{payload.html.blinkyStepper}}}\n                    <hr>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "9d5757b4.c32b58"
            ]
        ]
    },
    {
        "id": "72daa033.9a1f",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1130,
        "y": 2180,
        "wires": []
    },
    {
        "id": "97576627.751dd8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyThermo",
        "field": "payload.html.blinkyThermo",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyThermoCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Thermo</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyThermoBtn\" onclick=\"blinkyThermo()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyThermo\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wireless temperature monitor with two K-Type thermocouples(Range: -200C to 1200C, Resolution: 0.25C) and two solid state temperature monitors (Range: -55C to 125C, Resolution: 0.05C). 100 hours of operation with a 5Amp-hour battery</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-thermo.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 2140,
        "wires": [
            [
                "6a6deb3e.70bf94"
            ]
        ]
    },
    {
        "id": "380b2394.72351c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyEnv",
        "field": "payload.html.blinkyEnv",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyEnvCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Environment</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyEnvBtn\" onclick=\"blinkyEnv()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyEnv\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled enviroment monitor with three temperature monitors, one humidity detector, and one moisture monitor</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-env.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 600,
        "y": 2100,
        "wires": [
            [
                "97576627.751dd8"
            ]
        ]
    },
    {
        "id": "c1583d96.27598",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyPowerRelay",
        "field": "payload.html.blinkyPowerRelay",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id='blinkyPowerRelayCard'>\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Power Relay</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyPowerRelayBtn\" onclick=\"blinkyPowerRelay()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id='blinkyPowerRelay'>\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled  1200 Watt, 240 Volt relay with power meter</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-screen.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-power-relay/blinky-power-relay-pcb.png\" height=\"292px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-flow.png\" height=\"99px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-power-relay/blinky-power-relay-schem.png\" height=\"193px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 620,
        "y": 2060,
        "wires": [
            [
                "380b2394.72351c"
            ]
        ]
    },
    {
        "id": "e1c4e5aa.e06778",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyCosmicInterval",
        "field": "payload.html.blinkyCosmicInterval",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyCosmicIntervalCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Cosmic Interval</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyCosmicIntervalBtn\" onclick=\"blinkyCosmicInterval()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyCosmicInterval\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Wirelessly controlled ionizing radiation monitor based on a Geiger–Müller tube</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-cosmic-interval.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 2020,
        "wires": [
            [
                "c1583d96.27598"
            ]
        ]
    },
    {
        "id": "aa6c66d6.9a38e8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyWind",
        "field": "payload.html.blinkyWind",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyWindCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Wind</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyWindBtn\" onclick=\"blinkyWind()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyWind\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >A component of the Blinky-Lite system for rapid prototyping. Blinky Wind includes an interval counter for measuring wind speed, analog digital acquistion for wind direction, an an integrated subsystem DS18B20 for temperature measurement all placed in a hermitcally sealed enclosure for outdoor use.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-wind.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 600,
        "y": 1980,
        "wires": [
            [
                "e1c4e5aa.e06778"
            ]
        ]
    },
    {
        "id": "63340e51.d61d9",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkySolarSystem",
        "field": "payload.html.blinkySolarSystem",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkySolarSystemCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Solar System</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkySolarSystemBtn\" onclick=\"blinkySolarSystem()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkySolarSystem\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\" >Blinky Solar System is a distributed configuration controlling an 8kW home thermal solar system. Temperature differences between the remote solar panels and the basement water tanks triggers a water pump to circulate water through the panels to heat the house.</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td align=\"center\">\n                                            <img src=\"/img/components/blinky-solar-system.png\" width=\"822px\" style=\"padding-right:1px;\"/>\n                                        </td>\n                                    </tr> \n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 630,
        "y": 1940,
        "wires": [
            [
                "aa6c66d6.9a38e8"
            ]
        ]
    },
    {
        "id": "6a6deb3e.70bf94",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "html.blinkyStepper",
        "field": "payload.html.blinkyStepper",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                    <div class='card' id=\"blinkyStepperCard\">\n                        <table width='900px'>\n                            <tr>\n                                <td  width='800px' align='left'><span class='card-title'>Blinky Stepper</span></td>\n                                <td  width='100px'><button class=\"btn btn-block card-text\" style=\"background-color:var(--color1);color:white\" type=\"button\" id=\"blinkyStepperBtn\" onclick=\"blinkyStepper()\">Open</button></td>\n                            </tr>\n                        </table>\n                        <div class='card-body' id=\"blinkyStepper\">\n                            <div class='row'>\n                                <div class=\"col-12 justify\">\n                                     <span class=\"card-text\">Wirelessly controlled 12 V, 1.8 Amps stepper motor controller with 0.05 to 1.8 degrees of resolution</span>\n                                </div>\n                            </div>\n                            <div class=\"jumbotron\" style=\"background-color:#9eb5c7;color: white;padding-top:10px; padding-bottom:10px;padding-left:10px;padding-right:10px;\" align=\"center\">\n                                <table width=\"200px\">\n                                    <tr>\n                                        <td>\n                                            <img src=\"/img/components/blinky-stepper/blinky-stepper-screen.png\" height=\"297px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <img src=\"/img/components/blinky-stepper/blinky-stepper-pcb.png\" height=\"297px\" style=\"padding-right:10px;\"/>\n                                        </td>\n                                        <td>\n                                            <table width=\"100%\">\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-stepper/blinky-stepper-flow.png\" height=\"102px\"/>\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td  width=\"100%\">\n                                                        <img src=\"/img/components/blinky-stepper/blinky-stepper-schem.png\" height=\"195px\"/>\n                                                    </td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n",
        "output": "str",
        "x": 610,
        "y": 2180,
        "wires": [
            [
                "f60bbec4.f0d95"
            ]
        ]
    },
    {
        "id": "f375d269.de94a",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = '01';\nmsg.payload['script']['deviceType'] = 'blinky-turnstile';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "52081570.379e7c"
            ]
        ]
    },
    {
        "id": "b52f0836.91ae08",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Kallis badare",
        "output": "str",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "ce4defaa.1e7eb"
            ]
        ]
    },
    {
        "id": "bab0f61.ea1cd08",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var programStarted = false;\n        var tracesPlotted = false;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n//            getCreds();\n//            setInterval(function(){getCreds();}, 1000);\n            var now = new Date();\n            $( \"#dateId\" ).val(now.toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#dateId').datepicker();\n            } );\n            setInterval(function()\n            {\n                if ( dateIdIsToday() )\n                {\n                    getHistory(); \n                }\n            }, 120000);\n        }\n        function dateIdIsToday()\n        {\n            var now = new Date();\n            var dateField = new Date($( \"#dateId\" ).val());\n            if (dateField.getFullYear() != now.getFullYear()) return false;\n            if (dateField.getMonth()    != now.getMonth())    return false;\n            if (dateField.getDate()     != now.getDate())     return false;\n            return true;\n        }\n        function getHistory()\n        {\n            $( \"#dateId\" ).prop( \"disabled\", true );\n            var dateField = new Date($( \"#dateId\" ).val());\n            dateField.setHours(1);\n            var startDate = dateField.getTime();\n            dateField.setHours(22);\n            var stopDate = dateField.getTime();\n            archiveRequestList = [];\n            archiveList = [];\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['numTurns'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                $( \"#bathersLastHourLabelId\").hide();\n                $( \"#bathersLastHourId\").hide();\n                if (data.trace == null)\n                {\n                    $( \"#bathersNowId\").text(\"?\");\n                    $( \"#bathersTotalInId\").text(\"?\");\n                    $( \"#bathersTotalOutId\").text(\"?\");\n                    if (tracesPlotted) \n                    {\n                        Plotly.deleteTraces('archiveChart', [-2, -1]);\n                        tracesPlotted = false;\n                    }\n                    $( \"#dateId\" ).prop( \"disabled\", false );\n                    return;\n                }\n                if (data.trace.length < 2)\n                {\n                    $( \"#bathersNowId\").text(\"0\");\n                    $( \"#bathersTotalInId\").text(\"0\");\n                    $( \"#bathersTotalOutId\").text(\"0\");\n                    if (tracesPlotted) \n                    {\n                        Plotly.deleteTraces('archiveChart', [-2, -1]);\n                        tracesPlotted = false;\n                    }\n                    $( \"#dateId\" ).prop( \"disabled\", false );\n                    return;\n                }\n                var bathersTotalIn = 0;\n                var bathersTotalOut = 0;\n                for (var ib = 1; ib < data.trace.length; ++ib)\n                {\n                    if (data.trace[ib].numTurns > data.trace[ib - 1].numTurns) bathersTotalIn = bathersTotalIn + 1;\n                    if (data.trace[ib].numTurns < data.trace[ib - 1].numTurns) bathersTotalOut = bathersTotalOut + 1;\n                }\n                $( \"#bathersTotalInId\").text(bathersTotalIn.toString());\n                $( \"#bathersTotalOutId\").text(bathersTotalOut.toString());\n                $( \"#bathersNowId\").text((bathersTotalIn - bathersTotalOut).toString());\n                \n                var now = new Date().getTime();\n                var bathersInLastHour = 0;\n                if ( dateIdIsToday() )\n                {\n                    for (var ib = 1; ib < data.trace.length; ++ib)\n                    {\n                        if ((now - data.trace[ib].timeStamp) < 3600000)\n                        {\n                            if (data.trace[ib].numTurns > data.trace[ib - 1].numTurns)\n                            {\n                                bathersInLastHour = bathersInLastHour + 1;\n                            }\n                        }\n                    }\n                    $( \"#bathersLastHourLabelId\").show();\n                    $( \"#bathersLastHourId\").show();\n                    $( \"#bathersLastHourId\").text(bathersInLastHour.toString());\n                }\n\n                var dateField = new Date($( \"#dateId\" ).val());\n                dateField.setHours(6);\n                var startDate = dateField.getTime();\n                dateField.setHours(22);\n                var stopDate = dateField.getTime();\n                var layout =\n                {\n                    margin: \n                    {\n                        l: 75,\n                        r: 50,\n                        b: 75,\n                        t: 50,\n                        pad: 4\n                    },\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : '500',\n                    width       : '',\n                    xaxis       :\n                    {\n//                        title: { font : {size:10}},\n                        type    : 'date',\n                        range   : [startDate,stopDate],\n                        tickfont    : {size:17}\n                    },\n                    yaxis       :\n                    {\n                        title: \n                        {\n                            text : 'Netto badare i',\n                            font : {size:20}\n                        },\n                        dtick   :  1,\n                        tickfont : {size:17}\n\n                    },\n                };                \n                var trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name    : 'badare i',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: '#557a95',\n                        size: 15,\n                        symbol: 'circle'\n                    }        \n                };\n                var trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name    : 'badare ute',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: '#f2a31f',\n                        size: 15,\n                        symbol: 'circle'\n                    }        \n                };\n                trace1.x[0] = data.trace[0].timeStamp;\n                trace1.y[0] = data.trace[0].numTurns;\n                trace2.x[0] = data.trace[0].timeStamp;\n                trace2.y[0] = data.trace[0].numTurns;\n                for (var ib = 1; ib < data.trace.length; ++ib)\n                {\n                    if(data.trace[ib].numTurns > data.trace[ib - 1].numTurns)\n                    {\n                        trace1.x.push(data.trace[ib].timeStamp);\n                        trace1.y.push(data.trace[ib].numTurns);\n                    }\n                    else\n                    {\n                        trace2.x.push(data.trace[ib].timeStamp);\n                        trace2.y.push(data.trace[ib].numTurns);\n                    }\n                }\n\n                Plotly.newPlot('archiveChart', [trace1,trace2], layout);\n                tracesPlotted = true;\n                $( \"#dateId\" ).prop( \"disabled\", false );\n                \n            }\n        }\n        function onWebSocketOpen()\n        {\n            if(!programStarted) getHistory();\n            programStarted = true;\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "632862f5.3059ec"
            ]
        ]
    },
    {
        "id": "632862f5.3059ec",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.swedish}}}\n{{{payload.script.global}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 700,
        "y": 300,
        "wires": [
            [
                "c7ceb671.7cfe88"
            ]
        ]
    },
    {
        "id": "9b4373d5.a7d01",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <table width=\"900px\">\n            <tr >\n                <td style='padding-top: 10px;'>\n{{{payload.html.dashboard}}}\n                </td>\n            </tr>\n            <tr>\n                <td style='padding-top: 10px;'>\n{{{payload.html.chart}}}\n                </td>\n            </tr>\n            <tr>\n                <td align='center'>\n                    <span >Powered by </span><a href='/' style=\"color: var(--color1);text-decoration: underline;\">Blinky-Lite</a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 300,
        "wires": [
            [
                "2eb11873.c0b048"
            ]
        ]
    },
    {
        "id": "52081570.379e7c",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "turnstileYellow.png",
        "output": "str",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "b52f0836.91ae08"
            ]
        ]
    },
    {
        "id": "c7ceb671.7cfe88",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Sammanfattning</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' >\n                                        <span class='card-text'  style='color:var(--color1); font-size: 250%;'>Datum</span>\n                                    </td>\n                                    <td width='30%' align='center'>\n                                        <input class=\"form-control\" style='font-size: 250%;' id=\"dateId\" type=\"text\" onchange=\"getHistory()\"/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' >\n                                        <span class='card-text'  style='color:var(--color1); font-size: 250%;'>Netto antal badare inne nu</span>\n                                    </td>\n                                    <td width='30%' align='center' valign='center'>\n                                        <span class='card-text' style='font-size: 250%;' id='bathersNowId' ></span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' >\n                                        <span class='card-text'  style='color:var(--color1); font-size: 250%;'>Totalt antal inpasseringar idag</span>\n                                    </td>\n                                    <td width='40%' align='center' valign='center'>\n                                        <span class='card-text' style='font-size: 250%;' id='bathersTotalInId' ></span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' >\n                                        <span class='card-text' style='color:var(--color1); font-size: 250%;'>Totalt antal utpasseringar idag</span>\n                                    </td>\n                                    <td width='30%' align='center' valign='center'>\n                                        <span class='card-text' style='font-size: 250%;' id='bathersTotalOutId' ></span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' >\n                                        <span class='card-text'  style='color:var(--color1); font-size: 250%;' id='bathersLastHourLabelId' >Antal inpasseringar senaste timmen</span>\n                                    </td>\n                                    <td width='30%' align='center' valign='center'>\n                                        <span class='card-text' style='font-size: 250%;' id='bathersLastHourId' ></span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "49dd92e3.83185c"
            ]
        ]
    },
    {
        "id": "973cce8c.b9b4d",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-bathers",
        "url": "/kallis-bathers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "f375d269.de94a"
            ]
        ]
    },
    {
        "id": "1f39b8fe.670497",
        "type": "websocket out",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-bathers/websocket",
        "server": "85c4c7aa.d48438",
        "client": "",
        "x": 1230,
        "y": 440,
        "wires": []
    },
    {
        "id": "8f53ee48.a6ce7",
        "type": "link in",
        "z": "d6667d7b.35cd6",
        "name": "kallis-bathers web socket input",
        "links": [
            "1c641721.29eb79",
            "9b3bde89.b6f61",
            "a91cdcd0.61dc6"
        ],
        "x": 1085,
        "y": 440,
        "wires": [
            [
                "1f39b8fe.670497"
            ]
        ]
    },
    {
        "id": "4f3120a8.a5139",
        "type": "websocket in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-bathers/websocket",
        "server": "85c4c7aa.d48438",
        "client": "",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "435bd7c4.790818"
            ]
        ]
    },
    {
        "id": "8a054338.b6be3",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "kallis-bathers archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 595,
        "y": 440,
        "wires": []
    },
    {
        "id": "ce4defaa.1e7eb",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.swedish",
        "field": "payload.script.swedish",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        /* Swedish initialisation for the jQuery UI date picker plugin. */\n        /* Written by Anders Ekdahl ( anders@nomadiz.se). */\n        ( function( factory ) {\n        \tif ( typeof define === \"function\" && define.amd ) {\n        \n        \t\t// AMD. Register as an anonymous module.\n        \t\tdefine( [ \"../widgets/datepicker\" ], factory );\n        \t} else {\n        \n        \t\t// Browser globals\n        \t\tfactory( jQuery.datepicker );\n        \t}\n        }( function( datepicker ) {\n        \n        datepicker.regional.sv = {\n        \tcloseText: \"Stäng\",\n        \tprevText: \"&#xAB;Förra\",\n        \tnextText: \"Nästa&#xBB;\",\n        \tcurrentText: \"Idag\",\n        \tmonthNames: [ \"januari\",\"februari\",\"mars\",\"april\",\"maj\",\"juni\",\n        \t\"juli\",\"augusti\",\"september\",\"oktober\",\"november\",\"december\" ],\n        \tmonthNamesShort: [ \"jan.\",\"feb.\",\"mars\",\"apr.\",\"maj\",\"juni\",\n        \t\"juli\",\"aug.\",\"sep.\",\"okt.\",\"nov.\",\"dec.\" ],\n        \tdayNamesShort: [ \"sön\",\"mån\",\"tis\",\"ons\",\"tor\",\"fre\",\"lör\" ],\n        \tdayNames: [ \"söndag\",\"måndag\",\"tisdag\",\"onsdag\",\"torsdag\",\"fredag\",\"lördag\" ],\n        \tdayNamesMin: [ \"sö\",\"må\",\"ti\",\"on\",\"to\",\"fr\",\"lö\" ],\n        \tweekHeader: \"Ve\",\n        \tdateFormat: \"yy-mm-dd\",\n        \tfirstDay: 1,\n        \tisRTL: false,\n        \tshowMonthAfterYear: false,\n        \tyearSuffix: \"\" };\n        datepicker.setDefaults( datepicker.regional.sv );\n        \n        return datepicker.regional.sv;\n        \n        } ) );\n",
        "output": "str",
        "x": 720,
        "y": 220,
        "wires": [
            [
                "bab0f61.ea1cd08"
            ]
        ]
    },
    {
        "id": "4e6ae767.7e1d48",
        "type": "subflow:ca529822.9112f8",
        "z": "d6667d7b.35cd6",
        "name": "",
        "x": 1430,
        "y": 300,
        "wires": []
    },
    {
        "id": "2eb11873.c0b048",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .ui-widget\n        {\n            font-size :200%;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "464bc44d.d9caac"
            ]
        ]
    },
    {
        "id": "464bc44d.d9caac",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class='row' style=\"padding-top:10px;\">\n        <div class='col-12' align='center'>\n            <table width=\"900px\" background=\"/img/longaBryggan.png\">\n                <tr>\n                    <td width=\"300px\" align=\"left\" style=\"padding-top:25px;padding-bottom:25px;padding-left:25px;\"><a href=\"/\" ><img src=\"/img/bl-mc-icon.png\" height=\"100px\"/></a></td>\n                    <td width=\"300px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"></td>\n                    <td width=\"300px\" align=\"right\" style=\"padding-top:25px;padding-bottom:25px;padding-right:25px;\"><a href=\"/kallis-summary\" ><img src=\"/img/bastuYellow.png\" height=\"100px\"/></a></td>\n               </tr>\n            </table>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1300,
        "y": 300,
        "wires": [
            [
                "4e6ae767.7e1d48"
            ]
        ]
    },
    {
        "id": "49dd92e3.83185c",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "html.chart",
        "field": "payload.html.chart",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Historia</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "9b4373d5.a7d01"
            ]
        ]
    },
    {
        "id": "231ccb57.2806a4",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "To Websocket Router action switch",
        "links": [],
        "x": 405,
        "y": 1620,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "f12f38cd.8e9bc8",
        "type": "websocket out",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-weather/websocket",
        "server": "f4be01a.3f255",
        "client": "",
        "x": 1230,
        "y": 580,
        "wires": []
    },
    {
        "id": "3f5e997d.8aa756",
        "type": "link in",
        "z": "d6667d7b.35cd6",
        "name": "brantevik web socket input",
        "links": [
            "62fb9e33.02bff",
            "a988b405.392318",
            "ca636790.fc91f8"
        ],
        "x": 1075,
        "y": 580,
        "wires": [
            [
                "f12f38cd.8e9bc8"
            ]
        ]
    },
    {
        "id": "75add378.427e0c",
        "type": "json",
        "z": "d6667d7b.35cd6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "b91fd9e8.204d38"
            ]
        ]
    },
    {
        "id": "b91fd9e8.204d38",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 580,
        "wires": [
            [
                "ff4be1c.86a372"
            ]
        ]
    },
    {
        "id": "7ff88d67.15ca74",
        "type": "websocket in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-weather/websocket",
        "server": "f4be01a.3f255",
        "client": "",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "75add378.427e0c"
            ]
        ]
    },
    {
        "id": "c7ccca02.902f08",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "kallis archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 735,
        "y": 560,
        "wires": []
    },
    {
        "id": "435bd7c4.790818",
        "type": "json",
        "z": "d6667d7b.35cd6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "ffe72477.e66918"
            ]
        ]
    },
    {
        "id": "ffe72477.e66918",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 440,
        "wires": [
            [
                "8a054338.b6be3"
            ]
        ]
    },
    {
        "id": "c7da9dac.c1515",
        "type": "mongodb3 in",
        "z": "2b074b3a.632fb4",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 710,
        "y": 140,
        "wires": [
            [
                "ef3db445.b303c8"
            ]
        ]
    },
    {
        "id": "ef3db445.b303c8",
        "type": "function",
        "z": "2b074b3a.632fb4",
        "name": "Parse query",
        "func": "var water = null;\nvar windAir = null;\nfor (var ii = 0; ii < 2; ++ii)\n{\n    if ((msg.payload[ii].deviceType == 'blinky-DS18B20')  && (msg.payload[ii].name == 'Brantevik') ) water = msg.payload[ii];\n    if ((msg.payload[ii].deviceType == 'blinky-wind')  && (msg.payload[ii].name == 'Brantevik') ) windAir = msg.payload[ii];\n}\nvar newPayload = \n{\n    airTimeStamp    : windAir.timeStamp,\n    airTemp         : windAir.temperature.value,\n    waterTimeStamp  : water.timeStamp,\n    waterTemp       : water.tempA.value,\n    windSpeed       : windAir.windSpeed.value,\n    windDirection   : windAir.windDirection.value\n};\nif (msg.topic == undefined)\n{\n    msg.payload = newPayload;\n    return [null,msg];\n}\nvar newMsg = \n{\n    topic   :   msg.topic,\n    payload:\n    {\n        topic   :   msg.topic,\n        userID  :   msg.userID,\n        payload :   [water, windAir]\n    }\n}\nreturn [newMsg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 140,
        "wires": [
            [
                "e4b5cdfb.1cf63"
            ],
            [
                "2a2d7c4e.b4fe14"
            ]
        ]
    },
    {
        "id": "a379e264.0ddd5",
        "type": "function",
        "z": "2b074b3a.632fb4",
        "name": "Prep get Devices Query",
        "func": "msg.payload = \n{\n    $or : [ \n        {$and : [ {deviceType: 'blinky-DS18B20'}, {name: 'Brantevik'} ]},\n        {$and : [ {deviceType: 'blinky-wind'}, {name: 'Brantevik'} ]}\n        ]\n     \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "c7da9dac.c1515"
            ]
        ]
    },
    {
        "id": "8377d459.45b4f8",
        "type": "http in",
        "z": "2b074b3a.632fb4",
        "name": "/brantevik.json",
        "url": "/brantevik.json",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "a379e264.0ddd5"
            ]
        ]
    },
    {
        "id": "2a2d7c4e.b4fe14",
        "type": "http response",
        "z": "2b074b3a.632fb4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1180,
        "y": 140,
        "wires": []
    },
    {
        "id": "47f1a8eb.938b38",
        "type": "mongodb3 in",
        "z": "d6667d7b.35cd6",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 770,
        "y": 700,
        "wires": [
            [
                "cede4726.6ec938"
            ]
        ]
    },
    {
        "id": "cede4726.6ec938",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Parse query",
        "func": "var temp = null;\nvar turnstile = null;\nvar wind = null;\nfor (var ii = 0; ii < 3; ++ii)\n{\n    if ((msg.payload[ii].deviceType == 'blinky-DS18B20') && (msg.payload[ii].name == '01') ) temp = msg.payload[ii];\n    if ((msg.payload[ii].deviceType == 'blinky-turnstile')  && (msg.payload[ii].name == '01') ) turnstile = msg.payload[ii];\n//    if ((msg.payload[ii].deviceType == 'blinky-wind')  && (msg.payload[ii].name == 'Kallis') ) wind = msg.payload[ii];\n}\nvar newPayload = \n{\n    tempStamp       : temp.timeStamp,\n    airTemp         : temp.tempA.value,\n    waterTemp       : temp.tempB.value,\n    turnstileStamp  : turnstile.timeStamp,\n    turnstilePos    : turnstile.position.value,\n    turnstileTurns  : turnstile.numTurns.value,\n//    windSpeed       : wind.windSpeed.value,\n//    windDirection   : wind.windDirection.value\n};\nif (msg.topic == undefined)\n{\n    msg.payload = newPayload;\n    return [null,msg];\n}\nvar newMsg = \n{\n    topic   :   msg.topic,\n    payload :\n    {\n        topic   :   msg.topic,\n        userID  :   msg.userID,\n        payload :   [temp, turnstile,wind]\n    }\n}\nreturn [newMsg,null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 700,
        "wires": [
            [
                "ca636790.fc91f8"
            ],
            [
                "fa0e4e7e.48379"
            ]
        ]
    },
    {
        "id": "8777941d.290748",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Prep get Devices Query",
        "func": "msg.payload = \n{\n    $or : [ \n        {$and : [ {deviceType: 'blinky-DS18B20'}, {name: '01'} ]}, \n        {$and : [ {deviceType: 'blinky-turnstile'}, {name: '01'} ]},\n//        {$and : [ {deviceType: 'blinky-wind'}, {name: 'Kallis'} ]},\n        ]\n     \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 700,
        "wires": [
            [
                "47f1a8eb.938b38"
            ]
        ]
    },
    {
        "id": "42589a18.a08314",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis.json",
        "url": "/kallis.json",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 720,
        "wires": [
            [
                "8777941d.290748"
            ]
        ]
    },
    {
        "id": "fa0e4e7e.48379",
        "type": "http response",
        "z": "d6667d7b.35cd6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 720,
        "wires": []
    },
    {
        "id": "ff4be1c.86a372",
        "type": "switch",
        "z": "d6667d7b.35cd6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "c7ccca02.902f08"
            ],
            [
                "bf06d509.3bffa8"
            ]
        ]
    },
    {
        "id": "8f5c3594.065be8",
        "type": "link in",
        "z": "d6667d7b.35cd6",
        "name": "kallis device query in",
        "links": [
            "bf06d509.3bffa8",
            "f219db61.44f1d8",
            "fff6105c.3c2f6"
        ],
        "x": 335,
        "y": 660,
        "wires": [
            [
                "8777941d.290748"
            ]
        ]
    },
    {
        "id": "bf06d509.3bffa8",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "kallis weather web socket out",
        "links": [
            "8f5c3594.065be8"
        ],
        "x": 735,
        "y": 600,
        "wires": []
    },
    {
        "id": "ca636790.fc91f8",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "kallis device query out",
        "links": [
            "3f5e997d.8aa756",
            "416a2a7a.685b94",
            "8643a67.20cf058"
        ],
        "x": 1155,
        "y": 680,
        "wires": []
    },
    {
        "id": "6506cd6c.93ac74",
        "type": "link in",
        "z": "2b074b3a.632fb4",
        "name": "brantevik device query in",
        "links": [
            "56e4449c.aa565c",
            "187857b3.a24488",
            "efc341f5.3b27c"
        ],
        "x": 345,
        "y": 100,
        "wires": [
            [
                "a379e264.0ddd5"
            ]
        ]
    },
    {
        "id": "e4b5cdfb.1cf63",
        "type": "link out",
        "z": "2b074b3a.632fb4",
        "name": "brantevik device query out",
        "links": [
            "6b2597a0.5798c8",
            "f42dd5f2.45fce8",
            "f5fe39ed.3730c8"
        ],
        "x": 1055,
        "y": 120,
        "wires": []
    },
    {
        "id": "e9440704.1b2cc8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Brantevik",
        "output": "str",
        "x": 440,
        "y": 300,
        "wires": [
            [
                "d333b08f.60a6b"
            ]
        ]
    },
    {
        "id": "b49a9608.779658",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "e9440704.1b2cc8"
            ]
        ]
    },
    {
        "id": "7bb93983.e9da18",
        "type": "http in",
        "z": "2b074b3a.632fb4",
        "name": "/brantevik-widget",
        "url": "/brantevik-widget",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "b49a9608.779658"
            ]
        ]
    },
    {
        "id": "cf2981ef.3b94f",
        "type": "websocket out",
        "z": "2b074b3a.632fb4",
        "name": "/brantevik-widget/websocket",
        "server": "4d01cc56.b625c4",
        "client": "",
        "x": 1240,
        "y": 560,
        "wires": []
    },
    {
        "id": "f42dd5f2.45fce8",
        "type": "link in",
        "z": "2b074b3a.632fb4",
        "name": "brantevik-widget web socket input",
        "links": [
            "304b3835.9b6918",
            "62fb9e33.02bff",
            "6d200160.afc65",
            "a988b405.392318",
            "e4b5cdfb.1cf63"
        ],
        "x": 1085,
        "y": 560,
        "wires": [
            [
                "cf2981ef.3b94f"
            ]
        ]
    },
    {
        "id": "d9d211c5.d2deb",
        "type": "json",
        "z": "2b074b3a.632fb4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 560,
        "wires": [
            [
                "faf6245.91b20d8"
            ]
        ]
    },
    {
        "id": "faf6245.91b20d8",
        "type": "function",
        "z": "2b074b3a.632fb4",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 560,
        "wires": [
            [
                "b19e36ee.345798"
            ]
        ]
    },
    {
        "id": "4fc43334.2292dc",
        "type": "websocket in",
        "z": "2b074b3a.632fb4",
        "name": "/brantevik-widget/websocket",
        "server": "4d01cc56.b625c4",
        "client": "",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "d9d211c5.d2deb"
            ]
        ]
    },
    {
        "id": "187857b3.a24488",
        "type": "link out",
        "z": "2b074b3a.632fb4",
        "name": "brantevik-widget web socket out",
        "links": [
            "6506cd6c.93ac74"
        ],
        "x": 695,
        "y": 580,
        "wires": []
    },
    {
        "id": "56f5d51f.3bd8bc",
        "type": "template",
        "z": "adce79c2.bd6fa8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "55c86631.39a728"
            ]
        ]
    },
    {
        "id": "687f3503.18d94c",
        "type": "template",
        "z": "adce79c2.bd6fa8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "b9f0df99.46a35"
            ]
        ]
    },
    {
        "id": "25f0c237.ce8a1e",
        "type": "template",
        "z": "adce79c2.bd6fa8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "687f3503.18d94c"
            ]
        ]
    },
    {
        "id": "55c86631.39a728",
        "type": "http response",
        "z": "adce79c2.bd6fa8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 80,
        "wires": []
    },
    {
        "id": "a38619a7.d98538",
        "type": "template",
        "z": "adce79c2.bd6fa8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "25f0c237.ce8a1e"
            ]
        ]
    },
    {
        "id": "132e93cb.ae000c",
        "type": "function",
        "z": "adce79c2.bd6fa8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "a38619a7.d98538"
            ]
        ]
    },
    {
        "id": "395db2cd.82c91e",
        "type": "mongodb3 in",
        "z": "adce79c2.bd6fa8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f0df99.46a35",
        "type": "function",
        "z": "adce79c2.bd6fa8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "56f5d51f.3bd8bc",
                "f3f83772.745e08"
            ]
        ]
    },
    {
        "id": "fed7a4fc.f63bf8",
        "type": "function",
        "z": "adce79c2.bd6fa8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "395db2cd.82c91e"
            ]
        ]
    },
    {
        "id": "b41b9de6.c56eb",
        "type": "http request",
        "z": "adce79c2.bd6fa8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "fed7a4fc.f63bf8"
            ]
        ]
    },
    {
        "id": "f3f83772.745e08",
        "type": "function",
        "z": "adce79c2.bd6fa8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nvar header = {};\nheader['User-Agent'] = 'keycdn-tools:' + global.get('ipRefWeb');\nreturn {\n    topic:'clientInfo', \n    headers: header,\n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "b41b9de6.c56eb"
            ]
        ]
    },
    {
        "id": "2630746d.107cdc",
        "type": "subflow:adce79c2.bd6fa8",
        "z": "2b074b3a.632fb4",
        "name": "",
        "x": 1210,
        "y": 380,
        "wires": []
    },
    {
        "id": "c391591c.ab5458",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Kallis",
        "output": "str",
        "x": 440,
        "y": 880,
        "wires": [
            [
                "e936dbe.00d2228"
            ]
        ]
    },
    {
        "id": "13682020.43e46",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 450,
        "y": 840,
        "wires": [
            [
                "c391591c.ab5458"
            ]
        ]
    },
    {
        "id": "e936dbe.00d2228",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var programStarted = false;\n        var validArchiveData = false;\n        var numTurnsWatch = -100;\n\n        function onDocumentReady()\n        {\n/*\n            var picNum =  Math.floor(Math.random() * 22) + 1;\n            if (picNum < 10)\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/kallisPics/kallisPic0\" + picNum.toString() +\".jpg\");\n            }\n            else\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/kallisPics/kallisPic\" + picNum.toString() +\".jpg\");\n            }\n*/\n            $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-02.jpg' +'?t=' + new Date().getTime().toString());\n\n            setInterval(function()\n            {\n                $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-02.jpg' +'?t=' + new Date().getTime().toString());\n            }, 60000);\n\n            $(\"#historyChartContainer\").hide();\n            $(window).resize(function()\n            {\n                resizeText();\n            });\n        }\n        function resizeText()\n        {\n            if($('#status').is(\":visible\")) return;\n            if (validArchiveData)\n            {\n                windowWidth = $( '#historyChartContainer' ).width();\n                var width = $(\"#historyChartContainer\").width() * 0.92;\n                var height = historyPlotHeightRatio * width;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: true});\n                return;\n            }\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                var webSocketMsg = \n                {\n                    topic     : 'getDevices',\n                    payload   : {},\n                    userID    : userID,\n                };\n                ws.send(JSON.stringify(webSocketMsg));\n//                getTurnstileHistory();\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    var device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                    device.timeStamp = new Date().getTime();\n                    if ((device.deviceType == \"blinky-DS18B20\")     && (device.name == \"01\"))\n                    {\n                        updateWaterTemp(device);\n                        updateAirTemp(device);\n                    }\n/*\n                    if ((device.deviceType == \"blinky-wind\")     && (device.name == \"Kallis\"))\n                    {\n                        updateWind(device);\n                    }\n*/\n                    if ((device.deviceType == 'blinky-turnstile') && (device.name == '01') )\n                    {\n                        if (numTurnsWatch != device.numTurns.value)\n                        {\n                            numTurnsWatch = device.numTurns.value;\n                            getTurnstileHistory();\n                        }\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == 'blinky-turnstile') && (msg.payload.device.name == '01') )\n                        {\n                            putTurnstileArchiveValues(msg.payload);\n                        }\n                        else\n                        {\n                            putArchiveValues(msg.payload);\n                        }\n                    }\n\n                    break;\n                case 'getDevices':\n                    if (msg.userID == userID)\n                    {\n                        updateWaterTemp(msg.payload[0]);\n                        updateAirTemp(msg.payload[0]);\n                        updateWind(msg.payload[2])\n                     }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function getStatus()\n        {\n            $(\"#historyChartContainer\").hide();\n            $(\"#status\").show();\n        }\n",
        "output": "str",
        "x": 730,
        "y": 840,
        "wires": [
            [
                "3b7680e9.a5b87"
            ]
        ]
    },
    {
        "id": "74d3209c.a18f6",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.turnstile}}}",
        "output": "str",
        "x": 720,
        "y": 1000,
        "wires": [
            [
                "3bd51083.eeec2"
            ]
        ]
    },
    {
        "id": "3bd51083.eeec2",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"status\" width=\"100%\" align=\"center\">\n        <table id=\"widgetTable\" width=\"100%\" background=\"/img/blinky-webcam/blinky-webcam-02.jpg\" style=\"background-repeat:no-repeat;background-position:center;background-size: 100% 100%;\">\n            <tr>\n                <td align='center' width=\"100%\" style=\"padding-top:0vw;\">\n                    <span id=\"waterTempDate\" style=\"font-size: 5vw; color:white;\"></span> \n                </td>\n            </tr>\n            <tr>\n                <td width=\"100%\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td>\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td align='left' width=\"50%\" style=\"padding-left:5vw;\">\n                                            <span id='airTempLabel' style='font-size: 6vw; color:white;' >Luft</span>\n                                        </td>\n                                        <td align='right' width=\"50%\" style=\"padding-right:5vw;\"> \n                                            <span id='airTemp' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='left'  width=\"50%\" style=\"padding-left:5vw;\">\n                                            <span id='waterTempLabel' style='font-size: 6vw; color:white;' >Vatten</span>\n                                        </td>\n                                        <td  align='right' width=\"50%\" style=\"padding-right:5vw;\">\n                                            <span id='waterTemp' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='left' width=\"50%\" style=\"padding-left:5vw;\">\n                                            <span id='windLabel' style='font-size: 6vw; color:#999999;' >.</span>\n                                        </td>\n                                        <td align='right' width=\"50%\" style=\"padding-right:5vw;\"> \n                                            <span id='wind' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td align='left' width=\"70%\" style=\"padding-left:5vw;\">\n                                            <span id='bathersLastHourLabel' style='font-size: 6vw; color:white;' >Badare senaste timmen</span>\n                                        </td>\n                                        <td align='right' width=\"30%\" style=\"padding-right:5vw;\"> \n                                            <span id='bathersLastHourId' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='left' width=\"70%\" style=\"padding-left:5vw;\">\n                                            <span id='bathersTotalInLabel' style='font-size: 6vw; color:white;' >Badare idag</span>\n                                        </td>\n                                        <td align='right' width=\"30%\" style=\"padding-right:5vw;\"> \n                                            <span id='bathersTotalInId' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n<!--\n                                    <tr>\n                                        <td align='left' width=\"70%\" style=\"padding-left:5vw;\">\n                                            <span id='bathersNowLabel' style='font-size: 6vw; color:white;' >Badare inne nu</span>\n                                        </td>\n                                        <td align='right' width=\"30%\" style=\"padding-right:5vw;\"> \n                                            <span id='bathersNowId' style='font-size: 6vw; color:white;' ></span>\n                                        </td>\n                                    </tr>\n-->\n                                </table>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr>\n                <td align='center' style=\"padding-top:2vw;\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerWhite' style=\"font-size: 3vw; color:white;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkWhite' style=\"font-size: 3vw; color: white;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <span id=\"dataFetchMessage\" style=\"font-size: 3vw; color:white;\"></span>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"historyButton\" style=\"font-size: 3vw; color:white; border-color:white;\" onclick=\"getArchive(72)\" >Historia</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"historyChartContainer\" width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"100%\">\n                    <div id=\"historyChart\" width=\"100%\" align=\"center\" style=\"border-width: 2px; border-style: solid; border-color: '#557a95'; border-radius: 2vw;background-color: #ecf2fe;\"></div>\n                </td>\n            </tr>\n            <tr>\n                <td align='center' >\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerBlack' style=\"font-size: 3vw; color:black;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkBlack' style=\"font-size: 3vw; color: black;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"backButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"getStatus()\" >tillbaka</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 930,
        "y": 1000,
        "wires": [
            [
                "3da16ef8.664e12"
            ]
        ]
    },
    {
        "id": "3b7680e9.a5b87",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateAirTemp(device)\n        {\n            $('#airTemp').text(device.tempA.value.toFixed(0) + ' C');\n        }\n        function updateWaterTemp(device)\n        {\n            var time = new Date(device.timeStamp).toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n            $('#waterTempDate').text('Bjerreds Saltsjöbad ' + time);\n            $('#waterTemp').text(device.tempB.value.toFixed(0) + ' C');\n        }\n        function updateWind(device)\n        {\n//            $('#wind').text(getDirectionText(device.windDirection1.value) + ' ' + device.windSpeed1.value.toFixed(1) + ' m/s');\n            $('#wind').text('');\n        }\n        function getDirectionText(wd)\n        {\n            var dirText = '';           \n            if ((  0.0 <= wd) && (wd <=  22.5)) dirText = 'N ';\n            if (( 22.5 <  wd) && (wd <=  67.5)) dirText = 'NE';\n            if (( 67.5 <  wd) && (wd <= 112.5)) dirText = 'E ';\n            if ((112.5 <  wd) && (wd <= 157.5)) dirText = 'SE';\n            if ((157.5 <  wd) && (wd <= 202.5)) dirText = 'S ';\n            if ((202.5 <  wd) && (wd <= 247.5)) dirText = 'SW';\n            if ((247.5 <  wd) && (wd <= 292.5)) dirText = 'W ';\n            if ((292.5 <  wd) && (wd <= 337.5)) dirText = 'NW';\n            if ((337.5 <  wd) && (wd <= 360.0)) dirText = 'N ';\n            return dirText;\n        }\n",
        "output": "str",
        "x": 760,
        "y": 880,
        "wires": [
            [
                "4b6e2c95.7040d4"
            ]
        ]
    },
    {
        "id": "7d063afb.ce4f54",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-widget",
        "url": "/kallis-widget",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "13682020.43e46"
            ]
        ]
    },
    {
        "id": "3da16ef8.664e12",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            max-width: 100%;\n            background-color: transparent !important;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n        .button-link \n        {\n            background: none!important;\n            border-type: solid;\n            padding: 2px!important;\n            cursor: pointer;\n        }\n",
        "output": "str",
        "x": 1070,
        "y": 1000,
        "wires": [
            [
                "3d111ea0.e0d7e2"
            ]
        ]
    },
    {
        "id": "6d1d08d.e677df8",
        "type": "websocket out",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-widget/websocket",
        "server": "55bc820e.81f5ac",
        "client": "",
        "x": 1230,
        "y": 1080,
        "wires": []
    },
    {
        "id": "8643a67.20cf058",
        "type": "link in",
        "z": "d6667d7b.35cd6",
        "name": "kallis-widget web socket input",
        "links": [
            "1c641721.29eb79",
            "62fb9e33.02bff",
            "9b3bde89.b6f61",
            "a988b405.392318",
            "ca636790.fc91f8"
        ],
        "x": 1085,
        "y": 1080,
        "wires": [
            [
                "6d1d08d.e677df8"
            ]
        ]
    },
    {
        "id": "889dfb0c.c78f78",
        "type": "json",
        "z": "d6667d7b.35cd6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 1080,
        "wires": [
            [
                "b4d07c68.9f2a3"
            ]
        ]
    },
    {
        "id": "b4d07c68.9f2a3",
        "type": "function",
        "z": "d6667d7b.35cd6",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 1080,
        "wires": [
            [
                "92e9ccca.ddf17"
            ]
        ]
    },
    {
        "id": "4301a6ff.557d78",
        "type": "websocket in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis-widget/websocket",
        "server": "55bc820e.81f5ac",
        "client": "",
        "x": 140,
        "y": 1080,
        "wires": [
            [
                "889dfb0c.c78f78"
            ]
        ]
    },
    {
        "id": "92e9ccca.ddf17",
        "type": "switch",
        "z": "d6667d7b.35cd6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "d958fbdd.fe1e48"
            ],
            [
                "fff6105c.3c2f6"
            ]
        ]
    },
    {
        "id": "fff6105c.3c2f6",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "brantevik-widget web socket out",
        "links": [
            "8f5c3594.065be8"
        ],
        "x": 715,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3d111ea0.e0d7e2",
        "type": "subflow:adce79c2.bd6fa8",
        "z": "d6667d7b.35cd6",
        "name": "",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b19e36ee.345798",
        "type": "switch",
        "z": "2b074b3a.632fb4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "3d600dd.1fe0cf2"
            ],
            [
                "187857b3.a24488"
            ]
        ]
    },
    {
        "id": "3d600dd.1fe0cf2",
        "type": "link out",
        "z": "2b074b3a.632fb4",
        "name": "brantevik-widget archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 695,
        "y": 540,
        "wires": []
    },
    {
        "id": "6a06a119.c28c5",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var archiveRequestList = [];\n        var archiveList = [];\n        function getArchive(hours)\n        { \n            if (validArchiveData)\n            {\n                var width = $(\"#status\").width() * 0.92;\n                var height = $(\"#status\").height() * 0.885;\n                historyPlotHeightRatio = height / width;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                $(\"#status\").hide();\n                $(\"#historyChartContainer\").show();\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2,historyPlotTrace3], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n                return;\n            }\n            $(\"#historyButton\").hide();\n            $(\"#dataFetchMessage\").text('Hämtar data...');\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : 'blinky-DS18B20',\n                name : '01', \n                attr : ['tempB','tempA'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n/*\n            archiveRequestList[1] = \n            {\n                deviceType : 'blinky-wind',\n                name : 'Kallis', \n                attr : ['windSpeed2','windDirection2'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n*/\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n        var historyPlotLayout = \n        {\n            plot_bgcolor:\"#ecf2fe\",\n            paper_bgcolor:\"#ecf2fe\",\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15,\"orientation\": \"h\"},\n            height      : '100',\n            width       : '200',\n            xaxis       :\n            {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                type: 'date',\n                tickformat: '%d-%m %H:%M', // For more time formatting types, see: https://github.com/d3/d3-time-format/blob/master/README.md\n                fixedrange      : true\n            },\n            yaxis:\n            {\n                title           : '',\n                titlefont       : {color: 'black'},\n                tickfont        : {color: 'black'},\n                gridcolor       : 'grey',\n                zerolinecolor   : 'grey',\n                linecolor       : 'grey',\n                fixedrange      : true\n//                    range           : [0,30],\n//                    dtick           :  5\n\n            },\n            margin: \n            {\n                l: 35,\n                r: 5,\n                b: 20,\n                t: 1,\n                pad: 0\n            }\n        };\n        var historyPlotTrace1 = \n        {\n            x: [],\n            y: [],\n            name: 'Hav',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#557a95',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace2 = \n        {\n            x: [],\n            y: [],\n            name: 'Luft',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#f2a31f',width:2},\n            visible: true\n\n        };\n/*\n        var historyPlotTrace3 = \n        {\n            x: [],\n            y: [],\n            text : [],\n            name: 'Vind',\n            hovertemplate: '<b>%{text}</b> %{y}m/S',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'red',width:2},\n            visible: true\n\n        };\n*/\n        var historyPlotHeightRatio = 1.0;\n        function plotArchive()\n        {\n            $(\"#dataFetchMessage\").text('');\n            $(\"#historyButton\").show();\n            \n            var width = $(\"#status\").width() * 0.92;\n            var height = $(\"#status\").height() * 0.885;\n            historyPlotHeightRatio = height / width;\n            historyPlotLayout.width = width.toFixed(0);\n            historyPlotLayout.height = height.toFixed(0);\n            \n            $(\"#status\").hide();\n            $(\"#historyChartContainer\").show();\n            validArchiveData = true;\n            historyPlotTrace1.x = [];\n            historyPlotTrace1.y = [];\n            historyPlotTrace2.x = [];\n            historyPlotTrace2.y = [];\n//            historyPlotTrace3.x = [];\n//            historyPlotTrace3.y = [];\n//            historyPlotTrace3.text = [];\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                var y = archiveList[0].trace[ii][archiveList[0].device.attr[0]];\n                historyPlotTrace1.x.push(x);\n                historyPlotTrace1.y.push(y) ;\n                y = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                historyPlotTrace2.x.push(x);\n                historyPlotTrace2.y.push(y) ;\n            }\n/*\n            for (var ii = 0; ii < archiveList[1].trace.length; ++ii)\n            {\n                var x = archiveList[1].trace[ii].timeStamp;\n                var y = archiveList[1].trace[ii][archiveList[1].device.attr[0]];\n                if (y > 0)\n                {\n                    historyPlotTrace3.x.push(x);\n                    historyPlotTrace3.y.push(y);\n                    historyPlotTrace3.text.push(getDirectionText(archiveList[1].trace[ii][archiveList[1].device.attr[1]]));\n                }\n            }\n*/\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n        }\n",
        "output": "str",
        "x": 730,
        "y": 960,
        "wires": [
            [
                "74d3209c.a18f6"
            ]
        ]
    },
    {
        "id": "d958fbdd.fe1e48",
        "type": "link out",
        "z": "d6667d7b.35cd6",
        "name": "kallis-widget archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 715,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4b6e2c95.7040d4",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.turnstile",
        "field": "payload.script.turnstile",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var turnstileArchiveRequestList = [];\n        var turnstileArchiveList = [];\n        function getTurnstileHistory()\n        {\n            var dateField = new Date();\n            dateField.setHours(1);\n            var startDate = dateField.getTime();\n            dateField.setHours(22);\n            var stopDate = dateField.getTime();\n            turnstileArchiveRequestList = [];\n            turnstileArchiveList = [];\n            turnstileArchiveRequestList[0] = \n            {\n                deviceType : 'blinky-turnstile',\n                name : '01', \n                attr : ['numTurns'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getTurnstileArchiveValues();\n        }\n        function getTurnstileArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : turnstileArchiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            turnstileArchiveRequestList.shift();\n            return;\n        }\n        function putTurnstileArchiveValues(data)\n        {\n            turnstileArchiveList.push(data);\n            if (turnstileArchiveRequestList.length > 0)\n            {\n                getTurnstileArchiveValues();\n            }\n            else\n            {\n                if (data.trace == null)\n                {\n                    $( \"#bathersNowId\").text(\"?\");\n                    $( \"#bathersTotalInId\").text(\"?\");\n                    $( \"#bathersLastHourId\").text(\"?\");\n                    return;\n                }\n                if (data.trace.length < 2)\n                {\n                    $( \"#bathersNowId\").text(\"0\");\n                    $( \"#bathersTotalInId\").text(\"0\");\n                    $( \"#bathersLastHourId\").text(\"0\");\n                    return;\n                }\n                var bathersTotalIn = 0;\n                var bathersTotalOut = 0;\n                for (var ib = 1; ib < data.trace.length; ++ib)\n                {\n                    if (data.trace[ib].numTurns > data.trace[ib - 1].numTurns) bathersTotalIn = bathersTotalIn + 1;\n                    if (data.trace[ib].numTurns < data.trace[ib - 1].numTurns) bathersTotalOut = bathersTotalOut + 1;\n                }\n                if (bathersTotalOut > bathersTotalIn ) bathersTotalOut = bathersTotalIn; \n                $( \"#bathersTotalInId\").text(bathersTotalIn.toString());\n                $( \"#bathersNowId\").text((bathersTotalIn - bathersTotalOut).toString());\n                var now = new Date().getTime();\n                var bathersInLastHour = 0;\n                for (var ib = 1; ib < data.trace.length; ++ib)\n                {\n                    if ((now - data.trace[ib].timeStamp) < 3600000)\n                    {\n                        if (data.trace[ib].numTurns > data.trace[ib - 1].numTurns)\n                        {\n                            bathersInLastHour = bathersInLastHour + 1;\n                        }\n                    }\n                }\n                $( \"#bathersLastHourId\").text(bathersInLastHour.toString());\n            }\n        }\n",
        "output": "str",
        "x": 740,
        "y": 920,
        "wires": [
            [
                "6a06a119.c28c5"
            ]
        ]
    },
    {
        "id": "d333b08f.60a6b",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var programStarted = false;\n        var validArchiveData = false;\n\n        function onDocumentReady()\n        {\n/*\n            var picNum =  Math.floor(Math.random() * 22) + 1;\n            if (picNum < 10)\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/brantevikPics/BrantePic0\" + picNum.toString() +\".jpg\");\n            }\n            else\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/brantevikPics/BrantePic\" + picNum.toString() +\".jpg\");\n            }\n*/\n            $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-01.jpg' +'?t=' + new Date().getTime().toString());\n\n            setInterval(function()\n            {\n                $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-01.jpg' +'?t=' + new Date().getTime().toString());\n            }, 60000);\n\n            $(\"#historyChartContainer\").hide();\n            $(window).resize(function()\n            {\n                resizeText();\n            });\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                var webSocketMsg = \n                {\n                    topic     : 'getDevices',\n                    payload   : {},\n                    userID    : userID,\n                };\n                ws.send(JSON.stringify(webSocketMsg));\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    var device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                    device.timeStamp = new Date().getTime();\n                    if ((device.deviceType == \"blinky-DS18B20\")     && (device.name == \"Brantevik\")) updateWaterTemp(device);\n                    if ((device.deviceType == \"blinky-wind\")     && (device.name == \"Brantevik\"))\n                    {\n                        updateWind(device);\n                        updateAirTemp(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getDevices':\n                    if (msg.userID == userID)\n                    {\n                        updateWaterTemp(msg.payload[0]);\n                        updateWind(msg.payload[1]);\n                        updateAirTemp(msg.payload[1]);\n                     }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function getStatus()\n        {\n            $(\"#historyChartContainer\").hide();\n            $(\"#status\").show();\n        }\n        function resizeText()\n        {\n            if($('#status').is(\":visible\")) return;\n            if (validArchiveData)\n            {\n                windowWidth = $( '#historyChartContainer' ).width();\n                var width = $(\"#historyChartContainer\").width() * 0.92;\n                var height = historyPlotHeightRatio * width;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: true});\n                return;\n            }\n        }\n",
        "output": "str",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "5f7cbdf1.80f034"
            ]
        ]
    },
    {
        "id": "20a03ac4.739066",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 700,
        "y": 380,
        "wires": [
            [
                "87ace2e8.f675e"
            ]
        ]
    },
    {
        "id": "87ace2e8.f675e",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"status\" width=\"100%\" align=\"center\">\n        <table id=\"widgetTable\" width=\"100%\" background=\"/img/blinky-webcam/blinky-webcam-01.jpg\" style=\"background-size:100%;background-repeat:no-repeat;background-position:center;\">\n            <tr>\n                <td align='center' width=\"100%\" style=\"padding-top:0vw;padding-bottom:56vw;\"></td> \n            </tr>\n            <!--\n            <tr>\n                <td align='center' width=\"100%\" style=\"padding-top:0vw;padding-bottom:0vw;\">\n                    <span id=\"waterTempDate\" style=\"font-size: 5vw; color:white;\"></span> \n                </td>\n            </tr>\n            <tr>\n                <td width=\"100%\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='airTempLabel' style='font-size: 6vw; color:white;' >Luft</span>\n                            </td>\n                            <td align='right' width=\"60%\" style=\"padding-right:10vw;\"> \n                                <span id='airTemp' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='waterTempLabel' style='font-size: 6vw; color:white;' >Vatten</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='waterTemp' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='windLabel' style='font-size: 6vw; color:white;' >Vindstyrka</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='wind' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='gustsLabel' style='font-size: 6vw; color:white;' >Vindbyar</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='gusts' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='levelLabel' style='font-size: 6vw; color:white;' >Havsnivå</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='level' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            -->\n            <tr>\n                <td align='center' style=\"padding-top:1vw;padding-bottom:1vw;\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerWhite' style=\"font-size: 3vw; color:white;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkWhite' style=\"font-size: 3vw; color: white;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <span id=\"dataFetchMessage\" style=\"font-size: 3vw; color:white;\"></span>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <!--\n                                <button class='btn button-link' id=\"historyButton\" style=\"font-size: 3vw; color:white; border-color:white;\" onclick=\"getArchive(168)\" >Historia</button>\n                                -->\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"historyChartContainer\" width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"100%\">\n                    <div id=\"historyChart\" width=\"100%\" align=\"center\" style=\"border-width: 2px; border-style: solid; border-color: '#557a95'; border-radius: 3vw;background-color: #ecf2fe;\"></div>\n                </td>\n            </tr>\n            <tr>\n                <td align='center' >\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerBlack' style=\"font-size: 3vw; color:black;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkBlack' style=\"font-size: 3vw; color: black;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"tempButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayTemp()\" >Temp.</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"windButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayWind()\" >Vind</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"levelButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayLevel()\" >Nivå</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"allButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayAll()\" >Allt</button>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"backButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"getStatus()\" >tillbaka</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 910,
        "y": 380,
        "wires": [
            [
                "d3be5a17.091488"
            ]
        ]
    },
    {
        "id": "5f7cbdf1.80f034",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateAirTemp(device)\n        {\n//            var time = new Date(device.timeStamp).toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit', second: '2-digit'}).replace(',', '');\n//            $('#waterTempDate').text('Brantevik ' + time);\n            $('#airTemp').text(device.temperature.value.toFixed(0) + ' C');\n        }\n        function updateWaterTemp(device)\n        {\n           var time = new Date(device.timeStamp).toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit', second: '2-digit'}).replace(',', '');\n            $('#waterTempDate').text('Brantevik ' + time);\n            $('#waterTemp').text(device.tempA.value.toFixed(0) + ' C');\n            var level = device.refDistance.value - device.ultraDistanceAvg.value;\n            $('#level').text(level.toFixed(0) + ' cm');\n//            $('#waterTemp').text('?');\n        }\n        function updateWind(device)\n        {\n            $('#wind').text(getDirectionText(device.windDirection1.value) + ' ' + device.windSpeed1.value.toFixed(1) + ' m/s');\n            $('#gusts').text(getDirectionText(device.windDirection2.value) + ' ' + device.gusts.value.toFixed(1) + ' m/s');\n        }\n        function getDirectionText(wd)\n        {\n            var dirText = '';           \n            if ((  0.0 <= wd) && (wd <=  22.5)) dirText = 'N ';\n            if (( 22.5 <  wd) && (wd <=  67.5)) dirText = 'NE';\n            if (( 67.5 <  wd) && (wd <= 112.5)) dirText = 'E ';\n            if ((112.5 <  wd) && (wd <= 157.5)) dirText = 'SE';\n            if ((157.5 <  wd) && (wd <= 202.5)) dirText = 'S ';\n            if ((202.5 <  wd) && (wd <= 247.5)) dirText = 'SW';\n            if ((247.5 <  wd) && (wd <= 292.5)) dirText = 'W ';\n            if ((292.5 <  wd) && (wd <= 337.5)) dirText = 'NW';\n            if ((337.5 <  wd) && (wd <= 360.0)) dirText = 'N ';\n            return dirText;\n        }\n",
        "output": "str",
        "x": 740,
        "y": 300,
        "wires": [
            [
                "280d91d.827076e"
            ]
        ]
    },
    {
        "id": "d3be5a17.091488",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            max-width: 100%;\n            background-color: transparent !important;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n        .button-link \n        {\n            background: none!important;\n            border-type: solid;\n            padding: 2px!important;\n            cursor: pointer;\n        }\n",
        "output": "str",
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "2630746d.107cdc"
            ]
        ]
    },
    {
        "id": "280d91d.827076e",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var archiveRequestList = [];\n        var archiveList = [];\n        function getArchive(hours)\n        { \n            if (validArchiveData)\n            {\n                var width = $(\"#status\").width() * 0.92;\n                var height = $(\"#status\").height() * 0.87;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                $(\"#status\").hide();\n                $(\"#historyChartContainer\").show();\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2, historyPlotTrace3, historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n                return;\n            }\n            $(\"#historyButton\").hide();\n            $(\"#dataFetchMessage\").text('Hämtar data...');\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            if (startDate < 1627166453473) startDate = 1627166453473; //when ultra distance was added\n            archiveRequestList[0] = \n            {\n                deviceType : 'blinky-DS18B20',\n                name : 'Brantevik', \n                attr : ['tempA','ultraDistanceAvg','refDistance'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            archiveRequestList[1] = \n            {\n                deviceType : 'blinky-wind',\n                name : 'Brantevik', \n                attr : ['temperature','windSpeed2','windDirection2','gusts'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n        var historyPlotLayout = \n        {\n            plot_bgcolor:\"#ecf2fe\",\n            paper_bgcolor:\"#ecf2fe\",\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15,\"orientation\": \"h\"},\n            height      : '100',\n            width       : '200',\n            xaxis       :\n            {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                type: 'date',\n                tickformat: '%d-%m %H:%M', // For more time formatting types, see: https://github.com/d3/d3-time-format/blob/master/README.md\n                fixedrange      : true,\n                dtick : 86400000\n            },\n            yaxis:\n            {\n                title           : '',\n                titlefont       : {color: 'black'},\n                tickfont        : {color: 'black'},\n                gridcolor       : 'grey',\n                zerolinecolor   : 'grey',\n                linecolor       : 'grey',\n                fixedrange      : true\n//                    range           : [0,30],\n//                    dtick           :  5\n\n            },\n            margin: \n            {\n                l: 35,\n                r: 5,\n                b: 25,\n                t: 1,\n                pad: 0\n            }\n        };\n        var historyPlotTrace1 = \n        {\n            x: [],\n            y: [],\n            name: 'Hav (C)',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#557a95',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace2 = \n        {\n            x: [],\n            y: [],\n            name: 'Luft (C)',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#f2a31f',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace3 = \n        {\n            x: [],\n            y: [],\n            text: [],\n            name: 'Vind (m/s)',\n            hovertemplate: '<b>%{text}</b> %{y}m/S',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'red',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace4 = \n        {\n            x: [],\n            y: [],\n            name: 'byar (m/s)',\n            hovertemplate: '%{y}cm',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'black',width:1, dash: 'dot',},\n            visible: true\n\n        };\n        var historyPlotTrace5 = \n        {\n            x: [],\n            y: [],\n            name: 'nivå (cm)',\n            hovertemplate: '%{y}cm',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'green',width:2},\n            visible: true\n\n        };\n         var historyPlotHeightRatio = 1.0;\n        function plotArchive()\n        {\n            $(\"#dataFetchMessage\").text('');\n            $(\"#historyButton\").show();\n            \n            var width = $(\"#status\").width() * 0.92;\n            var height = $(\"#status\").height() * 0.87;\n            historyPlotHeightRatio = height / width;\n            historyPlotLayout.width = width.toFixed(0);\n            historyPlotLayout.height = height.toFixed(0);\n            \n            $(\"#status\").hide();\n            $(\"#historyChartContainer\").show();\n            validArchiveData = true;\n            historyPlotTrace1.x = [];\n            historyPlotTrace1.y = [];\n            historyPlotTrace2.x = [];\n            historyPlotTrace2.y = [];\n            historyPlotTrace3.x = [];\n            historyPlotTrace3.y = [];\n            historyPlotTrace3.text = [];\n            historyPlotTrace4.x = [];\n            historyPlotTrace4.y = [];\n            historyPlotTrace4.text = [];\n            historyPlotTrace5.x = [];\n            historyPlotTrace5.y = [];\n            var waterTempBeginTime = 1627166453473; //10pm July 24 2021 is 1627158411481\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                var y = archiveList[0].trace[ii][archiveList[0].device.attr[0]];\n                if ((x > waterTempBeginTime) && (y > 0))\n                {\n                    historyPlotTrace1.x.push(x);\n                    historyPlotTrace1.y.push(y) ;\n                }\n            }\n            for (var ii = 0; ii < archiveList[1].trace.length; ++ii)\n            {\n                var x = archiveList[1].trace[ii].timeStamp;\n                if (x > waterTempBeginTime)\n                {\n                    historyPlotTrace2.x.push(x);\n                    historyPlotTrace2.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[0]]) ;\n                    historyPlotTrace3.x.push(x);\n                    historyPlotTrace3.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[1]]) ;\n                    historyPlotTrace3.text.push(getDirectionText(archiveList[1].trace[ii][archiveList[1].device.attr[2]]));\n                    historyPlotTrace4.x.push(x);\n                    historyPlotTrace4.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[3]]) ;\n                    historyPlotTrace4.text.push(getDirectionText(archiveList[1].trace[ii][archiveList[1].device.attr[2]]));\n                }\n            }\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                var ultraDistanceAvg = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                var refDistance      = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                if (x > waterTempBeginTime)\n                {\n                    historyPlotTrace5.x.push(x);\n                    historyPlotTrace5.y.push(refDistance - ultraDistanceAvg) ;\n                }\n            }\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2,historyPlotTrace3,historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n        }\n        function displayTemp()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayWind()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace3,historyPlotTrace4], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayLevel()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayAll()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2, historyPlotTrace3, historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n",
        "output": "str",
        "x": 710,
        "y": 340,
        "wires": [
            [
                "20a03ac4.739066"
            ]
        ]
    },
    {
        "id": "65845423.6009ec",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Havstemperatur",
        "output": "str",
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "c1046753.6f8aa8"
            ]
        ]
    },
    {
        "id": "d1840b4.79672f8",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "seaYellow.png",
        "output": "str",
        "x": 450,
        "y": 1200,
        "wires": [
            [
                "65845423.6009ec"
            ]
        ]
    },
    {
        "id": "c1046753.6f8aa8",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "956982b3.561d5"
            ]
        ]
    },
    {
        "id": "956982b3.561d5",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 720,
        "y": 1240,
        "wires": [
            [
                "bb2ec7de.cae188"
            ]
        ]
    },
    {
        "id": "bb2ec7de.cae188",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card-body' align=\"center\">\n                    <div class='row'>\n                        <div class='col-md-12'>\n                            <div style=\"height: 45vw; max-height:45vw; overflow:hidden;\">\n                                <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0;background: #9eb5c7;\" src=\"/sea-temp-widget\" allowtransparency=\"true\"></iframe>\n                            </div>\n                       </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 950,
        "y": 1240,
        "wires": [
            [
                "882d2b4.8c75ad8"
            ]
        ]
    },
    {
        "id": "5bac383a.4b8808",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/havstemperatur",
        "url": "/havstemperatur",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1200,
        "wires": [
            [
                "d1840b4.79672f8"
            ]
        ]
    },
    {
        "id": "ae4be6f.be36d18",
        "type": "subflow:ca529822.9112f8",
        "z": "d6667d7b.35cd6",
        "name": "",
        "x": 1350,
        "y": 1240,
        "wires": []
    },
    {
        "id": "882d2b4.8c75ad8",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: white !important;\n            margin: auto;\n            padding-left:1vw;\n            padding-right:1vw;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:1vw;\n          padding-bottom:1vw;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1090,
        "y": 1240,
        "wires": [
            [
                "92117d21.5c101"
            ]
        ]
    },
    {
        "id": "92117d21.5c101",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" width=\"30%\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" width=\"10%\" style=\"padding-right:1vw;\"/><span  style=\"font-size: 4vw;\">{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1220,
        "y": 1240,
        "wires": [
            [
                "ae4be6f.be36d18"
            ]
        ]
    },
    {
        "id": "e1511b17.081838",
        "type": "subflow:ca529822.9112f8",
        "z": "d6667d7b.35cd6",
        "name": "",
        "x": 1350,
        "y": 100,
        "wires": []
    },
    {
        "id": "1d1da4e8.8b6d8b",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div style=\"padding-top:10px;\" >\n        <table width=\"100%\" background=\"/img/longaBryggan.png\" style=\"background-repeat: no-repeat;background-size: 100% 15vw;\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle; padding-left:2vw; padding-top:2vw; padding-bottom:2vw;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon.png\" width=\"40%\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                </td>\n                <td style=\"text-align:right; vertical-align:middle; padding-right:2vw;\" width=\"20%\">\n                   <a href=\"https://www.bjerredssaltsjobad.se/sv\" >\n                       <img src=\"/img/bastuYellow.png\" width=\"40%\"/>\n                   </a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1220,
        "y": 100,
        "wires": [
            [
                "e1511b17.081838"
            ]
        ]
    },
    {
        "id": "cf1fb066.d7c3b",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: white !important;\n            margin: auto;\n            padding-left:25px;\n            padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "1d1da4e8.8b6d8b"
            ]
        ]
    },
    {
        "id": "64ab936d.ef321c",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card'>\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Bjerreds Saltsjöbad Väder</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <div class='row'>\n                                <div class='col-md-12'>\n\n                                    <div style=\"height: 60vw; overflow:hidden;\">\n                                        <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0;background: #9eb5c7;\" src=\"/kallis-widget\" allowtransparency=\"true\"></iframe>\n                                    </div>\n                               </div>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 950,
        "y": 100,
        "wires": [
            [
                "cf1fb066.d7c3b"
            ]
        ]
    },
    {
        "id": "51b6e9f4.b38788",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 720,
        "y": 100,
        "wires": [
            [
                "64ab936d.ef321c"
            ]
        ]
    },
    {
        "id": "2bd10c3e.6d0764",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 730,
        "y": 60,
        "wires": [
            [
                "51b6e9f4.b38788"
            ]
        ]
    },
    {
        "id": "503e3655.639f08",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Bjerreds Saltsjöbad",
        "output": "str",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "2bd10c3e.6d0764"
            ]
        ]
    },
    {
        "id": "c20ce174.05c11",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 450,
        "y": 60,
        "wires": [
            [
                "503e3655.639f08"
            ]
        ]
    },
    {
        "id": "7bfc49d4.21b368",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/kallis",
        "url": "/kallis",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "c20ce174.05c11"
            ]
        ]
    },
    {
        "id": "4c53b9bb.f8fd78",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Havstemperatur",
        "output": "str",
        "x": 440,
        "y": 1360,
        "wires": [
            [
                "ce885558.68b738"
            ]
        ]
    },
    {
        "id": "ce885558.68b738",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function resizeText()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n        function getStatus()\n        {\n        }\n",
        "output": "str",
        "x": 730,
        "y": 1360,
        "wires": [
            [
                "983a60f1.4bd54"
            ]
        ]
    },
    {
        "id": "983a60f1.4bd54",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 720,
        "y": 1400,
        "wires": [
            [
                "c73fbf23.54042"
            ]
        ]
    },
    {
        "id": "c73fbf23.54042",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"100%\"  align=\"center\">\n                    <span style=\"font-size: 5vw; color:white;\">Live data from remote client sites</span> \n                </td>\n            </tr>\n            <tr>\n                <td  width=\"100%\">\n                    <table width=\"100%\">\n                        <tr >\n                            <td width=\"50%\" style=\"padding-right:1vw;\">\n                                <div style=\"height: 45vw; overflow:hidden;\">\n                                    <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0;background:none transparent;vertical-align: middle;\" src=\"/mybrantevik-widget\" allowtransparency=\"true\"></iframe>\n                                </div>\n                            </td>\n                            <td  width=\"50%\" style=\"padding-left:1vw;\">\n                                <div style=\"height: 45vw; overflow:hidden;\" >\n                                    <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0; background:none transparent;\" src=\"/kallis-widget\" allowtransparency=\"true\"></iframe>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 930,
        "y": 1400,
        "wires": [
            [
                "95804aa.45757b8"
            ]
        ]
    },
    {
        "id": "ca497535.b76e48",
        "type": "http in",
        "z": "d6667d7b.35cd6",
        "name": "/sea-temp-widget",
        "url": "/sea-temp-widget",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1360,
        "wires": [
            [
                "4c53b9bb.f8fd78"
            ]
        ]
    },
    {
        "id": "95804aa.45757b8",
        "type": "template",
        "z": "d6667d7b.35cd6",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            max-width: 100%;\n            background-color: transparent !important;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n        .button-link \n        {\n            background: none!important;\n            border-type: solid;\n            padding: 2px!important;\n            cursor: pointer;\n        }\n",
        "output": "str",
        "x": 1070,
        "y": 1400,
        "wires": [
            [
                "d3856821.556af8"
            ]
        ]
    },
    {
        "id": "d3856821.556af8",
        "type": "subflow:adce79c2.bd6fa8",
        "z": "d6667d7b.35cd6",
        "name": "",
        "x": 1210,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a91cdcd0.61dc6",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "blinky-webcam mqtt",
        "links": [
            "416a2a7a.685b94",
            "8f53ee48.a6ce7",
            "b7a01bb7.010988",
            "fb8b1545.8b1a38"
        ],
        "x": 775,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cbfd6d0b.ae8cd",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/blinky-webcam/websocket",
        "server": "dddd1a95.f87278",
        "client": "",
        "x": 1060,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fb8b1545.8b1a38",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "blinky webcam input socket",
        "links": [
            "1e710224.de723e",
            "224d9b05.f92104",
            "a91cdcd0.61dc6"
        ],
        "x": 895,
        "y": 1000,
        "wires": [
            [
                "cbfd6d0b.ae8cd"
            ]
        ]
    },
    {
        "id": "d8b49ab3.5aa988",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/blinky-webcam/websocket",
        "server": "dddd1a95.f87278",
        "client": "",
        "x": 150,
        "y": 2100,
        "wires": [
            [
                "e6d1a4ad.2186e8"
            ]
        ]
    },
    {
        "id": "493e0039.9ac26",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-webcam';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2900,
        "wires": [
            [
                "ba7fb378.f7ed1"
            ]
        ]
    },
    {
        "id": "9cb16c8c.482af",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky WebCam {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 2980,
        "wires": [
            [
                "5243af86.fdf0c"
            ]
        ]
    },
    {
        "id": "ba7fb378.f7ed1",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "cameraYellow.png",
        "output": "str",
        "x": 390,
        "y": 2940,
        "wires": [
            [
                "9cb16c8c.482af"
            ]
        ]
    },
    {
        "id": "9236db35.8c7d98",
        "type": "subflow:8341090a.df9758",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1310,
        "y": 3100,
        "wires": []
    },
    {
        "id": "d34888e9.e53828",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-webcam",
        "url": "/blinky-webcam",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 2900,
        "wires": [
            [
                "c09cee4d.2c0e5"
            ]
        ]
    },
    {
        "id": "c09cee4d.2c0e5",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Allowed Roles",
        "func": "msg.payload.allowedRoles = ['appView'];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 2940,
        "wires": [
            [
                "5f95b899.241a08"
            ]
        ]
    },
    {
        "id": "5f95b899.241a08",
        "type": "subflow:2d027d69.1fdeb2",
        "z": "ffe6c625.6b4a58",
        "x": 140,
        "y": 2980,
        "wires": [
            [
                "493e0039.9ac26"
            ]
        ]
    },
    {
        "id": "5ff9b161.b23a4",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Webcam",
        "topic": "blinky-lite-v2/blinky-webcam/+/image",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "nl": false,
        "rap": false,
        "x": 210,
        "y": 660,
        "wires": [
            [
                "9053c41d.fd4868"
            ]
        ]
    },
    {
        "id": "9053c41d.fd4868",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nmsg['filename'] = 'html-static/img/blinky-webcam/' + device.deviceType + '-' + device.name + '.jpg';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 720,
        "wires": [
            [
                "bfd2291c.645028"
            ]
        ]
    },
    {
        "id": "a73244ae.eb9828",
        "type": "file",
        "z": "8475ab9.3d26058",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 170,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "bfd2291c.645028",
        "type": "base64",
        "z": "8475ab9.3d26058",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "a73244ae.eb9828"
            ]
        ]
    },
    {
        "id": "5243af86.fdf0c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var pingInterval = 5000;\n        var lastPing = 0;\n        var editingConfig = false;\n        var snapshotViewShowing = true;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            enableConfig(false);\n            $('#configCardBody').hide();\n            toggleSnapshotView();\n            $('#configCardBody').hide();\n            $('#takeSnapShotButton').prop(\"disabled\", true);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n//            console.log(msg);\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n            if (device.manualTrigger.value == 0)\n            {\n                $('#takeSnapShotButton').prop(\"disabled\", false);\n            }\n            else\n            {\n                $('#takeSnapShotButton').prop(\"disabled\", true);\n            }\n            if (device.triggerMode.value == 0)\n            {\n                $('#takeSnapShotButton').show();\n            }\n            else\n            {\n                $('#takeSnapShotButton').hide();\n            }\n\n            if(!editingConfig)\n            {\n                $('#triggerMode').val(device.triggerMode.value);\n                $('#imageDelay').val(device.imageDelay.value.toString());\n                $('#wValue').val(device.config.w.value.toString());\n                $('#wEnable').prop(\"checked\", device.config.w.enabled);\n                $('#rotSelect').val(device.config.rot.value.toString());\n                $('#rotEnable').prop(\"checked\", device.config.rot.enabled);\n                $('#effectsSelect').val(device.config.ifx.value.toString());\n                $('#effectsEnable').prop(\"checked\", device.config.ifx.enabled);\n                $('#exposureSelect').val(device.config.ex.value.toString());\n                $('#exposureEnable').prop(\"checked\", device.config.ex.enabled);\n                $('#awbSelect').val(device.config.awb.value.toString());\n                $('#awbEnable').prop(\"checked\", device.config.awb.enabled);\n                $('#mmSelect').val(device.config.mm.value.toString());\n                $('#mmEnable').prop(\"checked\", device.config.mm.enabled);\n                $('#shValue').val(device.config.sh.value.toString());\n                $('#shEnable').prop(\"checked\", device.config.sh.enabled);\n                $('#coValue').val(device.config.co.value.toString());\n                $('#coEnable').prop(\"checked\", device.config.co.enabled);\n                $('#brValue').val(device.config.br.value.toString());\n                $('#brEnable').prop(\"checked\", device.config.br.enabled);\n                $('#saValue').val(device.config.sa.value.toString());\n                $('#saEnable').prop(\"checked\", device.config.sa.enabled);\n                $('#ISOValue').val(device.config.ISO.value.toString());\n                $('#ISOEnable').prop(\"checked\", device.config.ISO.enabled);\n                $('#evValue').val(device.config.ev.value.toString());\n                $('#evEnable').prop(\"checked\", device.config.ev.enabled);\n                $('#ssValue').val(device.config.ss.value.toString());\n                $('#ssEnable').prop(\"checked\", device.config.ss.enabled);\n                $('#cfxValue').val(device.config.cfx.value.toString());\n                $('#cfxEnable').prop(\"checked\", device.config.cfx.enabled);\n            }\n\n            \n            $('#raspistillImg').attr('src','img/blinky-webcam/' + device.deviceType + '-' + device.name + '.jpg' +'?t=' + device.timeStamp.toString() );\n            $('#raspistillImgLink').attr('href','img/blinky-webcam/' + device.deviceType + '-' + device.name + '.jpg' +'?t=' + device.timeStamp.toString() );\n\n        }\n        function enableConfig(enable)\n        {\n            $('#wValue').prop(\"disabled\", !enable);\n            $('#wEnable').prop(\"disabled\", !enable);\n            $('#rotSelect').prop(\"disabled\", !enable);\n            $('#rotEnable').prop(\"disabled\", !enable);\n            $('#effectsSelect').prop(\"disabled\", !enable);\n            $('#effectsEnable').prop(\"disabled\", !enable);\n            $('#exposureSelect').prop(\"disabled\", !enable);\n            $('#exposureEnable').prop(\"disabled\", !enable);\n            $('#awbSelect').prop(\"disabled\", !enable);\n            $('#awbEnable').prop(\"disabled\", !enable);\n            $('#mmSelect').prop(\"disabled\", !enable);\n            $('#mmEnable').prop(\"disabled\", !enable);\n            $('#shValue').prop(\"disabled\", !enable);\n            $('#shEnable').prop(\"disabled\", !enable);\n            $('#coValue').prop(\"disabled\", !enable);\n            $('#coEnable').prop(\"disabled\", !enable);\n            $('#brValue').prop(\"disabled\", !enable);\n            $('#brEnable').prop(\"disabled\", !enable);\n            $('#saValue').prop(\"disabled\", !enable);\n            $('#saEnable').prop(\"disabled\", !enable);\n            $('#ISOValue').prop(\"disabled\", !enable);\n            $('#ISOEnable').prop(\"disabled\", !enable);\n            $('#evValue').prop(\"disabled\", !enable);\n            $('#evEnable').prop(\"disabled\", !enable);\n            $('#ssValue').prop(\"disabled\", !enable);\n            $('#ssEnable').prop(\"disabled\", !enable);\n            $('#cfxValue').prop(\"disabled\", !enable);\n            $('#cfxEnable').prop(\"disabled\", !enable);\n           if ( enable)\n            {\n                $('#editConfigButton').text('Stop Editing');\n                $('#configCardBody').show();\n            }\n            else\n            {\n                $('#editConfigButton').text('Configuration');\n                $('#configCardBody').hide();\n            }\n\n        }\n        function editConfig()\n        {\n            editingConfig = !editingConfig;\n            enableConfig(editingConfig);\n            if (!editingConfig)\n            {\n                device.config.w.value = Number($('#wValue').val());\n                device.config.w.enabled = $('#wEnable').prop(\"checked\");\n                device.config.h.value = Math.round(0.75 * device.config.w.value);\n                device.config.h.enabled = device.config.w.enabled\n                device.config.rot.value = $('#rotSelect').val();\n                device.config.rot.enabled = $('#rotEnable').prop(\"checked\");\n                device.config.ifx.value = $('#effectsSelect').val();\n                device.config.ifx.enabled = $('#effectsEnable').prop(\"checked\");\n                device.config.ex.value = $('#exposureSelect').val();\n                device.config.ex.enabled = $('#exposureEnable').prop(\"checked\");\n                device.config.awb.value = $('#awbSelect').val();\n                device.config.awb.enabled = $('#awbEnable').prop(\"checked\");\n                device.config.mm.value = $('#mmSelect').val();\n                device.config.mm.enabled = $('#mmEnable').prop(\"checked\");\n                device.config.sh.value = Number($('#shValue').val());\n                device.config.sh.enabled = $('#shEnable').prop(\"checked\");\n                device.config.co.value = Number($('#coValue').val());\n                device.config.co.enabled = $('#coEnable').prop(\"checked\");\n                device.config.br.value = Number($('#brValue').val());\n                device.config.br.enabled = $('#brEnable').prop(\"checked\");\n                device.config.sa.value = Number($('#saValue').val());\n                device.config.sa.enabled = $('#saEnable').prop(\"checked\");\n                device.config.ISO.value = Number($('#ISOValue').val());\n                device.config.ISO.enabled = $('#ISOEnable').prop(\"checked\");\n                device.config.ev.value = Number($('#evValue').val());\n                device.config.ev.enabled = $('#evEnable').prop(\"checked\");\n                device.config.ss.value = Number($('#ssValue').val());\n                device.config.ss.enabled = $('#ssEnable').prop(\"checked\");\n                device.config.cfx.value = $('#cfxValue').val();\n                device.config.cfx.enabled = $('#cfxEnable').prop(\"checked\");\n                device.triggerMode.value = $('#triggerMode').val();\n                device.imageDelay.value = $('#imageDelay').val();\n                if (device.triggerMode.value > 0)\n                {\n                    $('#takeSnapShotButton').hide();\n                }\n                else\n                {\n                    $('#takeSnapShotButton').show();\n                }\n\n                sendSetting();\n            }\n        }\n        function toggleSnapshotView()\n        {\n            snapshotViewShowing = !snapshotViewShowing;\n            if(snapshotViewShowing)\n            {\n                $('#snapshotCardBody').show();\n            }\n            else\n            {\n                $('#snapshotCardBody').hide();\n            }\n\n        }\n        function takeSnapShot()\n        {\n            device.manualTrigger.value = 1;\n            sendSetting();\n            $('#takeSnapShotButton').prop(\"disabled\", true);\n            \n        }\n",
        "output": "str",
        "x": 730,
        "y": 2900,
        "wires": [
            [
                "2f3b8ace.059a46"
            ]
        ]
    },
    {
        "id": "b6ebc368.a7249",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 720,
        "y": 2980,
        "wires": [
            [
                "6691d105.0d0d5"
            ]
        ]
    },
    {
        "id": "6691d105.0d0d5",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.snapshot",
        "field": "payload.html.snapshot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <button class='btn btn-block card-button big-text' id=\"toggleSnapshotViewButton\" onclick=\"toggleSnapshotView()\" >Snapshot</button>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id='snapshotCardBody'>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td>\n                                            <a href='img/blinky-webcam/BlinkyLogo.png' target='_blank' id='raspistillImgLink' download>\n                                                <img src='img/blinky-webcam/BlinkyLogo.png' id=\"raspistillImg\" width='800' height='600'/>\n                                            </a>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td width='100%' align='center'>\n                                            <span  class='card-text' id='snapshotTimeStamp'>Blinky Time</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                        <div class='row'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-4'>\n                                <button class='btn btn-block card-button big-text' id=\"takeSnapShotButton\" onclick=\"takeSnapShot()\" >Snap</button>\n                             </div>\n                            <div class='col-md-4'>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 1060,
        "y": 2900,
        "wires": [
            [
                "2f3015ff.65af4a"
            ]
        ]
    },
    {
        "id": "2f3015ff.65af4a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.config",
        "field": "payload.html.config",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <button class='btn btn-block card-button big-text' id=\"editConfigButton\" onclick=\"editConfig('')\" >Configuration</button>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id='configCardBody'>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Image Delay (mS)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"imageDelay\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" />\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Trigger Mode</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\"  id=\"triggerMode\" >\n                                            <option value=\"0\">Manual</option>\n                                            <option value=\"1\">Periodic</option>\n                                        </select>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Width</span>\n                                        <span >(64 to 3280)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"wValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"wEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Rotation</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"rotSelect\">\n                                          <option value=\"0\">0</option>\n                                          <option value=\"90\">90</option>\n                                          <option value=\"180\">180</option>\n                                          <option value=\"270\">270</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"rotEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Effects</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"effectsSelect\">\n                                            <option value=\"none\">none</option>\n                                            <option value=\"negative\">negative</option>\n                                            <option value=\"solarise\">solarise</option>\n                                            <option value=\"sketch\">sketch</option>\n                                            <option value=\"denoise\">denoise</option>\n                                            <option value=\"emboss\">emboss</option>\n                                            <option value=\"oilpaint\">oilpaint</option>\n                                            <option value=\"hatch\">hatch</option>\n                                            <option value=\"gpen\">gpen</option>\n                                            <option value=\"pastel\">pastel</option>\n                                            <option value=\"watercolour\">water colour</option>\n                                            <option value=\"film\">film</option>\n                                            <option value=\"blur\">blur</option>\n                                            <option value=\"saturation\">saturation</option>\n                                            <option value=\"colourswap\">colour swap</option>\n                                            <option value=\"washedout\">washed out</option>\n                                            <option value=\"posterise\">posterise</option>\n                                            <option value=\"colourpoint\">colour point</option>\n                                            <option value=\"colourbalance\">colour balance</option>\n                                            <option value=\"cartoon\">cartoon</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"effectsEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Exposure</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"exposureSelect\">\n                                            <option value=\"off\">off</option>\n                                            <option value=\"auto\">auto</option>\n                                            <option value=\"night\">night</option>\n                                            <option value=\"nightpreview\">nightpreview</option>\n                                            <option value=\"backlight\">backlight</option>\n                                            <option value=\"spotlight\">spotlight</option>\n                                            <option value=\"sports\">sports</option>\n                                            <option value=\"snow\">snow</option>\n                                            <option value=\"beach\">beach</option>\n                                            <option value=\"verylong\">verylong</option>\n                                            <option value=\"fixedfps\">fixedfps</option>\n                                            <option value=\"antishake\">antishake</option>\n                                            <option value=\"fireworks\">fireworks</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"exposureEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >AWB</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"awbSelect\">\n                                            <option value=\"off\">off</option>\n                                            <option value=\"auto\">auto</option>\n                                            <option value=\"sun\">sun</option>\n                                            <option value=\"cloud\">cloud</option>\n                                            <option value=\"shade\">shade</option>\n                                            <option value=\"tungsten\">tungsten</option>\n                                            <option value=\"fluorescent\">fluorescent</option>\n                                            <option value=\"incandescent\">incandescent</option>\n                                            <option value=\"flash\">flash</option>\n                                            <option value=\"horizon\">horizon</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"awbEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Meter Modes</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"mmSelect\">\n                                            <option value=\"average\">average</option>\n                                            <option value=\"spot\">spot</option>\n                                            <option value=\"backlit\">backlit</option>\n                                            <option value=\"matrix\">matrix</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"mmEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Sharpness</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"shValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"shEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Contrast</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"coValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"coEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Brightness</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"brValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"brEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Saturation</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"saValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"saEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >ISO</span>\n                                        <span >(100 to 800)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"ISOValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"ISOEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >EV-Comp</span>\n                                        <span >(-10 to 10)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"evValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"evEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Shutter Speed</span>\n                                        <span >(uS 0 to 60000)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"ssValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"ssEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Color effect</span>\n                                        <span >(U:V)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"cfxValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"cfxEnable\"></td>\n                                </tr>\n\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1050,
        "y": 2940,
        "wires": [
            [
                "2b416457.6ab56c"
            ]
        ]
    },
    {
        "id": "2f3b8ace.059a46",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 730,
        "y": 2940,
        "wires": [
            [
                "b6ebc368.a7249"
            ]
        ]
    },
    {
        "id": "2b416457.6ab56c",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1040,
        "y": 2980,
        "wires": [
            [
                "54183aa1.7193d4"
            ]
        ]
    },
    {
        "id": "54183aa1.7193d4",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1050,
        "y": 3020,
        "wires": [
            [
                "3d831886.777078"
            ]
        ]
    },
    {
        "id": "3d831886.777078",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1040,
        "y": 3060,
        "wires": [
            [
                "821823d7.84524"
            ]
        ]
    },
    {
        "id": "821823d7.84524",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.snapshot}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.config}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1030,
        "y": 3100,
        "wires": [
            [
                "9236db35.8c7d98"
            ]
        ]
    },
    {
        "id": "805a52c8.01228",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Wind {{{payload.script.name}}}",
        "output": "str",
        "x": 380,
        "y": 1840,
        "wires": [
            [
                "e6784aed.96eaf8"
            ]
        ]
    },
    {
        "id": "109ce1ec.e9658e",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "windYellow.png",
        "output": "str",
        "x": 390,
        "y": 1800,
        "wires": [
            [
                "805a52c8.01228"
            ]
        ]
    },
    {
        "id": "e6784aed.96eaf8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var programStarted = false;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        var plotConfig = \n        {\n            trace1Title : 'Speed (m/S)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Temp. (C)',\n            trace2Color : '#f2a31f',\n            trace2GridColor : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n\n        function onDocumentReady()\n        {\n            $('#archiveCardId').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                getArchive(4);\n                var webSocketMsg = \n                {\n                    topic     : 'getDevices',\n                    payload   : restfulDevice,\n                    userID    : userID,\n                };\n                ws.send(JSON.stringify(webSocketMsg));\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getDevices':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;\n                        updateDmaReadings();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n",
        "output": "str",
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "2658367a.f6861a"
            ]
        ]
    },
    {
        "id": "9c12bad6.50c278",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.horzbarWidget}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 700,
        "y": 1960,
        "wires": [
            [
                "b0cc0905.685998"
            ]
        ]
    },
    {
        "id": "835ccbf2.e8b0e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.temperatureBar}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.windSpeedGauge}}}\n            </div>\n        </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 1010,
        "y": 1920,
        "wires": [
            [
                "f098776c.c7bc78"
            ]
        ]
    },
    {
        "id": "dd4aa384.2c6fa",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#windSpeed').text(getDirectionText(device.windDirection1.value) + ': '  + device.windSpeed.value.toFixed(1) + ' m/S');\n            $('#windSpeed1').text(getDirectionText(device.windDirection1.value) + ': '  + device.windSpeed1.value.toFixed(1) + ' m/S');\n            $('#windSpeed2').text(getDirectionText(device.windDirection2.value) + ': '  + device.windSpeed2.value.toFixed(1) + ' m/S');\n            $('#gusts').text(getDirectionText(device.windDirection2.value) + ': '  + device.gusts.value.toFixed(1) + ' m/S');\n            $('#temperature').text(device.temperature.value.toFixed(1) + ' C');\n            $('#battery').text(device.vbat.value + ' V');\n            $('#lora').text(device.lora.value + ' dBm');\n            var wd = device.windDirection1.value;\n\n            var windSpeedGaugeConfig = \n                {\n                    lolo            : device.windSpeed.alarm.limits.lolo, \n                    low             : device.windSpeed.alarm.limits.low, \n                    high            : device.windSpeed.alarm.limits.high, \n                    hihi            : device.windSpeed.alarm.limits.hihi, \n                    value           : device.windSpeed.value.toFixed(1), \n                    unit            : device.windSpeed.unit, \n                    textsize        : 38,\n                    label           : getDirectionText(device.windDirection1.value), \n                    lowColor        : '#00ff00', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'windSpeedGaugePlot'\n                };\n            setGaugeWidget(windSpeedGaugeConfig);\n            var temperatureBarConfig = \n                {\n                    lolo            : device.temperature.alarm.limits.lolo, \n                    low             : device.temperature.alarm.limits.low, \n                    high            : device.temperature.alarm.limits.high, \n                    hihi            : device.temperature.alarm.limits.hihi, \n                    value           : device.temperature.value.toFixed(1), \n                    unit            : device.temperature.unit, \n                    textsize        : 38,\n                    label           : 'ultraAmp', \n                    lowColor        : '#0000ff', \n                    mediumColor     : '#00ff00',\n                    highColor       : 'ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'temperatureBarPlot'\n                };\n            setHorzBarWidget(temperatureBarConfig);\n        }\n        function getDirectionText(wd)\n        {\n            var dirText = '';           \n            if ((  0.0 <= wd) && (wd <=  22.5)) dirText = 'N ';\n            if (( 22.5 <  wd) && (wd <=  67.5)) dirText = 'NE';\n            if (( 67.5 <  wd) && (wd <= 112.5)) dirText = 'E ';\n            if ((112.5 <  wd) && (wd <= 157.5)) dirText = 'SE';\n            if ((157.5 <  wd) && (wd <= 202.5)) dirText = 'S ';\n            if ((202.5 <  wd) && (wd <= 247.5)) dirText = 'SW';\n            if ((247.5 <  wd) && (wd <= 292.5)) dirText = 'W ';\n            if ((292.5 <  wd) && (wd <= 337.5)) dirText = 'NW';\n            if ((337.5 <  wd) && (wd <= 360.0)) dirText = 'N ';\n            return dirText;\n        }\n",
        "output": "str",
        "x": 740,
        "y": 1880,
        "wires": [
            [
                "d866962b.d35228"
            ]
        ]
    },
    {
        "id": "f4ee07e.5df66f8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1030,
        "y": 1880,
        "wires": [
            [
                "835ccbf2.e8b0e8"
            ]
        ]
    },
    {
        "id": "1418b482.b606ab",
        "type": "http in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-wind-view",
        "url": "/blinky-wind-view",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1760,
        "wires": [
            [
                "985761d2.a0b08"
            ]
        ]
    },
    {
        "id": "2658367a.f6861a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.gaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n            valueColor = 'black'\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.textsize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + ' ' + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.textsize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 730,
        "y": 1800,
        "wires": [
            [
                "d41f8e85.43d5a"
            ]
        ]
    },
    {
        "id": "b0cc0905.685998",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.windSpeedGauge",
        "field": "payload.html.windSpeedGauge",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Wind Speed</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"windSpeedGaugePlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1060,
        "y": 1760,
        "wires": [
            [
                "dd171b73.ac4638"
            ]
        ]
    },
    {
        "id": "d41f8e85.43d5a",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            valueColor = 'black';\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 740,
        "y": 1840,
        "wires": [
            [
                "dd4aa384.2c6fa"
            ]
        ]
    },
    {
        "id": "dd171b73.ac4638",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.temperatureBar",
        "field": "payload.html.temperatureBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Temperature</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-12'>\n                                <div id=\"temperatureBarPlot\" width=\"100%\" ></div>\n                           </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1060,
        "y": 1800,
        "wires": [
            [
                "b720b77c.992bb8"
            ]
        ]
    },
    {
        "id": "b720b77c.992bb8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='temperatureLabel' >Temperature</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='temperature' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeedLabel' >Wind Speed</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeed1Label' >Wind Speed (2 min)</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed1' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='windSpeed2Label' >Wind Speed (10 min)</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='windSpeed2' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='gustsLabel' >Gusts</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='gusts' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='batteryLabel' >Battery</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='battery' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='50%' >\n                                        <span class='card-text' id='loraLabel' >LoRa</span>\n                                    </td>\n                                    <td width='35%' align='center'>\n                                        <span class='card-text' id='lora' >-100</span>\n                                    </td>\n                                    <td width='15%'>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1040,
        "y": 1840,
        "wires": [
            [
                "f4ee07e.5df66f8"
            ]
        ]
    },
    {
        "id": "f1e4c937.b4bb48",
        "type": "subflow:ca529822.9112f8",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "x": 1450,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f098776c.c7bc78",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1190,
        "y": 1920,
        "wires": [
            [
                "c457c1b.674004"
            ]
        ]
    },
    {
        "id": "c457c1b.674004",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1320,
        "y": 1920,
        "wires": [
            [
                "f1e4c937.b4bb48"
            ]
        ]
    },
    {
        "id": "81ccb4fa.a1b708",
        "type": "websocket out",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-wind-view/websocket",
        "server": "c026b071.1e826",
        "client": "",
        "x": 1260,
        "y": 2060,
        "wires": []
    },
    {
        "id": "cdf75a81.2fb1a8",
        "type": "link in",
        "z": "ffe6c625.6b4a58",
        "name": "blinky-wind-view web socket input",
        "links": [
            "304b3835.9b6918",
            "6d200160.afc65",
            "f0dc9dff.bb6fc",
            "23e88c82.a83354"
        ],
        "x": 1105,
        "y": 2060,
        "wires": [
            [
                "81ccb4fa.a1b708"
            ]
        ]
    },
    {
        "id": "f4402371.03962",
        "type": "json",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "80a71b72.a055a8"
            ]
        ]
    },
    {
        "id": "80a71b72.a055a8",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 2060,
        "wires": [
            [
                "577fc8f0.849228"
            ]
        ]
    },
    {
        "id": "649e6021.8e268",
        "type": "websocket in",
        "z": "ffe6c625.6b4a58",
        "name": "/blinky-wind-view/websocket",
        "server": "c026b071.1e826",
        "client": "",
        "x": 180,
        "y": 2060,
        "wires": [
            [
                "f4402371.03962"
            ]
        ]
    },
    {
        "id": "a92d4c9a.7f5e4",
        "type": "link out",
        "z": "ffe6c625.6b4a58",
        "name": "blinky-wind-view archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 735,
        "y": 2040,
        "wires": []
    },
    {
        "id": "d866962b.d35228",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['windSpeed','windDirection1','windSpeed2','windDirection2','temperature'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : plotConfig.trace1Title,\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color:plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor\n\n                },\n                yaxis2:\n                {\n                    title           : plotConfig.trace2Title,\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color:plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right',\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                text: [],\n                textposition: 'left',\n                name: 'Speed',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace1Color, dash: 'dot'},\n                visible: true\n\n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                text: [],\n                textposition: 'left',\n                name: '10min Avg',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color: plotConfig.trace1Color,width:3},\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Temp. (C)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: { color:  plotConfig.trace2Color,width:3},\n                visible: true\n\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace1.text[ii] = getDirectionText(archiveList[0].trace[ii][archiveList[0].device.attr[1]]) ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]] ;\n                trace2.text[ii] = getDirectionText(archiveList[0].trace[ii][archiveList[0].device.attr[3]]) ;\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[4]];\n            }\n            Plotly.newPlot('archiveChart', [trace1, trace2, trace3], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 710,
        "y": 1920,
        "wires": [
            [
                "9c12bad6.50c278"
            ]
        ]
    },
    {
        "id": "985761d2.a0b08",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-wind';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1760,
        "wires": [
            [
                "109ce1ec.e9658e"
            ]
        ]
    },
    {
        "id": "577fc8f0.849228",
        "type": "switch",
        "z": "ffe6c625.6b4a58",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 2060,
        "wires": [
            [
                "a92d4c9a.7f5e4"
            ],
            [
                "db8bf165.d43ca"
            ]
        ]
    },
    {
        "id": "db8bf165.d43ca",
        "type": "link out",
        "z": "ffe6c625.6b4a58",
        "name": "blinky-wind-view getDevices request",
        "links": [
            "a40b4a37.f67e38",
            "aafed30c.beeb9"
        ],
        "x": 735,
        "y": 2080,
        "wires": []
    },
    {
        "id": "9c6a524.b3b2fb",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 830,
        "y": 2860,
        "wires": [
            [
                "6c2c0c22.4116e4"
            ]
        ]
    },
    {
        "id": "6c2c0c22.4116e4",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Parse query",
        "func": "var newMsg = \n{\n    topic   :   msg.topic,\n    payload:\n    {\n        topic   :   msg.topic,\n        userID  :   msg.userID,\n        payload :  msg.payload[0]\n    }\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2860,
        "wires": [
            [
                "23e88c82.a83354"
            ]
        ]
    },
    {
        "id": "f22bcd6.812bb3",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Prep get Devices Query",
        "func": "msg.payload = \n{\n    $and : [ {deviceType: msg.payload.deviceType}, {name: msg.payload.name} ]};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2860,
        "wires": [
            [
                "9c6a524.b3b2fb"
            ]
        ]
    },
    {
        "id": "23e88c82.a83354",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "getDevices output",
        "links": [
            "cdf75a81.2fb1a8"
        ],
        "x": 1195,
        "y": 2860,
        "wires": []
    },
    {
        "id": "aafed30c.beeb9",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "getDevices input",
        "links": [
            "db8bf165.d43ca"
        ],
        "x": 415,
        "y": 2860,
        "wires": [
            [
                "f22bcd6.812bb3"
            ]
        ]
    },
    {
        "id": "7203437d.25395c",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" align=\"center\">\n        <table width=\"900px\">\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;' >\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/havstemperatur\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/seaYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Havstemperatur</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/brantevik\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/brantevikYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Brantevik Weather</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/blinky-wind-view?name=Brantevik\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/windYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Brantevik Wind</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/kallis-bathers\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/bastuYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Kallis Bathers</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/kallis\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/seaYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Kallis Weather</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n        </table>\n        <hr>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 2320,
        "wires": [
            [
                "691c497d.c8ec08"
            ]
        ]
    },
    {
        "id": "691c497d.c8ec08",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 980,
        "y": 2320,
        "wires": [
            [
                "8c72512f.4e3b2"
            ]
        ]
    },
    {
        "id": "8c72512f.4e3b2",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1130,
        "y": 2320,
        "wires": []
    },
    {
        "id": "a554f26e.ad5b1",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Remote Sensing",
        "output": "str",
        "x": 450,
        "y": 2320,
        "wires": [
            [
                "7203437d.25395c"
            ]
        ]
    },
    {
        "id": "72d1d4d3.b55dac",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/remote-sensing",
        "url": "/remote-sensing",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2320,
        "wires": [
            [
                "a554f26e.ad5b1"
            ]
        ]
    },
    {
        "id": "3f21e1b7.b5c19e",
        "type": "function",
        "z": "ffe6c625.6b4a58",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = msg.payload.name\nmsg.payload['script']['deviceType'] = 'blinky-ssr-bake';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 60,
        "wires": [
            [
                "495e4550.f929ec"
            ]
        ]
    },
    {
        "id": "828edb09.384608",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SSR Bake {{{payload.script.name}}}",
        "output": "str",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "493fb622.d8afc8"
            ]
        ]
    },
    {
        "id": "daa1b6ce.430348",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor() \n            {\n                this.plotStartTime = new Date().getTime();\n                this.plotLength = 600000;\n                this.htmlId = 'historyStripChart';\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : '500',\n                    width       : '',\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : 'Temp (C)',\n                        titlefont       : {color: '#0000ff'},\n                        tickfont        : {color: '#0000ff'},\n                        gridcolor       : '#9999ff',\n                        zerolinecolor   : '#9999ff',\n                        linecolor       : '#9999ff',\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : 'Duty Factor',\n                        titlefont       : {color: '#ff0000'},\n                        tickfont        : {color:'#ff0000'},\n                        gridcolor       : '#ff9999',\n                        zerolinecolor   : '#ff9999',\n                        linecolor       : '#ff9999',\n                        overlaying: 'y',\n                        side: 'right',\n                        range: [0,100]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Temperature',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#0000ff'}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Ramp Temperature',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#00ff00'}\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Duty Factor',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#ff00ff'}\n                };\n                this.trace4 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Avg Duty Factor',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: '#00ffff'}\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt, trace3Pt, trace4Pt)\n            {\n//                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                        this.trace4.x.shift();\n                        this.trace4.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                this.trace4.x.push(now);\n                this.trace4.y.push(trace4Pt);\n                Plotly.newPlot(this.htmlId, [this.trace1, this.trace2, this.trace3, this.trace4], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 100,
        "wires": [
            [
                "e29616e2.2e2988"
            ]
        ]
    },
    {
        "id": "493fb622.d8afc8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var mqttDevice = null;\n        var device = null;\n        var archiveRequestList = [];\n        var archiveList = [];\n        var pingInterval = 5000;\n        var lastPing = 0;\n\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n\n        let historyStripChart = new StripChart();\n        var ramp1RateChanged = false;\n        var ramp1TempChanged = false;\n        var ramp1TimeChanged = false;\n        var ramp2RateChanged = false;\n        var ramp2TempChanged = false;\n        var ramp2TimeChanged = false;\n        var ramp3RateChanged = false;\n        var ramp3TempChanged = false;\n        var ramp3TimeChanged = false;\n        var expertSettingsVisible = true;\n        var segment1Visible = true;\n        var segment2Visible = true;\n        var segment3Visible = true;\n\n        var num50HzCyclesChanged = false;\n        var propKChanged = false;\n        var intKChanged = false;\n        var dutyFactorSetChanged = false;\n        var numTempSamplesChanged = false;\n        var arcPeriodChanged = false;\n\n        var changingState = false;\n        \n        function onDocumentReady()\n        {\n            setRemoteApp(true);\n            if (remoteApp)\n            {\n                getCreds();\n                setInterval(function(){getCreds();}, 1000);\n            }\n            else\n            {\n                $('#userCardId').hide();\n            }\n            $('#archiveCardId').hide();\n            setInterval(function()\n            {\n                var now = new Date().getTime();\n                if ((now - lastPing) > pingInterval)\n                {\n                    lastPing = now;\n                    var actionMsg = \n                        {\n                            topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/ping',\n                            payload : true\n                        };\n                    sendActionMsg('ping', 'ping', actionMsg);\n               }\n            }, 1000);\n            $('#ramp1RateButton').hide();\n            $('#ramp1TempButton').hide();\n            $('#ramp1TimeButton').hide();\n            $('#ramp2RateButton').hide();\n            $('#ramp2TempButton').hide();\n            $('#ramp2TimeButton').hide();\n            $('#ramp3RateButton').hide();\n            $('#ramp3TempButton').hide();\n            $('#ramp3TimeButton').hide();\n            $('#expertSettingsCard').hide();\n            expertSettingsVisible = false;\n            $('#expertSettingsButton').text(\"Show\");\n\n            $('#segment1Card').hide();\n            segment1Visible = false;\n            $('#segment1Button').text(\"Show\");\n            $('#segment2Card').hide();\n            segment2Visible = false;\n            $('#segment2Button').text(\"Show\");\n            $('#segment3Card').hide();\n            segment3Visible = false;\n            $('#segment3Button').text(\"Show\");\n            \n            $('#temperatureButton').attr('disabled',true);\n            $('#rampErrorButton').attr('disabled',true);\n            $('#dutyFactorButton').attr('disabled',true);\n            $('#avgDutyFactorButton').attr('disabled',true);\n\n            $('#num50HzCyclesButton').hide();\n            $('#propKButton').hide();\n            $('#intKButton').hide();\n            $('#dutyFactorSetButton').hide();\n            $('#numTempSamplesButton').hide();\n            $('#arcPeriodButton').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (remoteApp) getArchive(24);\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if ((msg.mqttDevice.name == restfulDevice.name) && (msg.mqttDevice.deviceType == restfulDevice.deviceType)  && (msg.mqttDevice.project == restfulDevice.project) )\n                    {\n                        lastPing = new Date().getTime();\n                        heartbeat();\n                        device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'renew':\n                    if (msg.userID == userID)\n                    {\n                        updateCookie(msg);\n                    }\n                    break;\n                case 'permissionError':\n                    if (msg.userID == userID)\n                    {\n                        acknowledgeDialog('Permission', 'Error', msg.payload);\n                    }\n                    break;\n                case 'loginExpired':\n                    if (msg.userID == userID)\n                    {\n                       location.reload();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function sendSetting()\n        {\n            var actionMsg = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload : pako.deflate(JSON.stringify(device))\n                };\n            sendActionMsg('setting','setting',actionMsg);\n       }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                sendSetting();\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function reset(actionFlag)\n        {\n            var headerText = 'Warning';\n            var title = 'Resetting Tray';\n            var text = 'I hope you know what you are doing.';\n            var buttonTexts = ['Reset', 'Cancel'];\n            var buttonFunctions = \n            [\n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                    setScalarValue(actionFlag, 'reset');\n                 }, \n                function()\n                {\n                    $( this ).dialog( \"close\" );\n                }\n            ];\n            if (actionFlag == 2)\n            {\n                title = 'Rebooting Tray';\n                buttonTexts[0] = 'Reboot';\n            }\n            optionDialog(headerText, title, text, buttonTexts, buttonFunctions);\n            \n        }\n",
        "output": "str",
        "x": 690,
        "y": 60,
        "wires": [
            [
                "daa1b6ce.430348"
            ]
        ]
    },
    {
        "id": "d51354fd.a03048",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            sendSetting();\n        }\n",
        "output": "str",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "6f5a5e46.8a941"
            ]
        ]
    },
    {
        "id": "9c813756.6c5c38",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.rampsettings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.user}}}\n",
        "output": "str",
        "x": 680,
        "y": 340,
        "wires": [
            [
                "f6ab8485.5f47e8"
            ]
        ]
    },
    {
        "id": "864cffa0.3724b",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n{{{payload.html.rampControl}}}\n{{{payload.html.history}}}\n{{{payload.html.archive}}}\n{{{payload.html.rampSettings}}}\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.user}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.reset}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 990,
        "y": 340,
        "wires": [
            [
                "9df77f6e.c22b9"
            ]
        ]
    },
    {
        "id": "cefdafa8.91d69",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "3fb4b4a8.ec76fc"
            ]
        ]
    },
    {
        "id": "7974c464.11ebac",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card' id=archiveCardId>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "4f8cafa.a57065"
            ]
        ]
    },
    {
        "id": "d00cf6cf.3b80b8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "7974c464.11ebac"
            ]
        ]
    },
    {
        "id": "31738730.e64e98",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#archiveCardId').show();\n\n//            if (hours > 2) messageDialog('Info', 'Wait', 'Getting Archive Data');\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['temperature','rampTemp','dutyFactor','avgDutyFactor'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            getArchiveValues();\n\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n\n        function plotArchive()\n        {\n//            $( \"#messageDialog\" ).dialog( \"close\" );\n            var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                    type: 'date'\n                },\n                yaxis:\n                {\n                    title           : 'Temp (C)',\n                    titlefont       : {color: '#0000ff'},\n                    tickfont        : {color: '#0000ff'},\n                    gridcolor       : '#9999ff',\n                    zerolinecolor   : '#9999ff',\n                    linecolor       : '#9999ff',\n    \n                },\n                yaxis2:\n                {\n                    title           : 'Duty Factor',\n                    titlefont       : {color: '#ff0000'},\n                    tickfont        : {color:'#ff0000'},\n                    gridcolor       : '#ff9999',\n                    zerolinecolor   : '#ff9999',\n                    linecolor       : '#ff9999',\n                    overlaying: 'y',\n                    side: 'right',\n                    range: [0,100]\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Temperature',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#0000ff'}\n        \n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Ramp Temperature',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#00ff00'}\n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Duty Factor',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#ff00ff'}\n            };\n            var trace4 = \n            {\n                x: [],\n                y: [],\n                name: 'Avg Duty Factor',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: '#00ffff'}\n            };\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n//                var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                var x = archiveList[0].trace[ii].timeStamp;\n                trace1.x[ii] = x;\n                trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                trace2.x[ii] = x;\n                trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                trace3.x[ii] = x;\n                trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                trace4.x[ii] = x;\n                trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n             }\n\n\n            Plotly.newPlot('archiveChart', [trace1,trace2, trace3, trace4], layout);\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n        }\n",
        "output": "str",
        "x": 690,
        "y": 220,
        "wires": [
            [
                "d51354fd.a03048"
            ]
        ]
    },
    {
        "id": "495e4550.f929ec",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "ovenYellow.png",
        "output": "str",
        "x": 370,
        "y": 100,
        "wires": [
            [
                "828edb09.384608"
            ]
        ]
    },
    {
        "id": "4f8cafa.a57065",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.user",
        "field": "payload.html.user",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='userCardId'>\n                    <div class='card-body' align=\"center\">\n                        <table width=\"100%\">\n                            <tr>\n                                <td  align=\"left\">\n                                     <span class='card-text' style='color:black;'>User:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='usernameId'></span>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td  align=\"left\">\n                                    <span class='card-text' style='color:black;'>Time left:</span>\n                                </td>\n                                <td  align=\"right\">\n                                     <span class='card-text' id='expTimeId'></span>\n                                </td>\n                            </tr>\n                        </table>\n                        <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"renew()\" >Renew</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' id='logoutButton' onclick=\"logout()\" >Logout</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "cefdafa8.91d69"
            ]
        ]
    },
    {
        "id": "6f5a5e46.8a941",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.user",
        "field": "payload.script.user",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function getCreds()\n        {\n            var now = new Date().getTime();\n            var expDate = Number(getCookie('ExpDate'));\n            if (expDate > 0)\n            {\n                expDate = expDate - now;\n                if(expDate < 0)\n                {\n                    logout();\n                }\n                else\n                {\n                    var hours = Math.floor(expDate / 3600000);\n                    var minutes = expDate - hours * 3600000;\n                    minutes = Math.floor(minutes / 60000);\n                    var seconds = expDate - (hours * 3600000) - (minutes * 60000);\n                    seconds = Math.floor(seconds / 1000);\n                    hours = hours.toString();\n                    if (hours.length == 1) hours = '0' + hours; \n                    minutes = minutes.toString();\n                    if (minutes.length == 1) minutes = '0' + minutes; \n                    seconds = seconds.toString();\n                    if (seconds.length == 1) seconds = '0' + seconds; \n                    var timeString = hours + ':' + minutes + ':' + seconds;\n                    $('#usernameId').text(getCookie('Username'));\n                    $('#expTimeId').text(timeString);\n                }\n            }\n            else\n            {\n                $('#usernameId').text(getCookie('Username'));\n                $('#expTimeId').text('Forever');\n            }\n        }\n        function logout()\n        {\n            document.cookie = project + \"Role= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"ExpDate= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            document.cookie = project + \"Username= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n            window.location.href = \"/\";\n        }\n        function renew()\n        {\n            var actionMsg = {};\n            sendActionMsg('renew', 'renew', actionMsg);\n        }\n        function updateCookie(msg)\n        {\n            document.cookie = project + \"Role=\" + msg.role;\n            document.cookie = project + \"ExpDate=\" + msg.expDate;\n            document.cookie = project + \"Username=\" + msg.username;\n        }\n        function downloadToken()\n        {\n            downloadString(getCookie(\"Role\"), \"text/plain\", project + \"-token.txt\");\n        }\n// from https://gist.github.com/danallison/3ec9d5314788b337b682\n        function downloadString(text, fileType, fileName) \n        {\n            var blob = new Blob([text], { type: fileType });\n            \n            var a = document.createElement('a');\n            a.download = fileName;\n            a.href = URL.createObjectURL(blob);\n            a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n            a.style.display = \"none\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n        }",
        "output": "str",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "9c813756.6c5c38"
            ]
        ]
    },
    {
        "id": "3fb4b4a8.ec76fc",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.reset",
        "field": "payload.html.reset",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card' id='reset'>\n                    <div class='card-body' align=\"center\">\n                         <table width=\"100%\">\n                            <tr>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(1)\" >Reset</button>\n                                </td>\n                                <td width=\"10%\"></td>\n                                <td width=\"40%\">\n                                    <button class='btn btn-block card-button big-text' onclick=\"reset(2)\" >Reboot</button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "864cffa0.3724b"
            ]
        ]
    },
    {
        "id": "8bb593b7.2aecb",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.rampsettings",
        "field": "payload.script.rampsettings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Ramp Settings JavaScript\n        function rampRateChange(iramp)\n        {\n            if (iramp == 1)\n            {\n                ramp1RateChanged = true;\n                $('#ramp1RateButton').show();\n            }\n            if (iramp == 2)\n            {\n                ramp2RateChanged = true;\n                $('#ramp2RateButton').show();\n            }\n            if (iramp == 3)\n            {\n                ramp3RateChanged = true;\n                $('#ramp3RateButton').show();\n            }\n        }\n        function rampTempChange(iramp)\n        {\n            if (iramp == 1)\n            {\n                ramp1TempChanged = true;\n                $('#ramp1TempButton').show();\n            }\n            if (iramp == 2)\n            {\n                ramp2TempChanged = true;\n                $('#ramp2TempButton').show();\n            }\n            if (iramp == 3)\n            {\n                ramp3TempChanged = true;\n                $('#ramp3TempButton').show();\n            }\n        }\n        function rampTimeChange(iramp)\n        {\n            if (iramp == 1)\n            {\n                ramp1TimeChanged = true;\n                $('#ramp1TimeButton').show();\n            }\n            if (iramp == 2)\n            {\n                ramp2TimeChanged = true;\n                $('#ramp2TimeButton').show();\n            }\n            if (iramp == 3)\n            {\n                ramp3TimeChanged = true;\n                $('#ramp3TimeButton').show();\n            }\n        }\n        function rampRate(iramp)\n        {\n            if (iramp == 1)\n            {\n                $('#ramp1RateButton').hide();\n                if (isNaN($('#ramp1Rate').val()))\n                {\n                    ramp1RateChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp1Rate').val()), 'ramp1Rate');\n                ramp1RateChanged = false;\n            }\n            if (iramp == 2)\n            {\n                $('#ramp2RateButton').hide();\n                if (isNaN($('#ramp2Rate').val()))\n                {\n                    ramp2RateChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp2Rate').val()), 'ramp2Rate');\n                ramp2RateChanged = false;\n            }\n            if (iramp == 3)\n            {\n                $('#ramp3RateButton').hide();\n                if (isNaN($('#ramp3Rate').val()))\n                {\n                    ramp3RateChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp3Rate').val()), 'ramp3Rate');\n                ramp3RateChanged = false;\n            }\n        }\n        function rampTemp(iramp)\n        {\n            if (iramp == 1)\n            {\n                $('#ramp1TempButton').hide();\n                if (isNaN($('#ramp1Temp').val()))\n                {\n                    ramp1TempChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp1Temp').val()), 'ramp1Temp');\n                ramp1TempChanged = false;\n            }\n            if (iramp == 2)\n            {\n                $('#ramp2TempButton').hide();\n                if (isNaN($('#ramp2Temp').val()))\n                {\n                    ramp2TempChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp2Temp').val()), 'ramp2Temp');\n                ramp2TempChanged = false;\n            }\n            if (iramp == 3)\n            {\n                $('#ramp3TempButton').hide();\n                if (isNaN($('#ramp3Temp').val()))\n                {\n                    ramp3TempChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp3Temp').val()), 'ramp3Temp');\n                ramp3TempChanged = false;\n            }\n        }\n        function rampTime(iramp)\n        {\n            if (iramp == 1)\n            {\n                $('#ramp1TimeButton').hide();\n                if (isNaN($('#ramp1Time').val()))\n                {\n                    ramp1TimeChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp1Time').val()), 'ramp1Time');\n                ramp1TimeChanged = false;\n            }\n            if (iramp == 2)\n            {\n                $('#ramp2TimeButton').hide();\n                if (isNaN($('#ramp2Time').val()))\n                {\n                    ramp2TimeChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp2Time').val()), 'ramp2Time');\n                ramp2TimeChanged = false;\n            }\n            if (iramp == 3)\n            {\n                $('#ramp3TimeButton').hide();\n                if (isNaN($('#ramp3Time').val()))\n                {\n                    ramp3TimeChanged = false;\n                    return;\n                }\n                setScalarValue(Number($('#ramp3Time').val()), 'ramp3Time');\n                ramp3TimeChanged = false;\n            }\n        }\n\n        function changeState(state)\n        {\n            device.regState.value = state;\n            sendSetting();\n            changingState = true;\n            $('#offStateButton').css(\"background-color\", \"grey\");\n            $('#rampUpStateButton').css(\"background-color\", \"grey\");\n            $('#onStateButton').css(\"background-color\", \"grey\");\n            setTimeout(function(){ changingState = false; }, 1000);\n        }\n        \n        function num50HzCyclesChange()\n        {\n            num50HzCyclesChanged = true;\n            $('#num50HzCyclesButton').show();\n        }\n        function propKChange()\n        {\n            propKChanged = true;\n            $('#propKButton').show();\n        }\n        function intKChange()\n        {\n            intKChanged = true;\n            $('#intKButton').show();\n        }\n        function dutyFactorSetChange()\n        {\n            dutyFactorSetChanged = true;\n            $('#dutyFactorSetButton').show();\n        }\n        function numTempSamplesChange()\n        {\n            numTempSamplesChanged = true;\n            $('#numTempSamplesButton').show();\n        }\n        function arcPeriodChange()\n        {\n            arcPeriodChanged = true;\n            $('#arcPeriodButton').show();\n        }\n        function num50HzCycles()\n        {\n            $('#num50HzCyclesButton').hide();\n            if (isNaN($('#num50HzCycles').val()))\n            {\n                num50HzCyclesChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#num50HzCycles').val()), 'num50HzCycles');\n            num50HzCyclesChanged = false;\n        }\n        function propK()\n        {\n            $('#propKButton').hide();\n            if (isNaN($('#propK').val()))\n            {\n                propKChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#propK').val()), 'propK');\n            propKChanged = false;\n        }\n        function intK()\n        {\n            $('#intKButton').hide();\n            if (isNaN($('#intK').val()))\n            {\n                intKChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#intK').val()), 'intK');\n            intKChanged = false;\n        }\n        function dutyFactorSet()\n        {\n            $('#dutyFactorSetButton').hide();\n            if (isNaN($('#dutyFactorSet').val()))\n            {\n                dutyFactorSetChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#dutyFactorSet').val()), 'dutyFactorSet');\n            dutyFactorSetChanged = false;\n        }\n        function numTempSamples()\n        {\n            $('#numTempSamplesButton').hide();\n            if (isNaN($('#numTempSamples').val()))\n            {\n                numTempSamplesChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#numTempSamples').val()), 'numTempSamples');\n            numTempSamplesChanged = false;\n        }\n        function arcPeriod()\n        {\n            $('#arcPeriodButton').hide();\n            if (isNaN($('#arcPeriod').val()))\n            {\n                arcPeriodChanged = false;\n                return;\n            }\n            device.arcPeriod = Math.round(Number($('#arcPeriod').val()) * 1000);\n            sendSetting();\n            arcPeriodChanged = false;\n        }\n        function expertSettings()\n        {\n            if (expertSettingsVisible)\n            {\n                $('#expertSettingsCard').hide();\n                $('#expertSettingsButton').text('Show');\n                expertSettingsVisible = false;\n            }\n            else\n            {\n                $('#expertSettingsCard').show();\n                $('#expertSettingsButton').text('Hide');\n                expertSettingsVisible = true;\n            }\n        }\n        function segment1()\n        {\n            if (segment1Visible)\n            {\n                $('#segment1Card').hide();\n                $('#segment1Button').text('Show');\n                segment1Visible = false;\n            }\n            else\n            {\n                $('#segment1Card').show();\n                $('#segment1Button').text('Hide');\n                segment1Visible = true;\n            }\n        }\n        function segment2()\n        {\n            if (segment2Visible)\n            {\n                $('#segment2Card').hide();\n                $('#segment2Button').text('Show');\n                segment2Visible = false;\n            }\n            else\n            {\n                $('#segment2Card').show();\n                $('#segment2Button').text('Hide');\n                segment2Visible = true;\n            }\n        }\n        function segment3()\n        {\n            if (segment3Visible)\n            {\n                $('#segment3Card').hide();\n                $('#segment3Button').text('Show');\n                segment3Visible = false;\n            }\n            else\n            {\n                $('#segment3Card').show();\n                $('#segment3Button').text('Hide');\n                segment3Visible = true;\n            }\n        }\n\n",
        "output": "str",
        "x": 710,
        "y": 180,
        "wires": [
            [
                "31738730.e64e98"
            ]
        ]
    },
    {
        "id": "f6ab8485.5f47e8",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.rampControl",
        "field": "payload.html.rampControl",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Ramp Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='temperatureLabel' >Temperature (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='temperature' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"temperatureButton\" onclick=\"editDevice('temperature')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='rampErrorLabel' >Ramp Error (C)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='rampError' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"rampErrorButton\" onclick=\"editDevice('rampError')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='rampSegmentLabel' >Ramp Segment</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='rampSegment1' ></span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='rampSegment2' ></span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <p class='card-title'>Ramp State</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width=20%></td>\n                                    <td width=60%><button class='btn btn-block big-text' id=\"offStateButton\" onclick=\"changeState(0)\" >Off</button></td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"rampUpStateButton\" onclick=\"changeState(1)\">Ramp</button></td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td style='padding-top:35px;' ><button class='btn btn-block big-text' id=\"onStateButton\" onclick=\"changeState(2)\">Manual</button></td>\n                                    <td></td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n",
        "output": "str",
        "x": 1030,
        "y": 60,
        "wires": [
            [
                "eaf4fe12.90879"
            ]
        ]
    },
    {
        "id": "eaf4fe12.90879",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "html.rampSettings",
        "field": "payload.html.rampSettings",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Ramp Segment 1</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"segment1Button\" onclick=\"segment1()\" >Hide</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id=\"segment1Card\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp1RateLabel'>Ramp Rate (C/hr)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp1Rate\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"rampRateChange(1)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"ramp1RateButton\" onclick=\"rampRate(1)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp1TempLabel'>Target Temp. (C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp1Temp\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTempChange(1)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp1TempButton\" onclick=\"rampTemp(1)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp1TimeLabel'>Hold Time (hrs)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp1Time\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTimeChange(1)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp1TimeButton\" onclick=\"rampTime(1)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Ramp Segment 2</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"segment2Button\" onclick=\"segment2()\" >Hide</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id=\"segment2Card\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp2RateLabel'>Ramp Rate (C/hr)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp2Rate\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"rampRateChange(2)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"ramp2RateButton\" onclick=\"rampRate(2)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp2TempLabel'>Target Temp. (C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp2Temp\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTempChange(2)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp2TempButton\" onclick=\"rampTemp(2)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp2TimeLabel'>Hold Time (hrs)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp2Time\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTimeChange(2)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp2TimeButton\" onclick=\"rampTime(2)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Ramp Segment 3</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"segment3Button\" onclick=\"segment3()\" >Hide</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id=\"segment3Card\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp3RateLabel'>Ramp Rate (C/hr)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp3Rate\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"rampRateChange(3)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"ramp3RateButton\" onclick=\"rampRate(3)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp3TempLabel'>Target Temp. (C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp3Temp\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTempChange(3)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp3TempButton\" onclick=\"rampTemp(3)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='ramp3TimeLabel'>Hold Time (hrs)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"ramp3Time\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"rampTimeChange(3)\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"ramp3TimeButton\" onclick=\"rampTime(3)\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Expert Settings</p>\n                         </div>\n                        <div class='col-md-2'>\n                            <button class='btn btn-block card-button big-text' id=\"expertSettingsButton\" onclick=\"expertSettings()\" >Hide</button>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id=\"expertSettingsCard\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='dutyFactorLabel' >Duty Factor (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='dutyFactor' >-1</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"dutyFactorButton\" onclick=\"editDevice('dutyFactor')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' id='avgDutyFactorLabel' >Avg Duty Factor (%)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='avgDutyFactor' >-1</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' id=\"avgDutyFactorButton\" onclick=\"editDevice('avgDutyFactor')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='dutyFactorSetLabel'>Duty Factor Target (%)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"dutyFactorSet\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"dutyFactorSetChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"dutyFactorSetButton\" onclick=\"dutyFactorSet()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='numTempSamplesLabel'>Temp. Sample Avg</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"numTempSamples\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"numTempSamplesChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"numTempSamplesButton\" onclick=\"numTempSamples()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='num50HzCyclesLabel'>PWM Period (line-cyles)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"num50HzCycles\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"num50HzCyclesChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"num50HzCyclesButton\" onclick=\"num50HzCycles()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='propKLabel'>Prop. Reg. Constant (%/C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"propK\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"propKChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"propKButton\" onclick=\"propK()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='intKLabel'>Int. Reg. Constant (%/min-C)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"intK\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"intKChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"intKButton\" onclick=\"intK()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-text' id='arcPeriodLabel'>Archive Period (sec.)</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"arcPeriod\" type=\"text\" value=\"0\" class=\"big-text\"   size=\"8\" oninput=\"arcPeriodChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block big-text' id=\"arcPeriodButton\" onclick=\"arcPeriod()\" >&#10003;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n            ",
        "output": "str",
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "d00cf6cf.3b80b8"
            ]
        ]
    },
    {
        "id": "e29616e2.2e2988",
        "type": "template",
        "z": "ffe6c625.6b4a58",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#temperatureButton').attr('disabled',false);\n            $('#rampErrorButton').attr('disabled',false);\n            $('#dutyFactorButton').attr('disabled',false);\n            $('#avgDutyFactorButton').attr('disabled',false);\n\n            historyStripChart.addTracePoints(device.temperature.value, device.rampTemp.value, device.dutyFactor.value, device.avgDutyFactor.value);\n\n            if (!ramp1RateChanged) $('#ramp1Rate').val(device.ramp1Rate.value);\n            if (!ramp1TempChanged) $('#ramp1Temp').val(device.ramp1Temp.value);\n            if (!ramp1TimeChanged) $('#ramp1Time').val(device.ramp1Time.value);\n\n            if (!ramp2RateChanged) $('#ramp2Rate').val(device.ramp2Rate.value);\n            if (!ramp2TempChanged) $('#ramp2Temp').val(device.ramp2Temp.value);\n            if (!ramp2TimeChanged) $('#ramp2Time').val(device.ramp2Time.value);\n\n            if (!ramp3RateChanged) $('#ramp3Rate').val(device.ramp3Rate.value);\n            if (!ramp3TempChanged) $('#ramp3Temp').val(device.ramp3Temp.value);\n            if (!ramp3TimeChanged) $('#ramp3Time').val(device.ramp3Time.value);\n            \n            if (device.regState.value == 1)\n            {\n                switch(device.rampSegment.value) \n                {\n                    case 1:\n                        $('#rampSegment1').text(\"1\");\n                        $('#rampSegment2').text(\"Ramping\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',false);\n                        $('#ramp2Rate').attr('disabled',false);\n                        $('#ramp2Temp').attr('disabled',false);\n                        $('#ramp2Time').attr('disabled',false);\n                        $('#ramp3Rate').attr('disabled',false);\n                        $('#ramp3Temp').attr('disabled',false);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                    case 2:\n                        $('#rampSegment1').text(\"1\");\n                        $('#rampSegment2').text(\"Holding\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',false);\n                        $('#ramp2Temp').attr('disabled',false);\n                        $('#ramp2Time').attr('disabled',false);\n                        $('#ramp3Rate').attr('disabled',false);\n                        $('#ramp3Temp').attr('disabled',false);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                    case 3:\n                        $('#rampSegment1').text(\"2\");\n                        $('#rampSegment2').text(\"Ramping\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',false);\n                        $('#ramp3Rate').attr('disabled',false);\n                        $('#ramp3Temp').attr('disabled',false);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                    case 4:\n                        $('#rampSegment1').text(\"2\");\n                        $('#rampSegment2').text(\"Holding\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',true);\n                        $('#ramp3Rate').attr('disabled',false);\n                        $('#ramp3Temp').attr('disabled',false);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                    case 5:\n                        $('#rampSegment1').text(\"3\");\n                        $('#rampSegment2').text(\"Ramping\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',true);\n                        $('#ramp3Rate').attr('disabled',true);\n                        $('#ramp3Temp').attr('disabled',true);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                    case 6:\n                        $('#rampSegment1').text(\"3\");\n                        $('#rampSegment2').text(\"Holding\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',true);\n                        $('#ramp3Rate').attr('disabled',true);\n                        $('#ramp3Temp').attr('disabled',true);\n                        $('#ramp3Time').attr('disabled',true);\n                        break;\n                    case 7:\n                        $('#rampSegment1').text(\"Cooldown\");\n                        $('#rampSegment2').text(\"Ramping\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',true);\n                        $('#ramp3Rate').attr('disabled',true);\n                        $('#ramp3Temp').attr('disabled',true);\n                        $('#ramp3Time').attr('disabled',true);\n                        break;\n                    case 8:\n                        $('#rampSegment1').text(\"Cooldown\");\n                        $('#rampSegment2').text(\"Holding\");\n                        $('#ramp1Rate').attr('disabled',true);\n                        $('#ramp1Temp').attr('disabled',true);\n                        $('#ramp1Time').attr('disabled',true);\n                        $('#ramp2Rate').attr('disabled',true);\n                        $('#ramp2Temp').attr('disabled',true);\n                        $('#ramp2Time').attr('disabled',true);\n                        $('#ramp3Rate').attr('disabled',true);\n                        $('#ramp3Temp').attr('disabled',true);\n                        $('#ramp3Time').attr('disabled',true);\n                        break;\n                    default:\n                        $('#rampSegment1').text(\"\");\n                        $('#rampSegment2').text(\"\");\n                        $('#ramp1Rate').attr('disabled',false);\n                        $('#ramp1Temp').attr('disabled',false);\n                        $('#ramp1Time').attr('disabled',false);\n                        $('#ramp2Rate').attr('disabled',false);\n                        $('#ramp2Temp').attr('disabled',false);\n                        $('#ramp2Time').attr('disabled',false);\n                        $('#ramp3Rate').attr('disabled',false);\n                        $('#ramp3Temp').attr('disabled',false);\n                        $('#ramp3Time').attr('disabled',false);\n                        break;\n                }\n            }\n            else\n            {\n                $('#rampSegment1').text(\"\");\n                $('#rampSegment2').text(\"\");\n                $('#ramp1Rate').attr('disabled',false);\n                $('#ramp1Temp').attr('disabled',false);\n                $('#ramp1Time').attr('disabled',false);\n                $('#ramp2Rate').attr('disabled',false);\n                $('#ramp2Temp').attr('disabled',false);\n                $('#ramp2Time').attr('disabled',false);\n                $('#ramp3Rate').attr('disabled',false);\n                $('#ramp3Temp').attr('disabled',false);\n                $('#ramp3Time').attr('disabled',false);\n            }\n\n            $('#temperature').text(device.temperature.value);\n            $('#rampError').text(device.rampError.value);\n            $('#dutyFactor').text(device.dutyFactor.value);\n            $('#avgDutyFactor').text(device.avgDutyFactor.value);\n\n            if (!num50HzCyclesChanged)\n            {\n                $('#num50HzCycles').val(device.num50HzCycles.value);\n            }\n            if (!propKChanged)\n            {\n                $('#propK').val(device.propK.value);\n            }\n            if (!intKChanged)\n            {\n                $('#intK').val(device.intK.value);\n            }\n            if (!dutyFactorSetChanged)\n            {\n                $('#dutyFactorSet').val(device.dutyFactorSet.value);\n            }\n            if (!numTempSamplesChanged)\n            {\n                $('#numTempSamples').val(device.numTempSamples.value);\n            }\n            if (!arcPeriodChanged)\n            {\n                $('#arcPeriod').val(Math.round(device.arcPeriod / 1000));\n            }\n\n            if (!changingState)\n            {\n                switch(device.regState.value) \n                {\n                  case 0:\n                    $('#offStateButton').css(\"background-color\", \"green\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 1:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"orange\");\n                    $('#onStateButton').css(\"background-color\", \"white\");\n                    break;\n                  case 2:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"white\");\n                    $('#rampUpStateButton').css(\"background-color\", \"white\");\n                    $('#onStateButton').css(\"background-color\", \"red\");\n                    break;\n                  default:\n                    // code block\n                    $('#offStateButton').css(\"background-color\", \"grey\");\n                    $('#rampUpStateButton').css(\"background-color\", \"grey\");\n                    $('#onStateButton').css(\"background-color\", \"grey\");\n                }            \n                \n            }\n        }\n",
        "output": "str",
        "x": 720,
        "y": 140,
        "wires": [
            [
                "8bb593b7.2aecb"
            ]
        ]
    },
    {
        "id": "adffe893.c34f28",
        "type": "subflow:ca529822.9112f8",
        "z": "2b074b3a.632fb4",
        "name": "",
        "x": 1230,
        "y": 720,
        "wires": []
    },
    {
        "id": "7d272498.55ad0c",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div style=\"padding-top:10px;\" >\n        <table width=\"100%\" background=\"/img/brantevikBanner.png\" style=\"background-repeat: no-repeat;background-size: 100% 15vw;\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle; padding-left:2vw; padding-top:2vw; padding-bottom:2vw;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" width=\"40%\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                </td>\n                <td style=\"text-align:right; vertical-align:middle; padding-right:2vw;\" width=\"20%\">\n                   <a href=\"https://www.brantevik.se\" >\n                       <img src=\"/img/brantevikYellow.png\" width=\"40%\"/>\n                   </a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "adffe893.c34f28"
            ]
        ]
    },
    {
        "id": "9c55d099.7e94",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: white !important;\n            margin: auto;\n            padding-left:25px;\n            padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 970,
        "y": 720,
        "wires": [
            [
                "7d272498.55ad0c"
            ]
        ]
    },
    {
        "id": "c93e8450.cec2f8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card'>\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Brantevik Väder</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <div class='row'>\n                                <div class='col-md-12'>\n\n                                    <div style=\"height: 60vw; overflow:hidden;\">\n                                        <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0;background: #9eb5c7;\" src=\"/brantevik-widget\" allowtransparency=\"true\"></iframe>\n                                    </div>\n                               </div>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "9c55d099.7e94"
            ]
        ]
    },
    {
        "id": "ee44c976.7129a8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 600,
        "y": 720,
        "wires": [
            [
                "c93e8450.cec2f8"
            ]
        ]
    },
    {
        "id": "13179869.c875f8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 610,
        "y": 680,
        "wires": [
            [
                "ee44c976.7129a8"
            ]
        ]
    },
    {
        "id": "20a981bc.d4b28e",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Brantevik Väder",
        "output": "str",
        "x": 320,
        "y": 720,
        "wires": [
            [
                "13179869.c875f8"
            ]
        ]
    },
    {
        "id": "cad5d9f3.0cde08",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 330,
        "y": 680,
        "wires": [
            [
                "20a981bc.d4b28e"
            ]
        ]
    },
    {
        "id": "98cef0e5.ccec5",
        "type": "http in",
        "z": "2b074b3a.632fb4",
        "name": "/brantevik",
        "url": "/brantevik",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "cad5d9f3.0cde08"
            ]
        ]
    },
    {
        "id": "b486adc6.c5ab4",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div width=\"100%\" align=\"center\">\n        <table width=\"900px\">\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;' >\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/control-apps\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/appsYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Control Apps</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n            <tr>\n                <td width='10%'></td>\n                <td width='60%' style='padding-bottom: 25px;'>\n                    <a class=\"btn jumbotron-button btn-block big-text bold-text\" href=\"/solar-field-designer\" >\n                        <table width=\"100%\" alight=\"left\">\n                            <tr>\n                                <td width=\"30%\" align='center'> <img src=\"/img/sunYellow.png\" height=\"70px\"/></td>\n                                <td width=\"70%\" align=\"left\">Solar Field Designer</td>\n                            </tr>\n                        </table>\n                    </a>\n                </td>\n                <td width='10%'></td>\n            </tr>\n        </table>\n        <hr>\n        <div class='row'>\n            <div class='col-12' align='center'>\n                <table width=\"900px\" background=\"/img/rappsSea.png\">\n                    <tr>\n                        <td width=\"262px\"></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                        <td width=\"125px\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                        <td width=\"262px\"></td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 850,
        "y": 2400,
        "wires": [
            [
                "a865c3bf.82f7"
            ]
        ]
    },
    {
        "id": "a865c3bf.82f7",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 980,
        "y": 2400,
        "wires": [
            [
                "27afe677.715cba"
            ]
        ]
    },
    {
        "id": "27afe677.715cba",
        "type": "subflow:d7162906.0afcd8",
        "z": "a858ad3a.95706",
        "x": 1130,
        "y": 2400,
        "wires": []
    },
    {
        "id": "4dbcff85.9f7e4",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Applications",
        "output": "str",
        "x": 450,
        "y": 2400,
        "wires": [
            [
                "b486adc6.c5ab4"
            ]
        ]
    },
    {
        "id": "d4692cf.9e35ad",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/apps",
        "url": "/apps",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 2400,
        "wires": [
            [
                "4dbcff85.9f7e4"
            ]
        ]
    },
    {
        "id": "8a423915.368348",
        "type": "file in",
        "z": "ef3780c6.c3ac3",
        "name": "Read CountryCodes",
        "filename": "html-static/img/solar-field-designer/countryContinentCodes.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 430,
        "y": 920,
        "wires": [
            [
                "656cc3d1.7ab86c"
            ]
        ]
    },
    {
        "id": "69b4e2c5.240edc",
        "type": "inject",
        "z": "ef3780c6.c3ac3",
        "name": "Get CountryCodes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "8a423915.368348"
            ]
        ]
    },
    {
        "id": "656cc3d1.7ab86c",
        "type": "json",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 920,
        "wires": [
            [
                "a6e0104f.1752f"
            ]
        ]
    },
    {
        "id": "a6e0104f.1752f",
        "type": "function",
        "z": "ef3780c6.c3ac3",
        "name": "Save Country codes",
        "func": "flow.set('countryCodes',msg.payload);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 920,
        "wires": []
    },
    {
        "id": "de8fc5e0.67a4c8",
        "type": "http request",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "fc28dea2.3fafb"
            ]
        ]
    },
    {
        "id": "fc28dea2.3fafb",
        "type": "json",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "97c1d25.691c93"
            ]
        ]
    },
    {
        "id": "33e2c44.2f0ea3c",
        "type": "function",
        "z": "ef3780c6.c3ac3",
        "name": "Prep Geocode Query",
        "func": "var city = msg.payload.city.charAt(0).toUpperCase() + msg.payload.city.slice(1).toLowerCase();\nvar country = msg.payload.countryCode.toUpperCase();\nmsg.url = \"https://geocode.xyz/\" + city + \"?json=1&auth=903353932935827879695x106304&region=\" + country + \"&citybias=\" + city;\nmsg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "de8fc5e0.67a4c8"
            ]
        ]
    },
    {
        "id": "97c1d25.691c93",
        "type": "function",
        "z": "ef3780c6.c3ac3",
        "name": "Format GeoCode response",
        "func": "delete msg['headers'];\ndelete msg['url'];\ndelete msg['statusCode'];\ndelete msg['responseUrl'];\ndelete msg['redirectList'];\ndelete msg['responseCookies'];\nif (msg.payload.hasOwnProperty('error'))\n{\n    var errMsg = \n    {\n        topic:'invalidLocation', \n        payload:\n        {\n            topic:          'invalidLocation',\n            userID:         msg.userID,\n            payload:        null,\n        }\n    };\n    return [null,errMsg];\n}\nvar location = \n{\n    latitudeDeg     : Number(msg.payload.latt),\n    longitudeDeg    : Number(msg.payload.longt),\n    city            : msg.payload.standard.city,\n    countryCode     : msg.payload.standard.prov,\n    continentCode   : '',\n    database        : '',\n}\nvar country = location.countryCode;\nvar codes = flow.get('countryCodes');\nvar record = null;\nvar irecord = 0;\nwhile (irecord < codes.length)\n{\n    if (codes[irecord].Two_Letter_Country_Code == country)\n    {\n        record = codes[irecord];\n        irecord = codes.length;\n    }\n    irecord = irecord + 1;\n}\nif (record != null) location.continentCode = record.Continent_Code;\nmsg['location'] = location;\n//\"PVGIS-NSRDB\" North America\ndatabase = null;\nmsg.payload = null;\nswitch(location.continentCode)\n{\n    case 'EU':\n        database = \"PVGIS-SARAH\";\n        break;\n    case 'AF':\n        database = \"PVGIS-SARAH\";\n        break;\n    case 'AS':\n        database = \"PVGIS-SARAH\";\n        break;\n    case 'NA':\n        database = \"PVGIS-NSRDB\";\n        break;\n    default:\n        database = null;\n        break;\n}\nif (database != null)\n{\n    location.database = database;\n    msg.payload = \n    {\n        latitudeDeg     : location.latitudeDeg,\n        longitudeDeg    : location.longitudeDeg,\n        database        : database\n    };\n    return [msg,null];\n}\nelse\n{\n    var errMsg = \n    {\n        topic:'invalidLocation', \n        payload:\n        {\n            topic:          'invalidLocation',\n            userID:         msg.userID,\n            payload:        null,\n        }\n    };\n    return [null,errMsg];\n}\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 260,
        "wires": [
            [
                "70668f1c.f6ffe"
            ],
            [
                "a76a9636.9fcfc8"
            ]
        ]
    },
    {
        "id": "70668f1c.f6ffe",
        "type": "http request",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://re.jrc.ec.europa.eu/api/MRcalc?+&lat={{{payload.latitudeDeg}}}&lon={{{payload.longitudeDeg}}}&raddatabase={{{payload.database}}}&avtemp=1&d2g=1&usehorizon=0&startyear=2006&endyear=2015&horirrad=1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "73ebf859.baf9f8"
            ]
        ]
    },
    {
        "id": "73ebf859.baf9f8",
        "type": "function",
        "z": "ef3780c6.c3ac3",
        "name": "Parse Solar Data",
        "func": "var queryData = msg.payload.split('\\n');\nvar month = ['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec'];\nvar solarData = [];\nsolarData[0] = {'year':0, 'monthData':{}};\nvar avgHh = [];\nvar avgD_G= [];\nvar avgT24h = [];\nvar numYrs = 10.0;\nfor (var im = 0; im < 12; ++im)\n{\n  avgHh[im] = 0.0;\n  avgD_G[im] = 0.0;\n  avgT24h[im] = 0.0;\n}\nfor (var iy = 0; iy < numYrs; ++iy)\n{\n    solarData[iy + 1] = {'year':iy + 2007, 'monthData':{}};\n    var monthData = [];\n    for (im = 0; im < 12; ++im)\n    {\n            var monthQueryData = queryData[5 + iy * 12 + im].split('\\t\\t');\n            monthData[im] = {'month':month[im],'Hh':Number(monthQueryData[2]),'D_G':Number(monthQueryData[3]),'T24h':Number(monthQueryData[4])}\n            avgHh[im] = avgHh[im] + Number(monthQueryData[2]);\n            avgD_G[im] = avgD_G[im] + Number(monthQueryData[3]);\n            avgT24h[im] = avgT24h[im] + Number(monthQueryData[4]);\n    }\n    solarData[iy + 1] = {'year':(iy + 2006), 'monthData':monthData};\n}\n\nvar monthData = [];\nfor (im = 0; im < 12; ++im)\n{\n  avgHh[im] = avgHh[im] / numYrs;\n  avgD_G[im] = avgD_G[im] / numYrs;\n  avgT24h[im] = avgT24h[im] / numYrs;\n  monthData[im] = {'month':month[im],'Hh':avgHh[im],'D_G':avgD_G[im],'T24h':avgT24h[im]};\n}\nsolarData[0] = {'year':0, 'monthData':monthData};\nreturn {topic:'solarData', \n    payload:\n    {\n        topic:          'solarData',\n        userID:         msg.userID,\n        payload:        solarData,\n        location:       msg.location,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "a76a9636.9fcfc8"
            ]
        ]
    },
    {
        "id": "a76a9636.9fcfc8",
        "type": "websocket out",
        "z": "ef3780c6.c3ac3",
        "name": "/solar-field-designer/websocket",
        "server": "508cc5df.e1e3cc",
        "client": "",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "5dbffd6d.2ed364",
        "type": "websocket in",
        "z": "ef3780c6.c3ac3",
        "name": "/solar-field-designer/websocket",
        "server": "508cc5df.e1e3cc",
        "client": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "9a74f4c1.a950c8"
            ]
        ]
    },
    {
        "id": "9a74f4c1.a950c8",
        "type": "json",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "71063e43.94c79"
            ]
        ]
    },
    {
        "id": "71063e43.94c79",
        "type": "function",
        "z": "ef3780c6.c3ac3",
        "name": "Shift msg",
        "func": "return msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 180,
        "wires": [
            [
                "33e2c44.2f0ea3c"
            ]
        ]
    },
    {
        "id": "41f39855.25d2f8",
        "type": "subflow:ca529822.9112f8",
        "z": "ef3780c6.c3ac3",
        "name": "",
        "x": 1390,
        "y": 80,
        "wires": []
    },
    {
        "id": "28c0d070.b6474",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div style=\"padding-top:10px;padding-bottom:10px;\" >\n        <table width=\"100%\" background=\"/img/rappsField.png\" style=\"background-repeat: no-repeat;background-size: 100% 15vw;\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle; padding-left:2vw; padding-top:2vw; padding-bottom:2vw;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon.png\" width=\"40%\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                </td>\n                <td style=\"text-align:right; vertical-align:middle; padding-right:2vw;\" width=\"20%\">\n                   <a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\" >\n                       <img src=\"/img/SDG7.png\" width=\"40%\"/>\n                   </a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1260,
        "y": 80,
        "wires": [
            [
                "41f39855.25d2f8"
            ]
        ]
    },
    {
        "id": "9e586bef.37d618",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: white !important;\n            margin: auto;\n            padding-left:25px;\n            padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: var(--color5);\n            text-decoration: underline;\n        }\n        a:visited \n        { \n            color: var(--color5);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .right-justify\n        {\n          text-align: right;\n        }\n        .left-justify\n        {\n          text-align: left;\n        }\n        .center-justify\n        {\n          text-align: center;\n        }\n \n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-bottom:2px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-size: 250%;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: 250%;\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n          color: black;\n          background-color: white;\n          font-size: 200%;\n          height:  200%;       \n        }\n        .form-control\n        {\n          color: black;\n          background-color: white;\n          font-size: 200%;\n        }\n        .performance-data\n        {\n          color: black;\n          font-size: 200%;\n        }\n        .form-check\n        {\n          font-size: 200%;\n          transform: scale(2.5);\n        }\n        .radio-button-border\n        {\n          border-style: solid;\n          border-color: white;\n          border-width: 2px;\n        }\n        .solarPlotButton\n        {\n          color: white !important;\n          background-color: var(--color1) !important;\n          font-size: 200%;\n        }\n        .moreInfo \n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-size: 200%;\n          font-weight: var(--bold-text);\n          padding: 2!important;\n/*          \n            font-size: 200%;\n            color: var(--color1);\n            background: none!important;\n            border: none;\n            padding-left: 10px!important;\n            padding-right: 10px!important;\n            cursor: pointer;\n*/\n        }\n",
        "output": "str",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "28c0d070.b6474"
            ]
        ]
    },
    {
        "id": "87c98463.1aff88",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class=\"jumbotron\">\n        <h1 class=\"jumbotron-title\">Solar Field Designer</h1>\n        <p style=\"font-size:200%\">Includes cloud cover, haze and termperature.</p>\n        <p style=\"font-size:200%\">\n            Based on the  Photovoltaic Geographical Information System (<a class=\"jumbotron-link jumbotron-link-hover\" href=\"http://re.jrc.ec.europa.eu/pvgis.html\" target=\"_blank\">PVGIS </a>\n            ) Database taking into account sky conditions for a given location.\n        </p>\n    </div>\n    <div width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:1px;\">\n                    <div class='card' id=\"plotCard\">\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Plots</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width=15%></td>\n                                    <td width=5%></td>\n                                    <td width=60% style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"singleAxisPlot('Sky Clearity (%)', 'skyAttenuationPercent',11)\">Sky Conditions</button>\n                                    </td>\n                                    <td width=20%></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"singleAxisPlot('Effective Daylight Hours','effectiveDaylightHoursForMonth', 'effectiveDaylightHoursForMonth',1)\">Effective Daylight Hours</button>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"twoTracePlot('Solar Panel Shadow(%)','shadow09Perc','shadow12Perc', '9 am','Noon')\">Solar Panel Shadow</button>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                                 <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"singleAxisPlot('Elec. Power at Noon (kW)','avgElectricalPowerKW',11)\">Electrical Power</button>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                                 <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"singleAxisPlot('Daily Elec. Energy (kW-hr)','electricalEnergyKWHr',11)\">Daily Electrical Energy</button>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                                 <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td style=\"padding-bottom:15px;\">\n                                        <button class=\"btn btn-block solarPlotButton\" type=\"button\" onclick=\"singleAxisPlot('Monthly Elec. Energy (kW-hr)','electricalEnergyMonthKWHr',11)\">Monthly Electrical Energy</button>\n                                    </td>\n                                    <td></td>\n                                </tr>\n                            </table>\n                            <div class=\"div\" id=\"solarChart\"></div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card' id=\"outputCard\">\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Design Performance</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <table width='100%'>\n                                <tr>\n                                    <td width='50%'><span class=\"card-text\" ><b>Parameter</b> </span></td>\n                                    <td width='5%'></td>\n                                    <td width='15%' align='center'><b><span class=\"performance-data\" id=\"yearColumnLabel\">Min.</span></b></td>\n                                    <td width='15%' align='center'><span class=\"performance-data\"><b>Avg.</b></span></td>\n                                    <td width='15%' align='center'><span class=\"performance-data\"><b>Max.</b></span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Panel Count</span></td>\n                                    <td></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"numberOfPanels\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Total Panel Cost (1000€)</span></td>\n                                    <td></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"totalPanelCost\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Field Area (sq-meters)</span></td>\n                                    <td></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"fieldArea\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Field Width (meters)</span></td>\n                                    <td></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"fieldWidth\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Row Length (meters)</span></td>\n                                    <td></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"fieldLength\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Field Utilization (%)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Field Utilization\",\"The percentage of the solar field that is occupied with solar panels\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"fieldUtilFactorPer\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Winter Shadow (%)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Winter Shadow\",\"The percentage of solar panel area that is covered in shadow at noon at Dec. 21\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"winterShadow\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Spring Shadow (%)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Spring Shadow\",\"The percentage of solar panel area that is covered in shadow at noon at Mar. 21\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"springShadow\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">PhotoV. Eff. at 25C (%)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Photovoltaic efficiency\",\"The amount of power collected  on a panel given a perpendicular incidence of solar density of 1kw/sq-meter\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"panelEta25Per\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" >-</span></td>\n                               </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Peak Power (kW)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Peak Power (kW)\",\"Electrical power at 12 noon on the sunniest day of the year\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalPowerMin\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalPowerAvg\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalPowerMax\">0.0 </span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Peak Energy (kW-hr)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Peak Energy\",\"Total electrical energy collected on the sunniest day of the year.\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalEnergyMin\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalEnergyAvg\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"peakElectricalEnergyMax\">0.0 </span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Yearly Energy (1000kW-hr)</span></td>\n                                    <td width='5%'>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Yearly Energy\",\"Total electrical energy collected for 1 year.\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlyElectricalEnergyMin\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlyElectricalEnergyAvg\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlyElectricalEnergyMax\">0.0 </span></td>\n                                </tr>\n                                <tr>\n                                    <td><span class=\"card-text\">Yearly Savings (1000€)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Yearly Savings\",\"Total electrical energy collected for 1 year x electric rate\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlySavingsMin\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlySavingsAvg\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"yearlySavingsMax\">0.0 </span></td>\n                                </tr>\n                                <!--\n                                <tr>\n                                    <td><span class=\"card-text\">Payback Period (Years)</span></td>\n                                    <td>\n                                        <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Performance\", \"Payback Period\",\"Total cost / year savings\")'>&#9432;</button>\n                                    </td>\n                                    <td align='center'><span class=\"performance-data\" id=\"elecPaybackTimeMin\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"elecPaybackTimeAvg\">0.0 </span></td>\n                                    <td align='center'><span class=\"performance-data\" id=\"elecPaybackTimeMax\">0.0 </span></td>\n                                </tr>\n                                -->\n                            </table>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card' id=\"inputParameterCard\">\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Design Parameters</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <button class=\"btn card-button\"  id=\"calculateSolarButton\" type=\"button\" onclick=\"readSolarInputData()\">Calculate</button>\n                            <form>\n                                <table width='100%'>\n                                    <tr>\n                                        <td>\n                                            <span class=\"card-text\">Panel type</span>\n                                        </td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Panel type\", \"60 cell vs 72 cell\", \"/img/solar-field-designer/60cellvs72cell.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td>\n                                            <table class=\"div radio-button-border\" width=\"100%\" style=\"border-bottom-width:1px;\">\n                                                <tr>\n                                                    <td width='25%' align='center' valign='middle'><input class=\"form-check\" id=\"cell60\" type=\"radio\" name=\"cellType\" value=\"60\" checked=\"\"></td>\n                                                    <td width='75%' align='left' ><label style=\"font-size: 200%;\" for=\"cell60\">60 Cell</label></td>\n                                                </tr>\n                                                <tr>\n                                                    <td align='center' valign='middle'><input class=\"form-check\" id=\"cell72\" type=\"radio\" name=\"cellType\" value=\"72\"></td>\n                                                    <td align='left'  ><label style=\"font-size: 200%;\" for=\"cell72\">72 Cell</label></td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Panel Orientation</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Panel Orientation\", \"landscape vs portrait\", \"/img/solar-field-designer/portraitLandscape.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td>\n                                            <table class=\"div radio-button-border\" width=\"100%\" style=\"border-bottom-width:1px;\">\n                                                <tr>\n                                                    <td width='25%' align='center' valign='middle'><input class=\"form-check\" id=\"portrait\" type=\"radio\" name=\"orientation\" value=\"portrait\" checked=\"\"></td>\n                                                    <td width='75%' align='left' ><label style=\"font-size: 200%;\" for=\"portrait\">Portrait</label></td>\n                                                </tr>\n                                                <tr>\n                                                    <td align='center' valign='middle'><input class=\"form-check\" id=\"landscape\" type=\"radio\" name=\"orientation\" value=\"landscape\"></td>\n                                                    <td align='left'  ><label style=\"font-size: 200%;\" for=\"landscape\">Landscape</label></td>\n                                                </tr>\n                                            </table>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Panel Power at 25C (W)</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Parameters\", \"Solar Panel Power\", \"A 60-cell solar panel will have a typical capacity of 250 to 300 watts if polycrystalline, and 310 to 350 watts if monocrystalline. A 72-cell solar panel will have a typical capacity of 300 to 350 watts if polycrystalline, and up to 400 watts if monocrystalline.\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"panelPower25C\" type=\"text\" value=\"335\"></td>\n                                    </tr>\n                                    <!--\n                                    <tr>\n                                        <td><span class=\"card-text\">Panel Power at 50C (W)</span></td>\n                                        <td></td>\n                                        <td><input class=\"form-control center-justify\" id=\"panelPower50C\" type=\"text\" value=\"245\"></td>\n                                    </tr>\n                                    -->\n                                    <tr>\n                                        <td><span class=\"card-text\">Installed Cost per Watt (€/Watt)</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpDialog(\"Design Parameters\", \"Solar Panel Cost\",\"Varies greatly from 1.0 €/Watt to 3.0 €/Watt depending on location\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"costPerWatt\" type=\"text\" value=\"1.1\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Panels Per Tile</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Tiles of Solar Panels\", \"\", \"/img/solar-field-designer/solarPanelTiles.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"panelsPerTile\" type=\"text\" value=\"2\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Tiles Per Row</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Tiles Per Row\", \"Showing 3 panels per tile, 4 tiles per row.\", \"/img/solar-field-designer/solarPanelRowTiles.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"tilesPerRow\" type=\"text\" value=\"27\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Rows</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Solar Panel Rows\", \"\", \"/img/solar-field-designer/SolarPanelRows.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"numberOfRows\" type=\"text\" value=\"1\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Spacing Between Rows (m)</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Spacing Between Rows\", \"\", \"/img/solar-field-designer/shadeSpace.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"spaceBetweenRows\" type=\"text\" value=\"0.1\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Tilt angle (deg.)</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Tilt angle\", \"\", \"/img/solar-field-designer/solarPanelAngle.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"panelInclinDeg\" type=\"text\" value=\"40\"></td>\n                                    </tr>\n                                    <tr>\n                                        <td><span class=\"card-text\">Azimuth Angle (deg.)</span></td>\n                                        <td>\n                                            <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Design Parameters\", \"Azimuth angle\", \"\", \"/img/solar-field-designer/solarPanelAngle.jpg\")'>&#9432;</button>\n                                        </td>\n                                        <td><input class=\"form-control center-justify\" id=\"rowAzimuth\" type=\"text\" value=\"20\"></td>\n                                    </tr>\n                                    <!--\n                                    <tr>\n                                        <td><span class=\"card-text\">Transmission Efficiency (%)</span></td>\n                                        <td></td>\n                                        <td><input class=\"form-control center-justify\" id=\"transEtaPer\" type=\"text\" value=\"95\"></td>\n                                    </tr>\n                                    -->\n                                    <tr>\n                                        <td><span class=\"card-text\">Electric Rate (€/kW-hr)</span></td>\n                                        <td></td>\n                                        <td><input class=\"form-control center-justify\" id=\"elecPayback\" type=\"text\" value=\"0.13\"></td>\n                                    </tr>\n                                </table>\n                            </form>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card' id=\"locationCard\">\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Field Location</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <button class=\"btn card-button\"  id=\"getSolarDataButton\" type=\"button\" onclick=\"getSolarData()\">Find</button>\n                            <table  width='100%'>\n                                <tr>\n                                    <td>\n                                        <table width='100%'>\n                                            <tr>\n                                                <td width='55%'><span class=\"card-text\">City</span></td>\n                                                <td width='5%'>\n                                                    <button class=\"btn moreInfo\" type=\"button\" onclick='helpImageDialog(\"Field Location\", \"Database coverage\", \"\", \"/img/solar-field-designer/pvgisCoverage.png\")'>&#9432;</button>\n                                                </td>\n                                                <td width='40%'><input class=\"form-control center-justify\" id=\"city\" type=\"text\" value=\"Fohnsdorf\"></td>\n                                            </tr>\n                                            <tr>\n                                                <td><span class=\"card-text\">2 Digit Country Code</span></td>\n                                                <td>\n                                                    <a href=\"https://www.iban.com/country-codes\" target=\"_blank\"><button class=\"btn moreInfo\" type=\"button\">&#9432;</button></a>\n                                                </td>\n                                                <td><input class=\"form-control center-justify\" id=\"countryCode\" type=\"text\" value=\"AT\"></td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <table width='100%' id=\"latLongTable\">\n                                            <tr>\n                                                <td width='55%'><span class=\"card-text\">Latitude (deg.)</span></td>\n                                                <td width='5%'></td>\n                                                <td width='40%' align=\"center\"><span class=\"performance-data\" id=\"latitudeDeg\" ></span></td>\n                                            </tr>\n                                            <tr>\n                                                <td><span class=\"card-text\">Longitude (deg.)</span></td>\n                                                <td></td>\n                                                <td align=\"center\"><span class=\"performance-data\" id=\"longitudeDeg\"></span></td>\n                                            </tr>\n                                            <tr>\n                                                <td><span class=\"card-text\">Database</span></td>\n                                                <td></td>\n                                                <td align=\"center\"><span class=\"performance-data\" id=\"database\"></span></td>\n                                            </tr>\n                                        </table>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n        <hr>\n        <table width=\"100%\" background=\"/img/rappsSea.png\" style=\"background-repeat: no-repeat;background-size: 100% 15vw;\">\n            <tr>\n                <td width=\"27%\"></td>\n                <td width=\"15%\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#good-health\" target=\"_blank\"><img src=\"/img/SDG3.png\" width=\"100px\"/></a></td>\n                <td width=\"15%\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#affordable-and-clean-energy\" target=\"_blank\"><img src=\"/img/SDG7.png\" width=\"100px\"/></a></td>\n                <td width=\"15%\" align=\"center\" style=\"padding-top:25px;padding-bottom:25px;\"><a href=\"https://www.undp.org/sustainable-development-goals#industry-innovation-and-infrastructure\" target=\"_blank\"><img src=\"/img/SDG9.png\" width=\"100px\"/></a></td>\n                <td width=\"28%\"></td>\n           </tr>\n        </table>\n        <hr>\n    </div>\n    <div id=\"helpImageDialog\" title=\"Test\" class='card'>\n        <p class='card-title' id='helpImageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <table width=\"100%\">\n                <tr>\n                    <td width=\"100%\">\n                        <img id=\"helpImageDialogImage\" src='/img/bl-mc-icon.png' width=\"100%\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <span class='tableText' id='helpImageDialogText'>Text</span>\n                    </td>\n            </table>\n        </div>\n    </div>\n    <div id=\"helpDialog\" title=\"Test\" class='card'>\n        <p class='card-title' id='helpDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <table width=\"100%\">\n                <tr>\n                    <td align=\"left\">\n                        <span class='tableText left-justify' id='helpDialogText'>Text</span>\n                    </td>\n            </table>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "9e586bef.37d618"
            ]
        ]
    },
    {
        "id": "a4b0797a.9e83b8",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.solarCalculator}}}",
        "output": "str",
        "x": 880,
        "y": 80,
        "wires": [
            [
                "87c98463.1aff88"
            ]
        ]
    },
    {
        "id": "1e887e7c.c49d62",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var fieldDesc = {};\n        var solarDataArray = [];\n        var PI = Math.PI;\n        var TWOPI = 2.0 * PI;\n        var degToRad = PI / 180.0;\n        var radToDeg = 180.0 / PI;\n        var monthDay  = [[0,30],[31,58],[59,89],[90,119],[120,150],[151,180],[181,211],[212,242],[243,272],[273,303],[304,333],[334,364]];\n        var montNday  = [31,    28,     31,     30,      31,       30,       31,       31,       30,       31,       30,       31];\n        \n        var MaxSolarFlux = 950.0; //Watts per m2\n        var length72 = 1.98; //m\n        var length60 = 1.65; //m\n        var width72 = 1.0; //m\n        var width60 = 1.0; //m\n\n        useWebSockets(true);\n\n        function onDocumentReady()\n        {\n            $(\"#plotCard\").hide();\n            $(\"#outputCard\").hide();\n            $(\"#solarChart\").hide();\n            $(\"#inputParameterCard\").hide();\n            $(\"#latLongTable\").hide();\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'solarData':\n                        $(\"#messageDialog\" ).dialog('close');  \n                        $(\"#locationCard\").show();\n                        $(\"#latLongTable\").show();\n                        $(\"#inputParameterCard\").show();\n                        $(\"#latitudeDeg\").text(msg.location.latitudeDeg.toString());\n                        $(\"#longitudeDeg\").text(msg.location.longitudeDeg.toString());\n                        $(\"#database\").text(msg.location.database);\n                        solarDataArray = msg.payload;\n                        break;\n                    case 'invalidLocation':\n                        $(\"#messageDialog\" ).dialog('close');  \n                        acknowledgeDialog('Acknowledge', 'Error', 'Cannot find location.');\n                        $(\"#locationCard\").show();\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        function readSolarInputData()\n        {\n          try\n          {\n            messageDialog(\"Message\", \"Please wait\", \"Calculating solar field...\");\n            $(\"#inputParameterCard\").hide();\n            $(\"#plotCard\").hide();\n            $(\"#outputCard\").hide();\n            $(\"#solarChart\").hide();\n            $(\"#locationCard\").hide();\n\n            fieldDesc.latitudeDeg = Number($(\"#latitudeDeg\").text());\n            fieldDesc.longitudeDeg = Number($(\"#longitudeDeg\").text());\n\n            fieldDesc.cell60 = $(\"#cell60\").is(':checked');\n            fieldDesc.cell72 = $(\"#cell72\").is(':checked');\n            fieldDesc.portrait = $(\"#portrait\").is(':checked');\n            fieldDesc.landscape = $(\"#landscape\").is(':checked');\n        \n            fieldDesc.panelPower25C = Number($(\"#panelPower25C\").val());\n            checkLimits(fieldDesc.panelPower25C, 'Panel Power at 25C', 1, 1000);\n        \n//Remove temp effect\n//            fieldDesc.panelPower50C = Number($(\"#panelPower50C\").val());\n//            checkLimits(fieldDesc.panelPower50C, 'Panel Power at 50C', 1, 1000);\n        \n            fieldDesc.panelInclinDeg = Number($(\"#panelInclinDeg\").val());\n            checkLimits(fieldDesc.panelInclinDeg, 'Panel Inclination', 0, 90);\n            \n            var costPerWatt = Number($(\"#costPerWatt\").val());\n            checkLimits(costPerWatt, 'Installed Panel Cost per Watt', 0.5, 10);\n       \n            fieldDesc.panelCost = fieldDesc.panelPower25C * costPerWatt;\n\n            fieldDesc.panelsPerTile = Number($(\"#panelsPerTile\").val());\n            checkLimits(fieldDesc.panelsPerTile, 'Panels Per Tile', 1, 1000000);\n        \n            fieldDesc.tilesPerRow = Number($(\"#tilesPerRow\").val());\n            checkLimits(fieldDesc.tilesPerRow, 'Tiles Per Row', 1, 1000000);\n        \n            fieldDesc.numberOfRows = Number($(\"#numberOfRows\").val());\n            checkLimits(fieldDesc.numberOfRows, 'Number of Rows', 1, 10000000);\n        \n            fieldDesc.spaceBetweenRows = Number($(\"#spaceBetweenRows\").val());\n            checkLimits(fieldDesc.spaceBetweenRows, 'Spacing Between Rows', 0, 10000000);\n        \n            fieldDesc.rowAzimuth = Number($(\"#rowAzimuth\").val());\n            checkLimits(fieldDesc.rowAzimuth, 'Row Orientation to South', -180, 180);\n\n            fieldDesc.transEtaPer = 100.0;        \n//            fieldDesc.transEtaPer = Number($(\"#transEtaPer\").val());\n//            checkLimits(fieldDesc.transEtaPer, 'Electrical Transmission Efficiency', 0.1, 100);\n        \n            fieldDesc.elecPayback = Number($(\"#elecPayback\").val()); //euro per hour\n            checkLimits(fieldDesc.elecPayback, 'Electrical Payback', 0.001, 1000000000);\n            fieldDesc.elecPayback = fieldDesc.elecPayback * 100.0; //(euro cents per hour)\n\n            $(\"#winterShadow\").text(\"0.0\");\n            $(\"#springShadow\").text(\"0.0\");\n            $(\"#summerShadow\").text(\"0.0\");\n            $(\"#fallShadow\").text(\"0.0\");\n            $(\"#peakElectricalPower\").text(\"0.0\");\n            $(\"#peakElectricalEnergy\").text(\"0.0\");\n            $(\"#yearlyElectricalEnergy\").text(\"0.0\");\n \n            var tileWidth = 0.0;\n            var tileHeight = 0.0;\n            if (fieldDesc.portrait)\n            {\n              if(fieldDesc.cell60)\n              {\n                tileWidth = width60;\n                tileHeight = length60 * fieldDesc.panelsPerTile;\n              }\n              else\n              {\n                tileWidth = width72;\n                tileHeight = length72 * fieldDesc.panelsPerTile;\n              }\n            }\n            else\n            {\n              if(fieldDesc.cell60)\n              {\n                tileWidth = length60;\n                tileHeight = width60 * fieldDesc.panelsPerTile;\n              }\n              else\n              {\n                tileWidth = length72;\n                tileHeight = width72 * fieldDesc.panelsPerTile;\n              }\n            }\n            var cosT = Math.cos(fieldDesc.panelInclinDeg * degToRad);\n            fieldDesc.numberOfPanels = fieldDesc.numberOfRows * fieldDesc.tilesPerRow * fieldDesc.panelsPerTile;\n            fieldDesc.totalPanelCost =fieldDesc.numberOfPanels * fieldDesc.panelCost;\n            fieldDesc.fieldArea = fieldDesc.numberOfRows * fieldDesc.tilesPerRow * tileWidth * (tileHeight * cosT + fieldDesc.spaceBetweenRows);\n            fieldDesc.fieldLength = fieldDesc.tilesPerRow * tileWidth;\n            fieldDesc.fieldWidth = fieldDesc.numberOfRows * (tileHeight * cosT + fieldDesc.spaceBetweenRows);\n            fieldDesc.fieldUtilFactorPer = 100.0 * tileHeight * cosT / (tileHeight * cosT + fieldDesc.spaceBetweenRows);\n            fieldDesc.panelEta25Per = 0.1 * fieldDesc.panelPower25C * fieldDesc.panelsPerTile / (tileWidth * tileHeight);\n//remove temperature effect\n//            fieldDesc.kLperDegC = (1.0 - fieldDesc.panelPower50C / fieldDesc.panelPower25C) / (25.0);\n            fieldDesc.kLperDegC = 0.0; \n\n            setTimeout(updateSolarCalculatorResults, 1000);\n\n\n          } catch (e)\n          {\n            acknowledgeDialog('Acknowledge', 'Invalid Entry', e);\n            $(\"#inputParameterCard\").show();\n            $(\"#plotCard\").hide();\n            $(\"#outputCard\").hide();\n            $(\"#solarChart\").hide();\n            $(\"#locationCard\").show();\n            $(\"#messageDialog\" ).dialog('close');  \n          }\n        }\n        function getSolarData()\n        {\n            messageDialog(\"Message\", \"Please wait\", \"Retrieving solar data...\");\n            $(\"#plotCard\").hide();\n            $(\"#outputCard\").hide();\n            $(\"#solarChart\").hide();\n            $(\"#inputParameterCard\").hide();\n            $(\"#latLongTable\").hide();\n            $(\"#locationCard\").hide();\n            \n            ws.send(JSON.stringify(\n            {\n                topic       : 'getSolarData',\n                userID      : userID,\n                payload     : \n                {\n                    city           : $(\"#city\").val(),\n                    countryCode    : $(\"#countryCode\").val(),\n                }\n            }));\n        }\n        function checkLimits(value, name, min, max)\n        {\n          if(isNaN(value)) throw 'Error: ' + name + ' is not a number.';\n          if (value < min) throw 'Error: ' + name + ' is less than ' + min;\n          if (value > max) throw 'Error: ' + name + ' is greater than ' + max;\n        }\n        function round(value, places)\n        {\n          var ten = 1;\n          if (places > 0)\n          {\n            for (var ii = 0; ii < places; ++ii) ten = ten * 10;\n          }\n          return Math.round(value * ten) / ten;\n        }\n        function updateSolarCalculatorResults()\n        {\n            for (var ii = 0; ii < 11; ++ii)\n            {\n                calcPlots(solarDataArray[ii]);\n            }\n\n          try\n          {\n\n            $(\"#numberOfPanels\").text(fieldDesc.numberOfPanels.toFixed(0));\n            $(\"#totalPanelCost\").text((fieldDesc.totalPanelCost / 1000).toFixed(1));\n            $(\"#panelEta25Per\").text(fieldDesc.panelEta25Per.toFixed(1));\n            $(\"#fieldArea\").text(fieldDesc.fieldArea.toFixed(1));\n            $(\"#fieldWidth\").text(fieldDesc.fieldWidth.toFixed(1));\n            $(\"#fieldLength\").text(fieldDesc.fieldLength.toFixed(1));\n            $(\"#fieldUtilFactorPer\").text(fieldDesc.fieldUtilFactorPer.toFixed(1));\n            $(\"#winterShadow\").text(solarDataArray[0].winterShadow.toFixed(1));\n            $(\"#springShadow\").text(solarDataArray[0].springShadow.toFixed(1));\n            \n//            $(\"#peakElectricalPower\").text(solarCalcDataYear.peakElectricalPower.toString());\n//            $(\"#peakElectricalEnergy\").text(solarCalcDataYear.peakElectricalEnergy.toString());\n//            $(\"#yearlyElectricalEnergy\").text(solarCalcDataYear.yearlyElectricalEnergy.toString());\n//            $(\"#elecPaybackTime\").text(solarCalcDataYear.elecPaybackTime.toString());\n        \n            $(\"#peakElectricalPowerAvg\").text(solarDataArray[0].peakElectricalPower.toFixed(1));\n            $(\"#peakElectricalEnergyAvg\").text((solarDataArray[0].peakElectricalEnergy * 24).toFixed(0));\n            $(\"#yearlyElectricalEnergyAvg\").text((solarDataArray[0].yearlyElectricalEnergy * 24 * 365 / 1000).toFixed(1));\n//            $(\"#elecPaybackTimeAvg\").text(solarDataArray[0].elecPaybackTime.toFixed(2));\n            var min = solarDataArray[0].peakElectricalPower;\n            var max = min\n            for (var iy = 1; iy <11; ++iy)\n            {\n                if (min > solarDataArray[iy].peakElectricalPower) min = solarDataArray[iy].peakElectricalPower;\n                if (max < solarDataArray[iy].peakElectricalPower) max = solarDataArray[iy].peakElectricalPower;\n            }\n            $(\"#peakElectricalPowerMin\").text(min.toFixed(1));\n            $(\"#peakElectricalPowerMax\").text(max.toFixed(1));\n            min = solarDataArray[0].peakElectricalEnergy;\n            max = min\n            for (var iy = 1; iy <11; ++iy)\n            {\n                if (min > solarDataArray[iy].peakElectricalEnergy) min = solarDataArray[iy].peakElectricalEnergy;\n                if (max < solarDataArray[iy].peakElectricalEnergy) max = solarDataArray[iy].peakElectricalEnergy;\n            }\n            $(\"#peakElectricalEnergyMin\").text((min * 24).toFixed(0));\n            $(\"#peakElectricalEnergyMax\").text((max * 24).toFixed(0));\n            min = solarDataArray[0].yearlyElectricalEnergy;\n            max = min\n            for (var iy = 1; iy <11; ++iy)\n            {\n                if (min > solarDataArray[iy].yearlyElectricalEnergy) min = solarDataArray[iy].yearlyElectricalEnergy;\n                if (max < solarDataArray[iy].yearlyElectricalEnergy) max = solarDataArray[iy].yearlyElectricalEnergy;\n            }\n            $(\"#yearlyElectricalEnergyMin\").text((min * 24 * 365 / 1000).toFixed(1));\n            $(\"#yearlyElectricalEnergyMax\").text((max * 24 * 365 / 1000).toFixed(1));\n            \n            var yearlySavingsMin = 0.01 * fieldDesc.elecPayback * min * 24.0 *365.0 / 1000;\n            var yearlySavingsMax = 0.01 * fieldDesc.elecPayback * max * 24.0 *365.0 / 1000;\n            var yearlySavingsAvg = 0.01 * fieldDesc.elecPayback * solarDataArray[0].yearlyElectricalEnergy * 24.0 *365.0 / 1000;\n            $(\"#yearlySavingsMin\").text(yearlySavingsMin.toFixed(1));\n            $(\"#yearlySavingsMax\").text(yearlySavingsMax.toFixed(1));\n            $(\"#yearlySavingsAvg\").text(yearlySavingsAvg.toFixed(1));\n/*\n            min = solarDataArray[0].elecPaybackTime;\n            max = min\n            for (var iy = 1; iy <11; ++iy)\n            {\n                if (min > solarDataArray[iy].elecPaybackTime) min = solarDataArray[iy].elecPaybackTime;\n                if (max < solarDataArray[iy].elecPaybackTime) max = solarDataArray[iy].elecPaybackTime;\n            }\n            $(\"#elecPaybackTimeMin\").text(min.toFixed(2));\n            $(\"#elecPaybackTimeMax\").text(max.toFixed(2));\n*/        \n            $(\"#inputParameterCard\").show();\n            $(\"#plotCard\").show();\n            $(\"#outputCard\").show();\n            $(\"#locationCard\").show();\n            $(\"#messageDialog\" ).dialog('close');  \n            \n          } catch (e)\n          {\n            alert('ERROR: Field Calcualtion');\n            $(\"#inputParameterCard\").show();\n            $(\"#locationCard\").show();\n            $(\"#messageDialog\" ).dialog('close');  \n        \n          }\n        \n        }\n        \n        function singleAxisPlot(title, ydataName, numTraces)\n        {\n            $(\"#solarChart\").show();\n            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            var traces = [];\n            traces[0] = \n            {   x: months,\n                y: solarDataArray[0][ydataName],\n                type: 'bar',\n                name: 'Avg'\n            };\n            for (var iy = 1; iy < numTraces; ++iy)\n            {\n                traces[iy] = \n                {\n                    x: months,\n                    y: solarDataArray[iy][ydataName],\n                    type: 'line',\n                    name: solarDataArray[iy].year\n                };\n            }\n\n            var layout = \n            {\n                barmode: 'group',\n                title: \n                {\n                    text:title\n                },\n                xaxis: \n                {\n                    title: \n                    {\n                        text: 'Month'\n                    }\n                }\n            };\n        \n            Plotly.newPlot('solarChart', traces, layout, {displayModeBar: false, staticPlot: true});\n        }\n        function twoTracePlot(title, ydataName1, ydataName2, label1, label2)\n        {\n            $(\"#solarChart\").show();\n            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n            var traces = [];\n            traces[0] = \n            {   x: months,\n                y: solarDataArray[0][ydataName1],\n                type: 'bar',\n                name: label1\n            };\n            traces[1] = \n            {   x: months,\n                y: solarDataArray[0][ydataName2],\n                type: 'bar',\n                name: label2\n            };\n\n\n            var layout = \n            {\n                barmode: 'group',\n                title: \n                {\n                    text:title\n                },\n                xaxis: \n                {\n                    title: \n                    {\n                        text: 'Month'\n                    }\n                },\n            };\n        \n            Plotly.newPlot('solarChart', traces, layout, {displayModeBar: false, staticPlot: true});\n        }\n        $( function() \n        {\n            $( \"#helpImageDialog\" ).dialog(\n            {\n                width:    800,\n                autoOpen: false,\n                buttons:\n                [\n                    {\n                        text: \"Ok\",\n                        click: function() { $( this ).dialog( \"close\" );},\n                        showText: false\n                    },\n               ]\n            });\n            $( \"#helpDialog\" ).dialog(\n            {\n                width:    800,\n                autoOpen: false,\n                buttons:\n                [\n                    {\n                        text: \"Ok\",\n                        click: function() { $( this ).dialog( \"close\" );},\n                        showText: false\n                    },\n               ]\n            });\n        } );\n        function helpImageDialog(headerText, title, text, img)\n        {\n            $( \"#helpImageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#helpImageDialogTitle\" ).html(title);\n            $( \"#helpImageDialogText\" ).html(text);\n            $( \"#helpImageDialogImage\" ).attr('src',img);\n            $( \"#helpImageDialog\" ).dialog( \"open\" );\n        }\n        function helpDialog(headerText, title, text)\n        {\n            $( \"#helpDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#helpDialogTitle\" ).html(title);\n            $( \"#helpDialogText\" ).html(text);\n            $( \"#helpDialog\" ).dialog( \"open\" );\n        }\n",
        "output": "str",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "f40e8f38.e1db2"
            ]
        ]
    },
    {
        "id": "6187dbb8.1d7b74",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Solar Field Designer",
        "output": "str",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "1e887e7c.c49d62"
            ]
        ]
    },
    {
        "id": "263b66b3.43be5a",
        "type": "http in",
        "z": "ef3780c6.c3ac3",
        "name": "/solar-field-designer",
        "url": "/solar-field-designer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "6187dbb8.1d7b74"
            ]
        ]
    },
    {
        "id": "f40e8f38.e1db2",
        "type": "template",
        "z": "ef3780c6.c3ac3",
        "name": "script.solarCalculator",
        "field": "payload.script.solarCalculator",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function solarElevationAngleDeg(hoursAfterNoon, ndayJan1)\n        {\n          // Based on http://en.wikipedia.org/wiki/Solar_zenith_angle\n              var latitudeRad = degToRad * fieldDesc.latitudeDeg;\n              var sunDecRad = degToRad * sunDeclinationDeg(ndayJan1);\n              var sinElev = Math.cos(TWOPI * hoursAfterNoon / 24.0) * Math.cos(sunDecRad) * Math.cos(latitudeRad)\n                  + Math.sin(sunDecRad) * Math.sin(latitudeRad);\n              return Math.asin(sinElev) * radToDeg;\n        }\n        function sunDeclinationDeg(ndayJan1)\n        {\n          // Based on http://en.wikipedia.org/wiki/Position_of_the_Sun\n              var nDayPerYear = 365.0;\n              var ang1 = TWOPI * (ndayJan1  + 10.0) / nDayPerYear;\n              var ang2 = 2.0 * 0.0167 * Math.sin(TWOPI * (ndayJan1 - 2.0) / nDayPerYear);\n              var sinDec = Math.sin(-23.44 * degToRad) * Math.cos(ang1 + ang2);\n              return Math.asin(sinDec) * radToDeg;\n        }\n        function sunAzimuthDeg(hoursAfterNoon, ndayJan1)\n        {\n          // Based http://en.wikipedia.org/wiki/Solar_azimuth_angle\n              var elvAng = degToRad * solarElevationAngleDeg(hoursAfterNoon, ndayJan1);\n              var decAng = degToRad * sunDeclinationDeg(ndayJan1);\n              var hourAng = TWOPI * hoursAfterNoon / 24.0;\n              var latAng = fieldDesc.latitudeDeg * degToRad;\n              var sinAz = -Math.sin(hourAng) * Math.cos(decAng) / Math.cos(elvAng);\n        \n              var cosAz = -(Math.sin(decAng) * Math.cos(latAng) - Math.cos(hourAng) * Math.cos(decAng) * Math.sin(latAng)) / Math.cos(elvAng);\n              var az = Math.atan2(sinAz, cosAz) * radToDeg;\n              return az;\n        }\n        function getGlobalHorizontalDailyAvg(imonth,solarData)\n        {\n          \treturn 1000.0 * solarData.monthData[imonth].Hh / ( montNday[imonth]);\n        }\n        function getGlobalHorizontalDailyAvgForYear(solarData)\n        {\n          \tvar monthlyData = [];\n          \tfor (var imonth = 0; imonth < 12; ++imonth)\n          \t{\n          \t\tmonthlyData[imonth] = getGlobalHorizontalDailyAvg(imonth,solarData);\n          \t}\n          \treturn monthlyData;\n        }\n        function effectiveDaylightHoursForDay(ndayJan1)\n          {\n          \tvar hourStep = 2.0 / 60.0;\n          \tvar hour = -12.0;\n          \tvar effectiveDaylightHours = 0.0;\n          \tvar elevation = 0.0;\n          \twhile (hour < 12.0)\n          \t{\n          \t\televation = solarElevationAngleDeg(hour, ndayJan1);\n          \t\tif (elevation > 0) effectiveDaylightHours = effectiveDaylightHours + Math.sin(elevation * degToRad);\n          \t\thour = hour + hourStep;\n          \t}\n          \teffectiveDaylightHours = effectiveDaylightHours * hourStep / Math.sin(solarElevationAngleDeg(0.0, ndayJan1) * degToRad);\n          \treturn effectiveDaylightHours;\n        }\n        function midMonthDay(imonth)\n        {\n          \treturn (monthDay[imonth][1] + monthDay[imonth][0]) / 2;\n        }\n        function numDaysInMonth(imonth)\n        {\n          \treturn monthDay[imonth][1] - monthDay[imonth][0] + 1;\n        }\n        function effectiveDaylightHoursForMonth(imonth)\n        {\n          \tvar effectiveDaylightHours = 0.0;\n          \tfor (var iday = monthDay[imonth][0]; iday <= monthDay[imonth][1]; ++iday)\n          \t{\n          \t\teffectiveDaylightHours = effectiveDaylightHours + effectiveDaylightHoursForDay(iday) * Math.sin(solarElevationAngleDeg(0.0, iday) * degToRad);\n          \t}\n          \teffectiveDaylightHours = effectiveDaylightHours / Math.sin(solarElevationAngleDeg(0.0, midMonthDay(imonth)) * degToRad);\n          \teffectiveDaylightHours = effectiveDaylightHours / numDaysInMonth(imonth);\n          \treturn effectiveDaylightHours;\n        }\n        \n        function setLocation(solarData)\n        {\n            solarData.skyAttenuation = [];\n            solarData.effectiveDaylightHoursForMonthData = [];\n            solarData.temperature = [];\n          \tfor (var imonth = 0; imonth < 12; ++imonth) solarData.effectiveDaylightHoursForMonthData[imonth] = effectiveDaylightHoursForMonth(imonth);\n          \tvar gbhda =  getGlobalHorizontalDailyAvgForYear(solarData);\n          \tfor (var imonth = 0; imonth < 12; ++imonth)\n          \t{\n          \t\tvar tcorr = solarData.effectiveDaylightHoursForMonthData[imonth] * Math.sin(solarElevationAngleDeg(0.0, midMonthDay(imonth)) * degToRad);\n          \t\tsolarData.skyAttenuation[imonth] = gbhda[imonth] / tcorr / MaxSolarFlux;\n              solarData.temperature[imonth] = solarData.monthData[imonth].T24h;\n          \t}\n        }\n        function getSolarPowerDensityWM2(iday, hoursAfterNoon, solarData)\n        {\n          \tvar altSunRad = solarElevationAngleDeg(hoursAfterNoon, iday) * degToRad;\n          \tvar azSunRad = sunAzimuthDeg(hoursAfterNoon, iday) * degToRad;\n            var altPanelRad = (90.0 - fieldDesc.panelInclinDeg) * degToRad;\n          \tvar azPanelRad = fieldDesc.rowAzimuth * degToRad;\n            var rSun =\n              [\n                Math.cos(azSunRad) * Math.cos(altSunRad),\n                Math.sin(azSunRad) * Math.cos(altSunRad),\n                Math.sin(altSunRad)\n              ];\n            var rPanel =\n              [\n                Math.cos(azPanelRad) * Math.cos(altPanelRad),\n                Math.sin(azPanelRad) * Math.cos(altPanelRad),\n                Math.sin(altPanelRad)\n              ];\n            var dotProduct = 0.0;\n            for (var ii = 0; ii < 3; ++ ii) dotProduct = dotProduct + rSun[ii] * rPanel[ii];\n            if (dotProduct < 0.0) dotProduct = 0.0;\n          \tvar powerDensity = MaxSolarFlux * dotProduct;\n          \tpowerDensity = powerDensity * solarData.skyAttenuation[getMonthIndex(iday)];\n          \treturn powerDensity;\n        }\n        function setPeakDay(solarData)\n        {\n          \tsolarData.peakDay = 1;\n          \tvar peakSunshine = getSolarPowerDensityWM2(solarData.peakDay, 0.0,solarData);\n          \tfor (var ii = 0; ii < 365; ++ii)\n          \t{\n          \t\tvar sunshine = getSolarPowerDensityWM2(ii, 0.0,solarData);\n          \t\tif (sunshine > peakSunshine)\n          \t\t{\n          \t\t\tpeakSunshine = sunshine;\n          \t\t\tsolarData.peakDay = ii;\n          \t\t}\n          \t}\n        }\n        function getShadowPerc(iday, hoursAfterNoon)\n        {\n          \tvar sinTheta = Math.sin(fieldDesc.panelInclinDeg * degToRad);\n          \tvar cosTheta = Math.cos(fieldDesc.panelInclinDeg * degToRad);\n          \tvar tanAlpha = Math.tan(solarElevationAngleDeg(hoursAfterNoon, iday) * degToRad);\n          \tvar shadow = fieldDesc.fieldUtilFactorPer * sinTheta - (100.0 - fieldDesc.fieldUtilFactorPer) * cosTheta * tanAlpha;\n          \tshadow = shadow / (sinTheta + cosTheta * tanAlpha);\n          \tshadow = 100.0 * shadow / fieldDesc.fieldUtilFactorPer;\n          \tif (shadow < 0.0) shadow = 0.0;\n            if (fieldDesc.numberOfRows < 2) shadow = 0.0;\n          \treturn shadow;\n        }\n        function getMonthIndex(iday)\n        {\n          \tvar imonth = -1;\n          \twhile (imonth < 11)\n          \t{\n          \t\timonth = imonth + 1;\n          \t\tif ((monthDay[imonth][0] <= iday) && (iday <= monthDay[imonth][1])) return imonth;\n          \t}\n          \treturn -1;\n        }\n        function getPanelArea()\n        {\n          \treturn fieldDesc.fieldArea * 0.01 * fieldDesc.fieldUtilFactorPer / Math.cos(fieldDesc.panelInclinDeg * degToRad);\n        }\n        function getCollectionArea(iday, hoursAfterNoon)\n        {\n            var effectiveShadow = 0.01 * getShadowPerc(iday, hoursAfterNoon);\n            effectiveShadow = (fieldDesc.numberOfRows - 1) * effectiveShadow / fieldDesc.numberOfRows;\n          \treturn getPanelArea() * (1.0 - effectiveShadow);\n        }\n        function getSolarPowerKW(iday, hoursAfterNoon, solarData)\n        {\n          \tvar power = getSolarPowerDensityWM2(iday, hoursAfterNoon, solarData) * getCollectionArea(iday, hoursAfterNoon) / 1.0e+03;\n          \treturn power;\n        }\n        function getSolarEnergyForDayKWDay(iday, solarData)\n        {\n          \t// do only half day and then multiply by 2\n          \tvar time = 0.0;\n          \tvar stepHour = 0.1;\n          \tvar energy = 0.0;\n          \twhile (time <= 11.0)\n          \t{\n          \t\tenergy = energy + getSolarPowerKW(iday, time, solarData);\n          \t\ttime = time + stepHour;\n          \t}\n          \tenergy = 2.0 * energy * stepHour / 24.0;\n          \treturn energy;\n        }\n        function getElectricalEnergyForDayKWDay(iday, solarData)\n        {\n          \treturn getSolarEnergyForDayKWDay(iday,solarData) * 0.01 * getPanelEffPer(iday, solarData) * 0.01 * fieldDesc.transEtaPer;\n        }\n        function getPanelTemp(iday, solarData)\n        {\n            var monthFound = false;\n            var imonth = 0;\n            while (!monthFound && (imonth < 12) )\n            {\n              if ((monthDay[imonth][0] <= iday) && (iday <= monthDay[imonth][1]))\n              {\n                monthFound = true;\n              }\n              else\n              {\n                ++imonth;\n              }\n            }\n            if (imonth > 11) imonth = 5;\n          \tvar temp = solarData.monthData[imonth].T24h;\n          \treturn temp;\n        }\n        function getPanelEffPer(iday,solarData)\n        {\n          \tvar eta = fieldDesc.panelEta25Per * (1.0 - fieldDesc.kLperDegC * (getPanelTemp(iday,solarData) - 25));\n          \treturn eta;\n        }\n        function getElectricalPowerKW(iday, hoursAfterNoon, solarData)\n        {\n          \tvar power = getSolarPowerKW(iday, hoursAfterNoon, solarData) * 0.01 * getPanelEffPer(iday,solarData) * 0.01 * fieldDesc.transEtaPer;\n          \treturn power;\n        }\n        function getElectricalEnergyForYearKWYear(solarData)\n        {\n          \tvar energy = 0.0;\n          \tfor (var iday = 0; iday < 365; ++iday)\n          \t\tenergy = energy + getElectricalEnergyForDayKWDay(iday,solarData) / 365.0;\n          \treturn energy;\n        }\n        function round(value, places)\n        {\n            var ten = 1;\n            if (places > 0)\n            {\n              for (var ii = 0; ii < places; ++ii) ten = ten * 10;\n            }\n            return Math.round(value * ten) / ten;\n        }\n        function calcPlots(solarData)\n        {\n            setLocation(solarData);\n            setPeakDay(solarData);\n        \n            solarData.summerShadow = round(getShadowPerc(solarData.peakDay, 0), 4);\n            solarData.winterShadow = round(getShadowPerc(355, 0), 4);\n            solarData.springShadow = round(getShadowPerc(81, 0), 4);\n            solarData.fallShadow = round(getShadowPerc(264, 0), 4);\n            solarData.peakElectricalPower = round(getElectricalPowerKW(solarData.peakDay, 0.0, solarData), 4);\n            solarData.peakElectricalEnergy = round(getElectricalEnergyForDayKWDay(solarData.peakDay, solarData), 4);\n            solarData.yearlyElectricalEnergy = round(getElectricalEnergyForYearKWYear(solarData), 4);\n            solarData.elecPaybackTime = round(fieldDesc.totalPanelCost / (solarData.yearlyElectricalEnergy * 24 * 365 * 0.01 * fieldDesc.elecPayback),2);\n        \n            solarData.skyAttenuationPercent = [];\n            solarData.effectiveDaylightHoursForMonth = [];\n            solarData.peakSolarPowerDensityWM2 = [];\n            solarData.avgSolarPowerDensityWM2 = [];\n            solarData.peakSolarPowerKW = [];\n            solarData.avgSolarPowerKW = [];\n            solarData.solarEnergyKWDay = [];\n            solarData.accumSolarEnergyKWYear = [];\n            solarData.peakElectricalPowerKW = [];\n            solarData.avgElectricalPowerKW = [];\n            solarData.electricalEnergyKWDay = [];\n            solarData.electricalEnergyKWHr = [];\n            solarData.electricalEnergyMonthKWHr = [];\n            solarData.accumElectricalEnergyKWYear = [];\n            solarData.panelTempC = [];\n            solarData.panelEffPerc = [];\n            solarData.shadow09Perc = [];\n            solarData.shadow12Perc = [];\n            for (var imonth = 0; imonth < 12; ++imonth)\n            {\n              solarData.skyAttenuationPercent[imonth] = solarData.skyAttenuation[imonth] * 100;\n              solarData.effectiveDaylightHoursForMonth[imonth] = solarData.effectiveDaylightHoursForMonthData[imonth];\n        \n              solarData.avgSolarPowerDensityWM2[imonth]  = 0.0;\n        \n              solarData.avgSolarPowerKW[imonth]  = 0.0;\n        \n              solarData.avgElectricalPowerKW[imonth]  = 0.0;\n        \n              solarData.solarEnergyKWDay[imonth]      = 0.0;\n              solarData.electricalEnergyKWDay[imonth] = 0.0;\n        \n              solarData.panelTempC[imonth]   = 0.0;\n              solarData.panelEffPerc[imonth] = 0.0;\n              solarData.shadow09Perc[imonth] = 0.0;\n              solarData.shadow12Perc[imonth] = 0.0;\n        \n              for (var iday = monthDay[imonth][0]; iday <= monthDay[imonth][1]; ++iday)\n              {\n                solarData.avgSolarPowerDensityWM2[imonth]  = solarData.avgSolarPowerDensityWM2[imonth]  + getSolarPowerDensityWM2(iday, 0.0,solarData) / montNday[imonth];\n        \n                solarData.avgSolarPowerKW[imonth]  = solarData.avgSolarPowerKW[imonth]  + getSolarPowerKW(iday, 0.0, solarData) / montNday[imonth];\n        \n                solarData.avgElectricalPowerKW[imonth]  = solarData.avgElectricalPowerKW[imonth]  + getElectricalPowerKW(iday, 0.0,solarData) / montNday[imonth];\n        \n                solarData.solarEnergyKWDay[imonth]       = solarData.solarEnergyKWDay[imonth]       + getSolarEnergyForDayKWDay(iday, solarData) / montNday[imonth];\n                solarData.electricalEnergyKWDay[imonth]  = solarData.electricalEnergyKWDay[imonth]  + getElectricalEnergyForDayKWDay(iday, solarData) / montNday[imonth];\n        \n                solarData.panelTempC[imonth]   = solarData.panelTempC[imonth]   + getPanelTemp(iday, solarData)        / montNday[imonth];\n                solarData.panelEffPerc[imonth] = solarData.panelEffPerc[imonth] + getPanelEffPer(iday, solarData)      / montNday[imonth];\n                solarData.shadow09Perc[imonth] = solarData.shadow09Perc[imonth] + getShadowPerc(iday, -3.0) / montNday[imonth];\n                solarData.shadow12Perc[imonth] = solarData.shadow12Perc[imonth] + getShadowPerc(iday,  0.0) / montNday[imonth];\n        \n              }\n              solarData.accumSolarEnergyKWYear[imonth]      = solarData.solarEnergyKWDay[imonth] * montNday[imonth] / 365.0;\n              solarData.accumElectricalEnergyKWYear[imonth] = solarData.electricalEnergyKWDay[imonth] * montNday[imonth] / 365.0;\n              solarData.electricalEnergyMonthKWHr[imonth] = solarData.electricalEnergyKWDay[imonth] * montNday[imonth] * 24.0;\n              if (imonth > 0)\n              {\n                solarData.accumSolarEnergyKWYear[imonth]      = solarData.accumSolarEnergyKWYear[imonth] + solarData.accumSolarEnergyKWYear[imonth - 1];\n                solarData.accumElectricalEnergyKWYear[imonth] = solarData.accumElectricalEnergyKWYear[imonth] + solarData.accumElectricalEnergyKWYear[imonth - 1];\n              }\n            }\n            for (var imonth = 0; imonth < 12; ++imonth)\n            {\n              solarData.avgSolarPowerDensityWM2[imonth]  = round(solarData.avgSolarPowerDensityWM2[imonth], 4);\n        \n              solarData.avgSolarPowerKW[imonth]  = round(solarData.avgSolarPowerKW[imonth], 4);\n        \n              solarData.avgElectricalPowerKW[imonth]  = round(solarData.avgElectricalPowerKW[imonth], 4);\n        \n              solarData.solarEnergyKWDay[imonth]      = round(solarData.solarEnergyKWDay[imonth], 4);\n              solarData.electricalEnergyKWHr[imonth] = round(24 * solarData.electricalEnergyKWDay[imonth], 2);\n              solarData.electricalEnergyKWDay[imonth] = round(solarData.electricalEnergyKWDay[imonth], 4);\n\n              solarData.panelTempC[imonth]   = round(solarData.panelTempC[imonth], 4);\n              solarData.panelEffPerc[imonth] = round(solarData.panelEffPerc[imonth], 4);\n              solarData.shadow09Perc[imonth] = round(solarData.shadow09Perc[imonth], 4);\n              solarData.shadow12Perc[imonth] = round(solarData.shadow12Perc[imonth], 4);\n            }\n        }\n        \n",
        "output": "str",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "a4b0797a.9e83b8"
            ]
        ]
    },
    {
        "id": "11446558.79091b",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Brantevik",
        "output": "str",
        "x": 480,
        "y": 900,
        "wires": [
            [
                "ca138de2.f6762"
            ]
        ]
    },
    {
        "id": "2eb15a26.4e1336",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 490,
        "y": 860,
        "wires": [
            [
                "11446558.79091b"
            ]
        ]
    },
    {
        "id": "e2242fbb.bffa4",
        "type": "http in",
        "z": "2b074b3a.632fb4",
        "name": "/mybrantevik-widget",
        "url": "/mybrantevik-widget",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "2eb15a26.4e1336"
            ]
        ]
    },
    {
        "id": "e14c805b.d1dae",
        "type": "websocket out",
        "z": "2b074b3a.632fb4",
        "name": "/mybrantevik-widget/websocket",
        "server": "e865fc91.88a2a",
        "client": "",
        "x": 1290,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f5fe39ed.3730c8",
        "type": "link in",
        "z": "2b074b3a.632fb4",
        "name": "mybrantevik-widget web socket input",
        "links": [
            "304b3835.9b6918",
            "62fb9e33.02bff",
            "6d200160.afc65",
            "a988b405.392318",
            "e4b5cdfb.1cf63"
        ],
        "x": 1125,
        "y": 1160,
        "wires": [
            [
                "e14c805b.d1dae"
            ]
        ]
    },
    {
        "id": "2f1b0478.24543c",
        "type": "json",
        "z": "2b074b3a.632fb4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "9c6fa88d.798128"
            ]
        ]
    },
    {
        "id": "9c6fa88d.798128",
        "type": "function",
        "z": "2b074b3a.632fb4",
        "name": "Shift msg",
        "func": "return msg.payload;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1160,
        "wires": [
            [
                "82d5a7b5.21ed68"
            ]
        ]
    },
    {
        "id": "89399675.118c88",
        "type": "websocket in",
        "z": "2b074b3a.632fb4",
        "name": "/mybrantevik-widget/websocket",
        "server": "e865fc91.88a2a",
        "client": "",
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "2f1b0478.24543c"
            ]
        ]
    },
    {
        "id": "efc341f5.3b27c",
        "type": "link out",
        "z": "2b074b3a.632fb4",
        "name": "mybrantevik-widget web socket out",
        "links": [
            "6506cd6c.93ac74"
        ],
        "x": 735,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b744aba3.c55a18",
        "type": "subflow:adce79c2.bd6fa8",
        "z": "2b074b3a.632fb4",
        "name": "",
        "x": 1250,
        "y": 980,
        "wires": []
    },
    {
        "id": "82d5a7b5.21ed68",
        "type": "switch",
        "z": "2b074b3a.632fb4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "readDatabase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "b9a67318.b5255"
            ],
            [
                "efc341f5.3b27c"
            ]
        ]
    },
    {
        "id": "b9a67318.b5255",
        "type": "link out",
        "z": "2b074b3a.632fb4",
        "name": "mybrantevik-widget archive request",
        "links": [
            "c4595efc.a717b"
        ],
        "x": 735,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ca138de2.f6762",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(true);\n        var programStarted = false;\n        var validArchiveData = false;\n\n        function onDocumentReady()\n        {\n/*\n            var picNum =  Math.floor(Math.random() * 22) + 1;\n            if (picNum < 10)\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/brantevikPics/BrantePic0\" + picNum.toString() +\".jpg\");\n            }\n            else\n            {\n                $(\"#widgetTable\").attr(\"background\",\"/img/brantevikPics/BrantePic\" + picNum.toString() +\".jpg\");\n            }\n*/\n            $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-01.jpg' +'?t=' + new Date().getTime().toString());\n\n            setInterval(function()\n            {\n                $(\"#widgetTable\").attr(\"background\",'img/blinky-webcam/blinky-webcam-01.jpg' +'?t=' + new Date().getTime().toString());\n            }, 60000);\n\n            $(\"#historyChartContainer\").hide();\n            $(window).resize(function()\n            {\n                resizeText();\n            });\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                var webSocketMsg = \n                {\n                    topic     : 'getDevices',\n                    payload   : {},\n                    userID    : userID,\n                };\n                ws.send(JSON.stringify(webSocketMsg));\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    var device = JSON.parse(pako.inflate(msg.payload, { to: 'string' }));\n                    device.timeStamp = new Date().getTime();\n                    if ((device.deviceType == \"blinky-DS18B20\")     && (device.name == \"Brantevik\")) updateWaterTemp(device);\n                    if ((device.deviceType == \"blinky-wind\")     && (device.name == \"Brantevik\"))\n                    {\n                        updateWind(device);\n                        updateAirTemp(device);\n                    }\n                    break;\n                case 'readDatabase':\n                    if (msg.userID == userID)\n                    {\n                        putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getDevices':\n                    if (msg.userID == userID)\n                    {\n                        updateWaterTemp(msg.payload[0]);\n                        updateWind(msg.payload[1]);\n                        updateAirTemp(msg.payload[1]);\n                     }\n                    break;\n                default:\n                    break;\n            }\n        }\n        function getStatus()\n        {\n            $(\"#historyChartContainer\").hide();\n            $(\"#status\").show();\n        }\n        function resizeText()\n        {\n            if($('#status').is(\":visible\")) return;\n            if (validArchiveData)\n            {\n                windowWidth = $( '#historyChartContainer' ).width();\n                var width = $(\"#historyChartContainer\").width() * 0.92;\n                var height = historyPlotHeightRatio * width;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: true});\n                return;\n            }\n        }\n",
        "output": "str",
        "x": 750,
        "y": 860,
        "wires": [
            [
                "de9d819b.fe1b9"
            ]
        ]
    },
    {
        "id": "e2dfd322.f1489",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n",
        "output": "str",
        "x": 740,
        "y": 980,
        "wires": [
            [
                "f1ac07b2.ceee48"
            ]
        ]
    },
    {
        "id": "f1ac07b2.ceee48",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"status\" width=\"100%\" align=\"center\">\n        <table id=\"widgetTable\" width=\"100%\" background=\"/img/blinky-webcam/blinky-webcam-01.jpg\" style=\"background-size:100%;background-repeat:no-repeat;background-position:center;\">\n            <tr>\n                <td align='center' width=\"100%\" style=\"padding-top:0vw;padding-bottom:0vw;\">\n                    <span id=\"waterTempDate\" style=\"font-size: 5vw; color:white;\"></span> \n                </td>\n            </tr>\n            <tr>\n                <td width=\"100%\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='airTempLabel' style='font-size: 6vw; color:white;' >Luft</span>\n                            </td>\n                            <td align='right' width=\"60%\" style=\"padding-right:10vw;\"> \n                                <span id='airTemp' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='waterTempLabel' style='font-size: 6vw; color:white;' >Vatten</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='waterTemp' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='windLabel' style='font-size: 6vw; color:white;' >Vindstyrka</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='wind' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='gustsLabel' style='font-size: 6vw; color:white;' >Vindbyar</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='gusts' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td align='left'  width=\"40%\" style=\"padding-left:10vw;\">\n                                <span id='levelLabel' style='font-size: 6vw; color:white;' >Havsnivå</span>\n                            </td>\n                            <td  align='right' width=\"60%\" style=\"padding-right:10vw;\">\n                                <span id='level' style='font-size: 6vw; color:white;' ></span>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n            <tr>\n                <td align='center' style=\"padding-top:1vw;padding-bottom:1vw;\">\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerWhite' style=\"font-size: 3vw; color:white;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkWhite' style=\"font-size: 3vw; color: white;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <span id=\"dataFetchMessage\" style=\"font-size: 3vw; color:white;\"></span>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"historyButton\" style=\"font-size: 3vw; color:white; border-color:white;\" onclick=\"getArchive(168)\" >Historia</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"historyChartContainer\" width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"100%\">\n                    <div id=\"historyChart\" width=\"100%\" align=\"center\" style=\"border-width: 2px; border-style: solid; border-color: '#557a95'; border-radius: 3vw;background-color: #ecf2fe;\"></div>\n                </td>\n            </tr>\n            <tr>\n                <td align='center' >\n                    <table width=\"100%\">\n                        <tr>\n                            <td align='left' style=\"padding-left:3vw;\">\n                                <span id='powerBlack' style=\"font-size: 3vw; color:black;\">Powered by </span><a href='https://www.bl-mc.se' id='blinkyLinkBlack' style=\"font-size: 3vw; color: black;text-decoration: underline;\" target='_blank'>Blinky-Lite</a>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"tempButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayTemp()\" >Temp.</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"windButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayWind()\" >Vind</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"levelButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayLevel()\" >Nivå</button>\n                            </td>\n                            <td align='center' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"allButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"displayAll()\" >Allt</button>\n                            </td>\n                            <td align='right' style=\"padding-right:3vw;\">\n                                <button class='btn button-link' id=\"backButton\" style=\"font-size: 3vw; color:black; border-color:black;\" onclick=\"getStatus()\" >tillbaka</button>\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 950,
        "y": 980,
        "wires": [
            [
                "eac0118b.f84"
            ]
        ]
    },
    {
        "id": "de9d819b.fe1b9",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateAirTemp(device)\n        {\n//            var time = new Date(device.timeStamp).toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit', second: '2-digit'}).replace(',', '');\n//            $('#waterTempDate').text('Brantevik ' + time);\n            $('#airTemp').text(device.temperature.value.toFixed(0) + ' C');\n        }\n        function updateWaterTemp(device)\n        {\n           var time = new Date(device.timeStamp).toLocaleString('en-SE',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit', second: '2-digit'}).replace(',', '');\n            $('#waterTempDate').text('Brantevik ' + time);\n            $('#waterTemp').text(device.tempA.value.toFixed(0) + ' C');\n            var level = device.refDistance.value - device.ultraDistanceAvg.value;\n            $('#level').text(level.toFixed(0) + ' cm');\n//            $('#waterTemp').text('?');\n        }\n        function updateWind(device)\n        {\n            $('#wind').text(getDirectionText(device.windDirection1.value) + ' ' + device.windSpeed1.value.toFixed(1) + ' m/s');\n            $('#gusts').text(getDirectionText(device.windDirection2.value) + ' ' + device.gusts.value.toFixed(1) + ' m/s');\n        }\n        function getDirectionText(wd)\n        {\n            var dirText = '';           \n            if ((  0.0 <= wd) && (wd <=  22.5)) dirText = 'N ';\n            if (( 22.5 <  wd) && (wd <=  67.5)) dirText = 'NE';\n            if (( 67.5 <  wd) && (wd <= 112.5)) dirText = 'E ';\n            if ((112.5 <  wd) && (wd <= 157.5)) dirText = 'SE';\n            if ((157.5 <  wd) && (wd <= 202.5)) dirText = 'S ';\n            if ((202.5 <  wd) && (wd <= 247.5)) dirText = 'SW';\n            if ((247.5 <  wd) && (wd <= 292.5)) dirText = 'W ';\n            if ((292.5 <  wd) && (wd <= 337.5)) dirText = 'NW';\n            if ((337.5 <  wd) && (wd <= 360.0)) dirText = 'N ';\n            return dirText;\n        }\n",
        "output": "str",
        "x": 780,
        "y": 900,
        "wires": [
            [
                "e67f95a4.5dbfa8"
            ]
        ]
    },
    {
        "id": "eac0118b.f84",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            max-width: 100%;\n            background-color: transparent !important;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n        .button-link \n        {\n            background: none!important;\n            border-type: solid;\n            padding: 2px!important;\n            cursor: pointer;\n        }\n",
        "output": "str",
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "b744aba3.c55a18"
            ]
        ]
    },
    {
        "id": "e67f95a4.5dbfa8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        var archiveRequestList = [];\n        var archiveList = [];\n        function getArchive(hours)\n        { \n            if (validArchiveData)\n            {\n                var width = $(\"#status\").width() * 0.92;\n                var height = $(\"#status\").height() * 0.87;\n                historyPlotLayout.width = width.toFixed(0);\n                historyPlotLayout.height = height.toFixed(0);\n                $(\"#status\").hide();\n                $(\"#historyChartContainer\").show();\n                Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2, historyPlotTrace3, historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n                return;\n            }\n            $(\"#historyButton\").hide();\n            $(\"#dataFetchMessage\").text('Hämtar data...');\n\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            if (startDate < 1627166453473) startDate = 1627166453473; //when ultra distance was added\n            archiveRequestList[0] = \n            {\n                deviceType : 'blinky-DS18B20',\n                name : 'Brantevik', \n                attr : ['tempA','ultraDistanceAvg','refDistance'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n            archiveRequestList[1] = \n            {\n                deviceType : 'blinky-wind',\n                name : 'Brantevik', \n                attr : ['temperature','windSpeed2','windDirection2','gusts'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n\n            getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            var actionMsg = \n                {\n                    device      : archiveRequestList[0]\n                };\n//            sendActionMsg('readDatabase','readDatabase', actionMsg);\n            var webSocketMsg = \n            {\n                topic     : 'readDatabase',\n                payload   : actionMsg,\n                userID    : userID,\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n        var historyPlotLayout = \n        {\n            plot_bgcolor:\"#ecf2fe\",\n            paper_bgcolor:\"#ecf2fe\",\n            showlegend  : true,\n            legend      : { x: 0, y: 1.15,\"orientation\": \"h\"},\n            height      : '100',\n            width       : '200',\n            xaxis       :\n            {\n//                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                type: 'date',\n                tickformat: '%d-%m %H:%M', // For more time formatting types, see: https://github.com/d3/d3-time-format/blob/master/README.md\n                fixedrange      : true,\n                dtick : 86400000\n            },\n            yaxis:\n            {\n                title           : '',\n                titlefont       : {color: 'black'},\n                tickfont        : {color: 'black'},\n                gridcolor       : 'grey',\n                zerolinecolor   : 'grey',\n                linecolor       : 'grey',\n                fixedrange      : true\n//                    range           : [0,30],\n//                    dtick           :  5\n\n            },\n            margin: \n            {\n                l: 35,\n                r: 5,\n                b: 25,\n                t: 1,\n                pad: 0\n            }\n        };\n        var historyPlotTrace1 = \n        {\n            x: [],\n            y: [],\n            name: 'Hav (C)',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#557a95',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace2 = \n        {\n            x: [],\n            y: [],\n            name: 'Luft (C)',\n            hovertemplate: '%{y}C',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  '#f2a31f',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace3 = \n        {\n            x: [],\n            y: [],\n            text: [],\n            name: 'Vind (m/s)',\n            hovertemplate: '<b>%{text}</b> %{y}m/S',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'red',width:2},\n            visible: true\n\n        };\n        var historyPlotTrace4 = \n        {\n            x: [],\n            y: [],\n            name: 'byar (m/s)',\n            hovertemplate: '%{y}cm',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'black',width:1, dash: 'dot',},\n            visible: true\n\n        };\n        var historyPlotTrace5 = \n        {\n            x: [],\n            y: [],\n            name: 'nivå (cm)',\n            hovertemplate: '%{y}cm',\n            yaxis: 'y1',\n            type: 'scatter',\n            mode: 'lines',\n            line: { color:  'green',width:2},\n            visible: true\n\n        };\n         var historyPlotHeightRatio = 1.0;\n        function plotArchive()\n        {\n            $(\"#dataFetchMessage\").text('');\n            $(\"#historyButton\").show();\n            \n            var width = $(\"#status\").width() * 0.92;\n            var height = $(\"#status\").height() * 0.87;\n            historyPlotHeightRatio = height / width;\n            historyPlotLayout.width = width.toFixed(0);\n            historyPlotLayout.height = height.toFixed(0);\n            \n            $(\"#status\").hide();\n            $(\"#historyChartContainer\").show();\n            validArchiveData = true;\n            historyPlotTrace1.x = [];\n            historyPlotTrace1.y = [];\n            historyPlotTrace2.x = [];\n            historyPlotTrace2.y = [];\n            historyPlotTrace3.x = [];\n            historyPlotTrace3.y = [];\n            historyPlotTrace3.text = [];\n            historyPlotTrace4.x = [];\n            historyPlotTrace4.y = [];\n            historyPlotTrace4.text = [];\n            historyPlotTrace5.x = [];\n            historyPlotTrace5.y = [];\n            var waterTempBeginTime = 1627166453473; //10pm July 24 2021 is 1627158411481\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                var y = archiveList[0].trace[ii][archiveList[0].device.attr[0]];\n                if ((x > waterTempBeginTime) && (y > 0))\n                {\n                    historyPlotTrace1.x.push(x);\n                    historyPlotTrace1.y.push(y) ;\n                }\n            }\n            for (var ii = 0; ii < archiveList[1].trace.length; ++ii)\n            {\n                var x = archiveList[1].trace[ii].timeStamp;\n                if (x > waterTempBeginTime)\n                {\n                    historyPlotTrace2.x.push(x);\n                    historyPlotTrace2.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[0]]) ;\n                    historyPlotTrace3.x.push(x);\n                    historyPlotTrace3.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[1]]) ;\n                    historyPlotTrace3.text.push(getDirectionText(archiveList[1].trace[ii][archiveList[1].device.attr[2]]));\n                    historyPlotTrace4.x.push(x);\n                    historyPlotTrace4.y.push(archiveList[1].trace[ii][archiveList[1].device.attr[3]]) ;\n                    historyPlotTrace4.text.push(getDirectionText(archiveList[1].trace[ii][archiveList[1].device.attr[2]]));\n                }\n            }\n            for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n            {\n                var x = archiveList[0].trace[ii].timeStamp;\n                var ultraDistanceAvg = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                var refDistance      = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                if (x > waterTempBeginTime)\n                {\n                    historyPlotTrace5.x.push(x);\n                    historyPlotTrace5.y.push(refDistance - ultraDistanceAvg) ;\n                }\n            }\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2,historyPlotTrace3,historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n        }\n        function displayTemp()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayWind()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace3,historyPlotTrace4], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayLevel()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n        function displayAll()\n        {\n            Plotly.newPlot('historyChart', [historyPlotTrace1,historyPlotTrace2, historyPlotTrace3, historyPlotTrace5], historyPlotLayout, {displayModeBar: false, staticPlot: false});\n            return;\n        }\n",
        "output": "str",
        "x": 750,
        "y": 940,
        "wires": [
            [
                "e2dfd322.f1489"
            ]
        ]
    },
    {
        "id": "9bf7fd2e.f506c",
        "type": "subflow:ca529822.9112f8",
        "z": "2b074b3a.632fb4",
        "name": "",
        "x": 1270,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f892d30a.3c77f",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div style=\"padding-top:10px;\" >\n        <table width=\"100%\" background=\"/img/brantevikBanner.png\" style=\"background-repeat: no-repeat;background-size: 100% 15vw;\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle; padding-left:2vw; padding-top:2vw; padding-bottom:2vw;\"  width=\"20%\">\n                    <a href='/' >\n                        <img src=\"/img/bl-mc-icon-inverse.png\" width=\"40%\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                </td>\n                <td style=\"text-align:right; vertical-align:middle; padding-right:2vw;\" width=\"20%\">\n                   <a href=\"https://www.brantevik.se\" >\n                       <img src=\"/img/brantevikYellow.png\" width=\"40%\"/>\n                   </a>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 1140,
        "y": 1320,
        "wires": [
            [
                "9bf7fd2e.f506c"
            ]
        ]
    },
    {
        "id": "84bc95d0.2e5828",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n            background-color: white !important;\n            margin: auto;\n            padding-left:25px;\n            padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n        .googleSlide4by3-container \n        {\n            position: relative;\n            overflow: hidden;\n            padding-top: 75.0%;\n        }\n        .googleSlide4by3-iframe {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 0;\n        }        \n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 1010,
        "y": 1320,
        "wires": [
            [
                "f892d30a.3c77f"
            ]
        ]
    },
    {
        "id": "a972d9ab.0fcfd8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\" align=\"center\">\n        <table width=\"100%\">\n            <tr >\n                <td  width=\"100%\" style=\"padding-top:10px;\">\n                    <div class='card'>\n                        <div class='row'>\n                            <div class='col-md-2'>\n                            </div>\n                            <div class='col-md-8'>\n                                <p class='card-title' style=\"font-size: 4vw;\">Brantevik Väder</p>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                        <div class='card-body' align=\"center\">\n                            <div class='row'>\n                                <div class='col-md-12'>\n\n                                    <div style=\"height: 60vw; overflow:hidden;\">\n                                        <iframe scrolling=\"no\" width=\"100%\" height=\"100%\" style=\"border:0;background: #9eb5c7;\" src=\"/mybrantevik-widget\" allowtransparency=\"true\"></iframe>\n                                    </div>\n                               </div>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "84bc95d0.2e5828"
            ]
        ]
    },
    {
        "id": "736640bd.dccde",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 640,
        "y": 1320,
        "wires": [
            [
                "a972d9ab.0fcfd8"
            ]
        ]
    },
    {
        "id": "5e3b8709.00aa88",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        useWebSockets(false);\n\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n",
        "output": "str",
        "x": 650,
        "y": 1280,
        "wires": [
            [
                "736640bd.dccde"
            ]
        ]
    },
    {
        "id": "d8e50beb.98d0b8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Brantevik Väder",
        "output": "str",
        "x": 360,
        "y": 1320,
        "wires": [
            [
                "5e3b8709.00aa88"
            ]
        ]
    },
    {
        "id": "5c6e29b6.055de8",
        "type": "template",
        "z": "2b074b3a.632fb4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "BrantevikLogo.png",
        "output": "str",
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "d8e50beb.98d0b8"
            ]
        ]
    },
    {
        "id": "fafa9afc.e8fb48",
        "type": "http in",
        "z": "2b074b3a.632fb4",
        "name": "/mybrantevik",
        "url": "/mybrantevik",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "5c6e29b6.055de8"
            ]
        ]
    }
]